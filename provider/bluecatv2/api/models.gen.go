// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package api

import (
	"encoding/json"
	"time"

	"github.com/oapi-codegen/runtime"
)

const (
	BasicAuthenticationScopes = "basicAuthentication.Scopes"
	BearerTokenScopes         = "bearerToken.Scopes"
)

// Defines values for AbstractServerCheckIntegrityValidation.
const (
	AbstractServerCheckIntegrityValidationFULL         AbstractServerCheckIntegrityValidation = "FULL"
	AbstractServerCheckIntegrityValidationFULLSIBLING  AbstractServerCheckIntegrityValidation = "FULL_SIBLING"
	AbstractServerCheckIntegrityValidationLOCAL        AbstractServerCheckIntegrityValidation = "LOCAL"
	AbstractServerCheckIntegrityValidationLOCALSIBLING AbstractServerCheckIntegrityValidation = "LOCAL_SIBLING"
	AbstractServerCheckIntegrityValidationNONE         AbstractServerCheckIntegrityValidation = "NONE"
)

// Defines values for AbstractServerCheckMxCnameValidation.
const (
	AbstractServerCheckMxCnameValidationFAIL   AbstractServerCheckMxCnameValidation = "FAIL"
	AbstractServerCheckMxCnameValidationIGNORE AbstractServerCheckMxCnameValidation = "IGNORE"
	AbstractServerCheckMxCnameValidationWARN   AbstractServerCheckMxCnameValidation = "WARN"
)

// Defines values for AbstractServerCheckMxValidation.
const (
	AbstractServerCheckMxValidationFAIL   AbstractServerCheckMxValidation = "FAIL"
	AbstractServerCheckMxValidationIGNORE AbstractServerCheckMxValidation = "IGNORE"
	AbstractServerCheckMxValidationWARN   AbstractServerCheckMxValidation = "WARN"
)

// Defines values for AbstractServerCheckNamesValidation.
const (
	AbstractServerCheckNamesValidationFAIL   AbstractServerCheckNamesValidation = "FAIL"
	AbstractServerCheckNamesValidationIGNORE AbstractServerCheckNamesValidation = "IGNORE"
	AbstractServerCheckNamesValidationWARN   AbstractServerCheckNamesValidation = "WARN"
)

// Defines values for AbstractServerCheckNsValidation.
const (
	AbstractServerCheckNsValidationFAIL   AbstractServerCheckNsValidation = "FAIL"
	AbstractServerCheckNsValidationIGNORE AbstractServerCheckNsValidation = "IGNORE"
	AbstractServerCheckNsValidationWARN   AbstractServerCheckNsValidation = "WARN"
)

// Defines values for AbstractServerCheckSrvCnameValidation.
const (
	AbstractServerCheckSrvCnameValidationFAIL   AbstractServerCheckSrvCnameValidation = "FAIL"
	AbstractServerCheckSrvCnameValidationIGNORE AbstractServerCheckSrvCnameValidation = "IGNORE"
	AbstractServerCheckSrvCnameValidationWARN   AbstractServerCheckSrvCnameValidation = "WARN"
)

// Defines values for AbstractServerCheckWildcardValidation.
const (
	AbstractServerCheckWildcardValidationIGNORE AbstractServerCheckWildcardValidation = "IGNORE"
	AbstractServerCheckWildcardValidationWARN   AbstractServerCheckWildcardValidation = "WARN"
)

// Defines values for AbstractServerProfile.
const (
	ADONISXMB3        AbstractServerProfile = "ADONIS_XMB3"
	ADONISXMB4        AbstractServerProfile = "ADONIS_XMB4"
	BLUECATBRANCHH    AbstractServerProfile = "BLUECAT_BRANCH_H"
	BLUECATBRANCHL    AbstractServerProfile = "BLUECAT_BRANCH_L"
	BLUECATCORE       AbstractServerProfile = "BLUECAT_CORE"
	BLUECATENTERPRISE AbstractServerProfile = "BLUECAT_ENTERPRISE"
	CLOUDDNSSERVER    AbstractServerProfile = "CLOUD_DNS_SERVER"
	DNSDHCPGEN42000   AbstractServerProfile = "DNS_DHCP_GEN4_2000"
	DNSDHCPGEN44000   AbstractServerProfile = "DNS_DHCP_GEN4_4000"
	DNSDHCPGEN45000   AbstractServerProfile = "DNS_DHCP_GEN4_5000"
	DNSDHCPGEN47000   AbstractServerProfile = "DNS_DHCP_GEN4_7000"
	DNSDHCPSERVER100  AbstractServerProfile = "DNS_DHCP_SERVER_100"
	DNSDHCPSERVER100D AbstractServerProfile = "DNS_DHCP_SERVER_100_D"
	DNSDHCPSERVER20   AbstractServerProfile = "DNS_DHCP_SERVER_20"
	DNSDHCPSERVER45   AbstractServerProfile = "DNS_DHCP_SERVER_45"
	DNSDHCPSERVER60   AbstractServerProfile = "DNS_DHCP_SERVER_60"
	GTM               AbstractServerProfile = "GTM"
	LEGACY            AbstractServerProfile = "LEGACY"
	LTM               AbstractServerProfile = "LTM"
	OTHERDNSSERVER    AbstractServerProfile = "OTHER_DNS_SERVER"
)

// Defines values for AbstractServerState.
const (
	DISABLED     AbstractServerState = "DISABLED"
	ENABLED      AbstractServerState = "ENABLED"
	FAILOVER     AbstractServerState = "FAILOVER"
	REPAIR       AbstractServerState = "REPAIR"
	RESETCONTROL AbstractServerState = "RESET_CONTROL"
)

// Defines values for AbstractServerType.
const (
	AbstractServerTypeAbstractServer AbstractServerType = "AbstractServer"
)

// Defines values for AddressState.
const (
	AddressStateDHCPABANDONED  AddressState = "DHCP_ABANDONED"
	AddressStateDHCPALLOCATED  AddressState = "DHCP_ALLOCATED"
	AddressStateDHCPEXCLUDED   AddressState = "DHCP_EXCLUDED"
	AddressStateDHCPFREE       AddressState = "DHCP_FREE"
	AddressStateDHCPLEASED     AddressState = "DHCP_LEASED"
	AddressStateDHCPRESERVED   AddressState = "DHCP_RESERVED"
	AddressStateDHCPUNASSIGNED AddressState = "DHCP_UNASSIGNED"
	AddressStateGATEWAY        AddressState = "GATEWAY"
	AddressStateRESERVED       AddressState = "RESERVED"
	AddressStateRESTRICTED     AddressState = "RESTRICTED"
	AddressStateSTATIC         AddressState = "STATIC"
	AddressStateUNASSIGNED     AddressState = "UNASSIGNED"
)

// Defines values for AdministrativeResourceAccessRightBeanAccessLevel.
const (
	AdministrativeResourceAccessRightBeanAccessLevelFULL AdministrativeResourceAccessRightBeanAccessLevel = "FULL"
	AdministrativeResourceAccessRightBeanAccessLevelHIDE AdministrativeResourceAccessRightBeanAccessLevel = "HIDE"
	AdministrativeResourceAccessRightBeanAccessLevelVIEW AdministrativeResourceAccessRightBeanAccessLevel = "VIEW"
)

// Defines values for AdministrativeResourceAccessRightBeanResourceType.
const (
	Event  AdministrativeResourceAccessRightBeanResourceType = "Event"
	Log    AdministrativeResourceAccessRightBeanResourceType = "Log"
	Report AdministrativeResourceAccessRightBeanResourceType = "Report"
)

// Defines values for AliasRecordRecordType.
const (
	CNAME AliasRecordRecordType = "CNAME"
)

// Defines values for AliasRecordType.
const (
	AliasRecordTypeAliasRecord AliasRecordType = "AliasRecord"
)

// Defines values for AuthenticatorType.
const (
	AuthenticatorTypeAuthenticator AuthenticatorType = "Authenticator"
)

// Defines values for BadRequestErrorCode.
const (
	ActiveServerConfigurationError                  BadRequestErrorCode = "ActiveServerConfigurationError"
	ActiveServerMissingHaBackbone                   BadRequestErrorCode = "ActiveServerMissingHaBackbone"
	AddressHasLinkedRecords                         BadRequestErrorCode = "AddressHasLinkedRecords"
	AddressIsBroadcastAddress                       BadRequestErrorCode = "AddressIsBroadcastAddress"
	AddressIsNetworkId                              BadRequestErrorCode = "AddressIsNetworkId"
	AddressIsNetworkRouterAnycast                   BadRequestErrorCode = "AddressIsNetworkRouterAnycast"
	AddressIsReserved                               BadRequestErrorCode = "AddressIsReserved"
	AddressNotInNetwork                             BadRequestErrorCode = "AddressNotInNetwork"
	AddressNotInRestrictedRanges                    BadRequestErrorCode = "AddressNotInRestrictedRanges"
	AddressProtocolMatch                            BadRequestErrorCode = "AddressProtocolMatch"
	AddressProtocolMismatch                         BadRequestErrorCode = "AddressProtocolMismatch"
	ArrayFieldSizeTooBig                            BadRequestErrorCode = "ArrayFieldSizeTooBig"
	ArrayFieldSizeTooSmall                          BadRequestErrorCode = "ArrayFieldSizeTooSmall"
	AuthenticatorMismatch                           BadRequestErrorCode = "AuthenticatorMismatch"
	BlankFieldValue                                 BadRequestErrorCode = "BlankFieldValue"
	BrokenMandatoryDependency                       BadRequestErrorCode = "BrokenMandatoryDependency"
	BrokenOptionalDependency                        BadRequestErrorCode = "BrokenOptionalDependency"
	CannotAssociateServerAssignedOption             BadRequestErrorCode = "CannotAssociateServerAssignedOption"
	CannotEnableSso                                 BadRequestErrorCode = "CannotEnableSso"
	CannotFailoverWhileNodesDisconnected            BadRequestErrorCode = "CannotFailoverWhileNodesDisconnected"
	CannotFetchGroupsFromLdapAuthenticator          BadRequestErrorCode = "CannotFetchGroupsFromLdapAuthenticator"
	ConflictingFieldsList                           BadRequestErrorCode = "ConflictingFieldsList"
	ConflictingOrderBySortDirections                BadRequestErrorCode = "ConflictingOrderBySortDirections"
	ConflictingResourceFieldValues                  BadRequestErrorCode = "ConflictingResourceFieldValues"
	CreateUpdateNetworkGatewayNotSupported          BadRequestErrorCode = "CreateUpdateNetworkGatewayNotSupported"
	DatabaseNotInReplicatedState                    BadRequestErrorCode = "DatabaseNotInReplicatedState"
	DatabaseReplicationInProgress                   BadRequestErrorCode = "DatabaseReplicationInProgress"
	DedicatedManagementNotEnabled                   BadRequestErrorCode = "DedicatedManagementNotEnabled"
	DeleteAuthenticatorNotAllowed                   BadRequestErrorCode = "DeleteAuthenticatorNotAllowed"
	DeploymentFailedToStart                         BadRequestErrorCode = "DeploymentFailedToStart"
	DhcpDeploymentValidationNotEnabled              BadRequestErrorCode = "DhcpDeploymentValidationNotEnabled"
	DnsDeploymentValidationNotEnabled               BadRequestErrorCode = "DnsDeploymentValidationNotEnabled"
	DuplicateFieldValue                             BadRequestErrorCode = "DuplicateFieldValue"
	DuplicateFilterField                            BadRequestErrorCode = "DuplicateFilterField"
	DuplicateOrderByField                           BadRequestErrorCode = "DuplicateOrderByField"
	DuplicateOrderByOperator                        BadRequestErrorCode = "DuplicateOrderByOperator"
	DurationValueNotDivisibleBy                     BadRequestErrorCode = "DurationValueNotDivisibleBy"
	DurationValueOutsideRange                       BadRequestErrorCode = "DurationValueOutsideRange"
	EmptyFieldValue                                 BadRequestErrorCode = "EmptyFieldValue"
	EmptyRequestBody                                BadRequestErrorCode = "EmptyRequestBody"
	FailoverTargetAlreadyPrimaryServer              BadRequestErrorCode = "FailoverTargetAlreadyPrimaryServer"
	FieldHasPatchOnlyUpdate                         BadRequestErrorCode = "FieldHasPatchOnlyUpdate"
	FieldNotPatchable                               BadRequestErrorCode = "FieldNotPatchable"
	FieldValueTooSmall                              BadRequestErrorCode = "FieldValueTooSmall"
	FieldsParseError                                BadRequestErrorCode = "FieldsParseError"
	FieldsTokenError                                BadRequestErrorCode = "FieldsTokenError"
	FilterNeedsRefinement                           BadRequestErrorCode = "FilterNeedsRefinement"
	FilterParseError                                BadRequestErrorCode = "FilterParseError"
	FilterTokenError                                BadRequestErrorCode = "FilterTokenError"
	ImportInProgress                                BadRequestErrorCode = "ImportInProgress"
	IncompatibleServerProfile                       BadRequestErrorCode = "IncompatibleServerProfile"
	IncompatibleServerVersion                       BadRequestErrorCode = "IncompatibleServerVersion"
	InterfaceRedundancyConfigurationError           BadRequestErrorCode = "InterfaceRedundancyConfigurationError"
	InvalidAnycastAddress                           BadRequestErrorCode = "InvalidAnycastAddress"
	InvalidAsciiString                              BadRequestErrorCode = "InvalidAsciiString"
	InvalidBase64Value                              BadRequestErrorCode = "InvalidBase64Value"
	InvalidCsv                                      BadRequestErrorCode = "InvalidCsv"
	InvalidDateValue                                BadRequestErrorCode = "InvalidDateValue"
	InvalidDnsFeedLicense                           BadRequestErrorCode = "InvalidDnsFeedLicense"
	InvalidDuidValue                                BadRequestErrorCode = "InvalidDuidValue"
	InvalidDurationValue                            BadRequestErrorCode = "InvalidDurationValue"
	InvalidEmailAddress                             BadRequestErrorCode = "InvalidEmailAddress"
	InvalidEnumValue                                BadRequestErrorCode = "InvalidEnumValue"
	InvalidEnumZoneAbsoluteNameLength               BadRequestErrorCode = "InvalidEnumZoneAbsoluteNameLength"
	InvalidEnumZoneName                             BadRequestErrorCode = "InvalidEnumZoneName"
	InvalidFieldName                                BadRequestErrorCode = "InvalidFieldName"
	InvalidFieldPath                                BadRequestErrorCode = "InvalidFieldPath"
	InvalidFileCharacterEncoding                    BadRequestErrorCode = "InvalidFileCharacterEncoding"
	InvalidFileContentDisposition                   BadRequestErrorCode = "InvalidFileContentDisposition"
	InvalidFileDataValue                            BadRequestErrorCode = "InvalidFileDataValue"
	InvalidFilterAddress                            BadRequestErrorCode = "InvalidFilterAddress"
	InvalidFilterAddressRange                       BadRequestErrorCode = "InvalidFilterAddressRange"
	InvalidFilterAddressRangeSize                   BadRequestErrorCode = "InvalidFilterAddressRangeSize"
	InvalidFilterCountsAndPercentages               BadRequestErrorCode = "InvalidFilterCountsAndPercentages"
	InvalidFilterDate                               BadRequestErrorCode = "InvalidFilterDate"
	InvalidFilterEnumValue                          BadRequestErrorCode = "InvalidFilterEnumValue"
	InvalidFilterField                              BadRequestErrorCode = "InvalidFilterField"
	InvalidFilterMacAddress                         BadRequestErrorCode = "InvalidFilterMacAddress"
	InvalidFilterPartialAddress                     BadRequestErrorCode = "InvalidFilterPartialAddress"
	InvalidFilterPercentage                         BadRequestErrorCode = "InvalidFilterPercentage"
	InvalidFilterValue                              BadRequestErrorCode = "InvalidFilterValue"
	InvalidFilterValueType                          BadRequestErrorCode = "InvalidFilterValueType"
	InvalidFullyQualifiedDomainName                 BadRequestErrorCode = "InvalidFullyQualifiedDomainName"
	InvalidFullyQualifiedDomainNameField            BadRequestErrorCode = "InvalidFullyQualifiedDomainNameField"
	InvalidGatewayMountPointValue                   BadRequestErrorCode = "InvalidGatewayMountPointValue"
	InvalidHeaderValue                              BadRequestErrorCode = "InvalidHeaderValue"
	InvalidInlinedResource                          BadRequestErrorCode = "InvalidInlinedResource"
	InvalidIpAddressOrFullyQualifiedDomainNameValue BadRequestErrorCode = "InvalidIpAddressOrFullyQualifiedDomainNameValue"
	InvalidIpAddressState                           BadRequestErrorCode = "InvalidIpAddressState"
	InvalidIpAddressValue                           BadRequestErrorCode = "InvalidIpAddressValue"
	InvalidIpBlockValue                             BadRequestErrorCode = "InvalidIpBlockValue"
	InvalidIpRangeValue                             BadRequestErrorCode = "InvalidIpRangeValue"
	InvalidIpv4AddressValue                         BadRequestErrorCode = "InvalidIpv4AddressValue"
	InvalidIpv4LoopbackPrefixLength                 BadRequestErrorCode = "InvalidIpv4LoopbackPrefixLength"
	InvalidIpv4RangeValue                           BadRequestErrorCode = "InvalidIpv4RangeValue"
	InvalidIpv6AddressValue                         BadRequestErrorCode = "InvalidIpv6AddressValue"
	InvalidIpv6BlockPrefixLength                    BadRequestErrorCode = "InvalidIpv6BlockPrefixLength"
	InvalidIpv6LoopbackPrefixLength                 BadRequestErrorCode = "InvalidIpv6LoopbackPrefixLength"
	InvalidIpv6NetworkPrefixLength                  BadRequestErrorCode = "InvalidIpv6NetworkPrefixLength"
	InvalidIpv6RangeValue                           BadRequestErrorCode = "InvalidIpv6RangeValue"
	InvalidLdapGroupName                            BadRequestErrorCode = "InvalidLdapGroupName"
	InvalidLimitParameterValue                      BadRequestErrorCode = "InvalidLimitParameterValue"
	InvalidLocationCode                             BadRequestErrorCode = "InvalidLocationCode"
	InvalidMacAddressValue                          BadRequestErrorCode = "InvalidMacAddressValue"
	InvalidMatchCriteria                            BadRequestErrorCode = "InvalidMatchCriteria"
	InvalidMoveDestination                          BadRequestErrorCode = "InvalidMoveDestination"
	InvalidNtpServerAddressForStratum               BadRequestErrorCode = "InvalidNtpServerAddressForStratum"
	InvalidNumberZoneAbsoluteNameLength             BadRequestErrorCode = "InvalidNumberZoneAbsoluteNameLength"
	InvalidOffsetParameterValue                     BadRequestErrorCode = "InvalidOffsetParameterValue"
	InvalidPaginationParameter                      BadRequestErrorCode = "InvalidPaginationParameter"
	InvalidPartialMacAddressFilter                  BadRequestErrorCode = "InvalidPartialMacAddressFilter"
	InvalidPolicyItemNameValue                      BadRequestErrorCode = "InvalidPolicyItemNameValue"
	InvalidPrivateKeyValue                          BadRequestErrorCode = "InvalidPrivateKeyValue"
	InvalidQueryParameterValue                      BadRequestErrorCode = "InvalidQueryParameterValue"
	InvalidRegularExpression                        BadRequestErrorCode = "InvalidRegularExpression"
	InvalidResourceFieldValue                       BadRequestErrorCode = "InvalidResourceFieldValue"
	InvalidResourceId                               BadRequestErrorCode = "InvalidResourceId"
	InvalidResourceRecordData                       BadRequestErrorCode = "InvalidResourceRecordData"
	InvalidResourceType                             BadRequestErrorCode = "InvalidResourceType"
	InvalidRetentionRestrictions                    BadRequestErrorCode = "InvalidRetentionRestrictions"
	InvalidServerPatchFile                          BadRequestErrorCode = "InvalidServerPatchFile"
	InvalidSplitPointAddress                        BadRequestErrorCode = "InvalidSplitPointAddress"
	InvalidStartEndDates                            BadRequestErrorCode = "InvalidStartEndDates"
	InvalidStringCharacters                         BadRequestErrorCode = "InvalidStringCharacters"
	InvalidStringFieldPrefix                        BadRequestErrorCode = "InvalidStringFieldPrefix"
	InvalidTopLevelMerge                            BadRequestErrorCode = "InvalidTopLevelMerge"
	InvalidTrustRelationshipCredentials             BadRequestErrorCode = "InvalidTrustRelationshipCredentials"
	InvalidTtlValue                                 BadRequestErrorCode = "InvalidTtlValue"
	InvalidUdfDateValue                             BadRequestErrorCode = "InvalidUdfDateValue"
	InvalidUdfDefaultValue                          BadRequestErrorCode = "InvalidUdfDefaultValue"
	InvalidUdfEmailValue                            BadRequestErrorCode = "InvalidUdfEmailValue"
	InvalidUdfNumberValue                           BadRequestErrorCode = "InvalidUdfNumberValue"
	InvalidUdfPredefinedValue                       BadRequestErrorCode = "InvalidUdfPredefinedValue"
	InvalidUdfPredefinedValues                      BadRequestErrorCode = "InvalidUdfPredefinedValues"
	InvalidUdfUrlValue                              BadRequestErrorCode = "InvalidUdfUrlValue"
	InvalidUdfValidationProperties                  BadRequestErrorCode = "InvalidUdfValidationProperties"
	InvalidUdfValue                                 BadRequestErrorCode = "InvalidUdfValue"
	InvalidUidValue                                 BadRequestErrorCode = "InvalidUidValue"
	InvalidUndoTransactionId                        BadRequestErrorCode = "InvalidUndoTransactionId"
	InvalidUrlScheme                                BadRequestErrorCode = "InvalidUrlScheme"
	InvalidUrlValue                                 BadRequestErrorCode = "InvalidUrlValue"
	InvalidX509CertificateValue                     BadRequestErrorCode = "InvalidX509CertificateValue"
	InvalidZoneName                                 BadRequestErrorCode = "InvalidZoneName"
	IpRangeBroadcastOrNetworkIdAssigned             BadRequestErrorCode = "IpRangeBroadcastOrNetworkIdAssigned"
	IpRangeDoesNotOverlap                           BadRequestErrorCode = "IpRangeDoesNotOverlap"
	IpRangeExcludesAssignedAddresses                BadRequestErrorCode = "IpRangeExcludesAssignedAddresses"
	IpRangeExcludesChildRanges                      BadRequestErrorCode = "IpRangeExcludesChildRanges"
	IpRangeExcludesDhcpRanges                       BadRequestErrorCode = "IpRangeExcludesDhcpRanges"
	IpRangeExcludesGateway                          BadRequestErrorCode = "IpRangeExcludesGateway"
	IpRangeIncludesGateway                          BadRequestErrorCode = "IpRangeIncludesGateway"
	IpRangeNotAlignedOnRangeBoundary                BadRequestErrorCode = "IpRangeNotAlignedOnRangeBoundary"
	IpRangeOutsideNetworkBlockBoundary              BadRequestErrorCode = "IpRangeOutsideNetworkBlockBoundary"
	IpRangeOutsideParent                            BadRequestErrorCode = "IpRangeOutsideParent"
	IpRangeOverlapsRangeInOtherConfiguration        BadRequestErrorCode = "IpRangeOverlapsRangeInOtherConfiguration"
	IpRangeOverlapsSiblings                         BadRequestErrorCode = "IpRangeOverlapsSiblings"
	IpRangePartiallyIncludesChildRanges             BadRequestErrorCode = "IpRangePartiallyIncludesChildRanges"
	IpRangeTooBig                                   BadRequestErrorCode = "IpRangeTooBig"
	IpRangeTooSmall                                 BadRequestErrorCode = "IpRangeTooSmall"
	JsonDeserializationError                        BadRequestErrorCode = "JsonDeserializationError"
	JsonFieldParseError                             BadRequestErrorCode = "JsonFieldParseError"
	JsonParseError                                  BadRequestErrorCode = "JsonParseError"
	MacAddressInUse                                 BadRequestErrorCode = "MacAddressInUse"
	MismatchedLocationCodeParent                    BadRequestErrorCode = "MismatchedLocationCodeParent"
	MismatchedManagementAndServicesInterfaces       BadRequestErrorCode = "MismatchedManagementAndServicesInterfaces"
	MismatchedMergeTypes                            BadRequestErrorCode = "MismatchedMergeTypes"
	MissingMandatoryChangeControlComment            BadRequestErrorCode = "MissingMandatoryChangeControlComment"
	MissingMergeDestinationInSiblings               BadRequestErrorCode = "MissingMergeDestinationInSiblings"
	MissingPatchableField                           BadRequestErrorCode = "MissingPatchableField"
	MissingQueryParameter                           BadRequestErrorCode = "MissingQueryParameter"
	MissingRequiredDeploymentRoleInterface          BadRequestErrorCode = "MissingRequiredDeploymentRoleInterface"
	MissingRequiredField                            BadRequestErrorCode = "MissingRequiredField"
	MissingRequiredFilterField                      BadRequestErrorCode = "MissingRequiredFilterField"
	MissingRequiredFilterPredicate                  BadRequestErrorCode = "MissingRequiredFilterPredicate"
	MoveAddressUnsupportedState                     BadRequestErrorCode = "MoveAddressUnsupportedState"
	MoveRolesWithOptionsOnServer                    BadRequestErrorCode = "MoveRolesWithOptionsOnServer"
	MultipleBgpNeighborsNotSupported                BadRequestErrorCode = "MultipleBgpNeighborsNotSupported"
	MultipleQueryParameterValues                    BadRequestErrorCode = "MultipleQueryParameterValues"
	MultipleValuesNotAllowed                        BadRequestErrorCode = "MultipleValuesNotAllowed"
	NamingPolicyRestrictionViolation                BadRequestErrorCode = "NamingPolicyRestrictionViolation"
	NamingPolicyViolation                           BadRequestErrorCode = "NamingPolicyViolation"
	NetworkInterfaceNotConfigured                   BadRequestErrorCode = "NetworkInterfaceNotConfigured"
	NoAssignedDeploymentRoles                       BadRequestErrorCode = "NoAssignedDeploymentRoles"
	NoHsmConfiguration                              BadRequestErrorCode = "NoHsmConfiguration"
	NoKeyDistributionCentersInRealm                 BadRequestErrorCode = "NoKeyDistributionCentersInRealm"
	NoPreviousFullDeploymentForDifferential         BadRequestErrorCode = "NoPreviousFullDeploymentForDifferential"
	NoSpaceForAddress                               BadRequestErrorCode = "NoSpaceForAddress"
	NoSpaceForBlock                                 BadRequestErrorCode = "NoSpaceForBlock"
	NoSpaceForNetwork                               BadRequestErrorCode = "NoSpaceForNetwork"
	NoSpaceForRange                                 BadRequestErrorCode = "NoSpaceForRange"
	NothingToDeployForUser                          BadRequestErrorCode = "NothingToDeployForUser"
	OrderByParseError                               BadRequestErrorCode = "OrderByParseError"
	OrderByTokenError                               BadRequestErrorCode = "OrderByTokenError"
	PaginationNotSupported                          BadRequestErrorCode = "PaginationNotSupported"
	PassiveServerConfigurationError                 BadRequestErrorCode = "PassiveServerConfigurationError"
	PassiveServerIsF5PoolMember                     BadRequestErrorCode = "PassiveServerIsF5PoolMember"
	PassiveServerMissingHaBackbone                  BadRequestErrorCode = "PassiveServerMissingHaBackbone"
	PasswordFailedRequirements                      BadRequestErrorCode = "PasswordFailedRequirements"
	RedirectPolicyTypeDisabled                      BadRequestErrorCode = "RedirectPolicyTypeDisabled"
	ReplicatedServerLimitReached                    BadRequestErrorCode = "ReplicatedServerLimitReached"
	ReplicationOperationNotAllowed                  BadRequestErrorCode = "ReplicationOperationNotAllowed"
	ResetServerServicesRequired                     BadRequestErrorCode = "ResetServerServicesRequired"
	ResourceFieldNotInConfiguration                 BadRequestErrorCode = "ResourceFieldNotInConfiguration"
	ResourceFieldNotInRestrictedZones               BadRequestErrorCode = "ResourceFieldNotInRestrictedZones"
	ResourceHasCircularReference                    BadRequestErrorCode = "ResourceHasCircularReference"
	ResourceHasRecordsNotInZone                     BadRequestErrorCode = "ResourceHasRecordsNotInZone"
	ResourceNotInConfiguration                      BadRequestErrorCode = "ResourceNotInConfiguration"
	ResourceNotInRestrictedZones                    BadRequestErrorCode = "ResourceNotInRestrictedZones"
	ResourceNotInTemplate                           BadRequestErrorCode = "ResourceNotInTemplate"
	ResourceNotInView                               BadRequestErrorCode = "ResourceNotInView"
	ServerCommandError                              BadRequestErrorCode = "ServerCommandError"
	ServerControlResetRequired                      BadRequestErrorCode = "ServerControlResetRequired"
	ServerGroupNotMultiPrimary                      BadRequestErrorCode = "ServerGroupNotMultiPrimary"
	ServerGroupSizeLimitReached                     BadRequestErrorCode = "ServerGroupSizeLimitReached"
	ServerHasAssignedDeploymentOptions              BadRequestErrorCode = "ServerHasAssignedDeploymentOptions"
	ServerHasAssignedDeploymentRoles                BadRequestErrorCode = "ServerHasAssignedDeploymentRoles"
	ServerIsDeploying                               BadRequestErrorCode = "ServerIsDeploying"
	ServerIsMultiPrimaryServerGroupMember           BadRequestErrorCode = "ServerIsMultiPrimaryServerGroupMember"
	ServerIsPassive                                 BadRequestErrorCode = "ServerIsPassive"
	ServerManagementAddressProtocolMismatch         BadRequestErrorCode = "ServerManagementAddressProtocolMismatch"
	ServerNotActive                                 BadRequestErrorCode = "ServerNotActive"
	ServerNotDisabled                               BadRequestErrorCode = "ServerNotDisabled"
	ServerNotManaged                                BadRequestErrorCode = "ServerNotManaged"
	ServerNotStandaloneServer                       BadRequestErrorCode = "ServerNotStandaloneServer"
	ServerNotTrusted                                BadRequestErrorCode = "ServerNotTrusted"
	ServerServiceInterfaceNameMismatch              BadRequestErrorCode = "ServerServiceInterfaceNameMismatch"
	ServerSslHandshakeError                         BadRequestErrorCode = "ServerSslHandshakeError"
	SigningPolicyInUse                              BadRequestErrorCode = "SigningPolicyInUse"
	SsoEnforcementRequirementsUnmet                 BadRequestErrorCode = "SsoEnforcementRequirementsUnmet"
	StringFieldTooBig                               BadRequestErrorCode = "StringFieldTooBig"
	StringFieldTooSmall                             BadRequestErrorCode = "StringFieldTooSmall"
	TemplateApplicationFailedToStart                BadRequestErrorCode = "TemplateApplicationFailedToStart"
	TemplateNotAssigned                             BadRequestErrorCode = "TemplateNotAssigned"
	TotalCountNotSupported                          BadRequestErrorCode = "TotalCountNotSupported"
	TrustRelationshipLimitReached                   BadRequestErrorCode = "TrustRelationshipLimitReached"
	UdfPredefinedValueInUse                         BadRequestErrorCode = "UdfPredefinedValueInUse"
	UdfValidationPropertiesInUse                    BadRequestErrorCode = "UdfValidationPropertiesInUse"
	UdfValueExceedsMaximumLength                    BadRequestErrorCode = "UdfValueExceedsMaximumLength"
	UdfValueLessThanMinimum                         BadRequestErrorCode = "UdfValueLessThanMinimum"
	UdfValueLessThanMinimumLength                   BadRequestErrorCode = "UdfValueLessThanMinimumLength"
	UdfValueOutsideRange                            BadRequestErrorCode = "UdfValueOutsideRange"
	UnsupportedAggregateFilterOperator              BadRequestErrorCode = "UnsupportedAggregateFilterOperator"
	UnsupportedAggregateOperator                    BadRequestErrorCode = "UnsupportedAggregateOperator"
	UnsupportedDeploymentOptionScope                BadRequestErrorCode = "UnsupportedDeploymentOptionScope"
	UnsupportedDeploymentRoleInterfaceType          BadRequestErrorCode = "UnsupportedDeploymentRoleInterfaceType"
	UnsupportedEmbeddableCollection                 BadRequestErrorCode = "UnsupportedEmbeddableCollection"
	UnsupportedEmbeddableResource                   BadRequestErrorCode = "UnsupportedEmbeddableResource"
	UnsupportedFieldsOperatorForMediaType           BadRequestErrorCode = "UnsupportedFieldsOperatorForMediaType"
	UnsupportedFilterOperator                       BadRequestErrorCode = "UnsupportedFilterOperator"
	UnsupportedFilterOperatorForNullValue           BadRequestErrorCode = "UnsupportedFilterOperatorForNullValue"
	UnsupportedHeaderEncoding                       BadRequestErrorCode = "UnsupportedHeaderEncoding"
	UnsupportedHeaderValue                          BadRequestErrorCode = "UnsupportedHeaderValue"
	UnsupportedImportFileType                       BadRequestErrorCode = "UnsupportedImportFileType"
	UnsupportedMultiPrimaryDeploymentOption         BadRequestErrorCode = "UnsupportedMultiPrimaryDeploymentOption"
	UnsupportedOrderByField                         BadRequestErrorCode = "UnsupportedOrderByField"
	UnsupportedOrderByOperator                      BadRequestErrorCode = "UnsupportedOrderByOperator"
	UnsupportedResourceFieldValue                   BadRequestErrorCode = "UnsupportedResourceFieldValue"
	UnsupportedResourceType                         BadRequestErrorCode = "UnsupportedResourceType"
	UnsupportedServerCommand                        BadRequestErrorCode = "UnsupportedServerCommand"
	ValueLessThanMinimum                            BadRequestErrorCode = "ValueLessThanMinimum"
	ValueOutsideRange                               BadRequestErrorCode = "ValueOutsideRange"
	WorkflowRequestNotPending                       BadRequestErrorCode = "WorkflowRequestNotPending"
	WrongCsvRowFieldCount                           BadRequestErrorCode = "WrongCsvRowFieldCount"
	WrongResourceType                               BadRequestErrorCode = "WrongResourceType"
)

// Defines values for BadRequestErrorReason.
const (
	BadRequest BadRequestErrorReason = "Bad Request"
)

// Defines values for BadRequestErrorStatus.
const (
	N400 BadRequestErrorStatus = 400
)

// Defines values for ConflictErrorCode.
const (
	IpAddressConflictsWithSplitNetwork ConflictErrorCode = "IpAddressConflictsWithSplitNetwork"
	IpGroupConflictsWithSplitNetwork   ConflictErrorCode = "IpGroupConflictsWithSplitNetwork"
	IpRangeConflictsWithSplitNetwork   ConflictErrorCode = "IpRangeConflictsWithSplitNetwork"
	ResourceAlreadyExists              ConflictErrorCode = "ResourceAlreadyExists"
	ResourceConflictsWithOther         ConflictErrorCode = "ResourceConflictsWithOther"
	StaleResourceState                 ConflictErrorCode = "StaleResourceState"
	WorkflowRequestAlreadyPending      ConflictErrorCode = "WorkflowRequestAlreadyPending"
)

// Defines values for ConflictErrorReason.
const (
	Conflict ConflictErrorReason = "Conflict"
)

// Defines values for ConflictErrorStatus.
const (
	N409 ConflictErrorStatus = 409
)

// Defines values for ENUMNumberZoneType.
const (
	ENUMNumberZoneTypeENUMNumberZone ENUMNumberZoneType = "ENUMNumberZone"
)

// Defines values for ENUMZoneType.
const (
	ENUMZoneTypeENUMZone ENUMZoneType = "ENUMZone"
)

// Defines values for ExternalHostRecordType.
const (
	ExternalHostRecordTypeExternalHostRecord ExternalHostRecordType = "ExternalHostRecord"
)

// Defines values for ExternalHostsZoneType.
const (
	ExternalHostsZoneTypeExternalHostsZone ExternalHostsZoneType = "ExternalHostsZone"
)

// Defines values for ForbiddenErrorCode.
const (
	AccessDenied                         ForbiddenErrorCode = "AccessDenied"
	CreateNotAllowed                     ForbiddenErrorCode = "CreateNotAllowed"
	DeleteLastLinkNotAllowed             ForbiddenErrorCode = "DeleteLastLinkNotAllowed"
	DeleteNotAllowed                     ForbiddenErrorCode = "DeleteNotAllowed"
	DisableHaServerServiceNotSupported   ForbiddenErrorCode = "DisableHaServerServiceNotSupported"
	EnableHaServerServiceNotSupported    ForbiddenErrorCode = "EnableHaServerServiceNotSupported"
	FieldUpdateNotAllowed                ForbiddenErrorCode = "FieldUpdateNotAllowed"
	FileSizeTooBig                       ForbiddenErrorCode = "FileSizeTooBig"
	InvalidAuthorizationScheme           ForbiddenErrorCode = "InvalidAuthorizationScheme"
	OperationNotPermitted                ForbiddenErrorCode = "OperationNotPermitted"
	ReadOnlySession                      ForbiddenErrorCode = "ReadOnlySession"
	ReadOnlySessionOnPrimary             ForbiddenErrorCode = "ReadOnlySessionOnPrimary"
	ResourceInUse                        ForbiddenErrorCode = "ResourceInUse"
	ServerInReplication                  ForbiddenErrorCode = "ServerInReplication"
	UpdateNotAllowed                     ForbiddenErrorCode = "UpdateNotAllowed"
	WorkflowRequestApproveDenyNotAllowed ForbiddenErrorCode = "WorkflowRequestApproveDenyNotAllowed"
)

// Defines values for ForbiddenErrorReason.
const (
	Forbidden ForbiddenErrorReason = "Forbidden"
)

// Defines values for ForbiddenErrorStatus.
const (
	N403 ForbiddenErrorStatus = 403
)

// Defines values for GenericRecordRecordType.
const (
	GenericRecordRecordTypeA        GenericRecordRecordType = "A"
	GenericRecordRecordTypeA6       GenericRecordRecordType = "A6"
	GenericRecordRecordTypeAAAA     GenericRecordRecordType = "AAAA"
	GenericRecordRecordTypeAFSDB    GenericRecordRecordType = "AFSDB"
	GenericRecordRecordTypeAPL      GenericRecordRecordType = "APL"
	GenericRecordRecordTypeCAA      GenericRecordRecordType = "CAA"
	GenericRecordRecordTypeCERT     GenericRecordRecordType = "CERT"
	GenericRecordRecordTypeDHCID    GenericRecordRecordType = "DHCID"
	GenericRecordRecordTypeDNAME    GenericRecordRecordType = "DNAME"
	GenericRecordRecordTypeDS       GenericRecordRecordType = "DS"
	GenericRecordRecordTypeIPSECKEY GenericRecordRecordType = "IPSECKEY"
	GenericRecordRecordTypeISDN     GenericRecordRecordType = "ISDN"
	GenericRecordRecordTypeKEY      GenericRecordRecordType = "KEY"
	GenericRecordRecordTypeKX       GenericRecordRecordType = "KX"
	GenericRecordRecordTypeLOC      GenericRecordRecordType = "LOC"
	GenericRecordRecordTypeMB       GenericRecordRecordType = "MB"
	GenericRecordRecordTypeMG       GenericRecordRecordType = "MG"
	GenericRecordRecordTypeMINFO    GenericRecordRecordType = "MINFO"
	GenericRecordRecordTypeMR       GenericRecordRecordType = "MR"
	GenericRecordRecordTypeNS       GenericRecordRecordType = "NS"
	GenericRecordRecordTypeNSAP     GenericRecordRecordType = "NSAP"
	GenericRecordRecordTypePTR      GenericRecordRecordType = "PTR"
	GenericRecordRecordTypePX       GenericRecordRecordType = "PX"
	GenericRecordRecordTypeRP       GenericRecordRecordType = "RP"
	GenericRecordRecordTypeRT       GenericRecordRecordType = "RT"
	GenericRecordRecordTypeSINK     GenericRecordRecordType = "SINK"
	GenericRecordRecordTypeSPF      GenericRecordRecordType = "SPF"
	GenericRecordRecordTypeSSHFP    GenericRecordRecordType = "SSHFP"
	GenericRecordRecordTypeTLSA     GenericRecordRecordType = "TLSA"
	GenericRecordRecordTypeTXT      GenericRecordRecordType = "TXT"
	GenericRecordRecordTypeWKS      GenericRecordRecordType = "WKS"
	GenericRecordRecordTypeX25      GenericRecordRecordType = "X25"
)

// Defines values for GenericRecordType.
const (
	GenericRecordTypeGenericRecord GenericRecordType = "GenericRecord"
)

// Defines values for HINFORecordRecordType.
const (
	HINFO HINFORecordRecordType = "HINFO"
)

// Defines values for HINFORecordType.
const (
	HINFORecordTypeHINFORecord HINFORecordType = "HINFORecord"
)

// Defines values for HTTPSRecordRecordType.
const (
	HTTPS HTTPSRecordRecordType = "HTTPS"
)

// Defines values for HTTPSRecordType.
const (
	HTTPSRecordTypeHTTPSRecord HTTPSRecordType = "HTTPSRecord"
)

// Defines values for HostRecordRecordType.
const (
	A1                 HostRecordRecordType = "A(1)"
	A638               HostRecordRecordType = "A6(38)"
	AAAA28             HostRecordRecordType = "AAAA(28)"
	ADDRS248           HostRecordRecordType = "ADDRS(248)"
	AFSDB18            HostRecordRecordType = "AFSDB(18)"
	ANY255             HostRecordRecordType = "ANY(255)"
	APL42              HostRecordRecordType = "APL(42)"
	ATMA34             HostRecordRecordType = "ATMA(34)"
	AXFR252            HostRecordRecordType = "AXFR(252)"
	CAA257             HostRecordRecordType = "CAA(257)"
	CERT37             HostRecordRecordType = "CERT(37)"
	CNAME5             HostRecordRecordType = "CNAME(5)"
	DHCID49            HostRecordRecordType = "DHCID(49)"
	DLV32769           HostRecordRecordType = "DLV(32769)"
	DNAME39            HostRecordRecordType = "DNAME(39)"
	DNSKEY48           HostRecordRecordType = "DNSKEY(48)"
	DS43               HostRecordRecordType = "DS(43)"
	EID31              HostRecordRecordType = "EID(31)"
	GPOS27             HostRecordRecordType = "GPOS(27)"
	HINFO13            HostRecordRecordType = "HINFO(13)"
	HIP55              HostRecordRecordType = "HIP(55)"
	HTTPS65            HostRecordRecordType = "HTTPS(65)"
	IPSECKEY45         HostRecordRecordType = "IPSECKEY(45)"
	ISDN20             HostRecordRecordType = "ISDN(20)"
	IXFR251            HostRecordRecordType = "IXFR(251)"
	KEY25              HostRecordRecordType = "KEY(25)"
	KX36               HostRecordRecordType = "KX(36)"
	LOC29              HostRecordRecordType = "LOC(29)"
	MAILA254           HostRecordRecordType = "MAILA(254)"
	MAILB253           HostRecordRecordType = "MAILB(253)"
	MB7                HostRecordRecordType = "MB(7)"
	MD3                HostRecordRecordType = "MD(3)"
	MF4                HostRecordRecordType = "MF(4)"
	MG8                HostRecordRecordType = "MG(8)"
	MINFO14            HostRecordRecordType = "MINFO(14)"
	MR9                HostRecordRecordType = "MR(9)"
	MX15               HostRecordRecordType = "MX(15)"
	NAPTR35            HostRecordRecordType = "NAPTR(35)"
	NIMLOC32           HostRecordRecordType = "NIMLOC(32)"
	NS2                HostRecordRecordType = "NS(2)"
	NSAP22             HostRecordRecordType = "NSAP(22)"
	NSAPPTR23          HostRecordRecordType = "NSAP-PTR(23)"
	NSEC350            HostRecordRecordType = "NSEC3(50)"
	NSEC3PARAM51       HostRecordRecordType = "NSEC3PARAM(51)"
	NSEC47             HostRecordRecordType = "NSEC(47)"
	NULL10             HostRecordRecordType = "NULL(10)"
	NXT30              HostRecordRecordType = "NXT(30)"
	OPT41              HostRecordRecordType = "OPT(41)"
	PTR12              HostRecordRecordType = "PTR(12)"
	PX26               HostRecordRecordType = "PX(26)"
	RESERVED6553465534 HostRecordRecordType = "RESERVED_65534(65534)"
	RP17               HostRecordRecordType = "RP(17)"
	RRSIG46            HostRecordRecordType = "RRSIG(46)"
	RT21               HostRecordRecordType = "RT(21)"
	SIG24              HostRecordRecordType = "SIG(24)"
	SINK40             HostRecordRecordType = "SINK(40)"
	SOA6               HostRecordRecordType = "SOA(6)"
	SPF99              HostRecordRecordType = "SPF(99)"
	SRV33              HostRecordRecordType = "SRV(33)"
	SSHFP44            HostRecordRecordType = "SSHFP(44)"
	SVCB64             HostRecordRecordType = "SVCB(64)"
	TKEY249            HostRecordRecordType = "TKEY(249)"
	TLSA52             HostRecordRecordType = "TLSA(52)"
	TSIG250            HostRecordRecordType = "TSIG(250)"
	TXT16              HostRecordRecordType = "TXT(16)"
	UNKNOWN1           HostRecordRecordType = "UNKNOWN(-1)"
	URI256             HostRecordRecordType = "URI(256)"
	WINS65281          HostRecordRecordType = "WINS(65281)"
	WINSR65282         HostRecordRecordType = "WINSR(65282)"
	WKS11              HostRecordRecordType = "WKS(11)"
	X2519              HostRecordRecordType = "X25(19)"
)

// Defines values for HostRecordType.
const (
	HostRecordTypeHostRecord HostRecordType = "HostRecord"
)

// Defines values for IPv4AddressState.
const (
	IPv4AddressStateDHCPRESERVED IPv4AddressState = "DHCP_RESERVED"
	IPv4AddressStateGATEWAY      IPv4AddressState = "GATEWAY"
	IPv4AddressStateRESERVED     IPv4AddressState = "RESERVED"
	IPv4AddressStateSTATIC       IPv4AddressState = "STATIC"
)

// Defines values for IPv4AddressType.
const (
	IPv4AddressTypeIPv4Address IPv4AddressType = "IPv4Address"
)

// Defines values for IPv6AddressReservedUsing.
const (
	CLIENTDUID IPv6AddressReservedUsing = "CLIENT_DUID"
	MACADDRESS IPv6AddressReservedUsing = "MAC_ADDRESS"
)

// Defines values for IPv6AddressState.
const (
	DHCPRESERVED IPv6AddressState = "DHCP_RESERVED"
	STATIC       IPv6AddressState = "STATIC"
)

// Defines values for IPv6AddressType.
const (
	IPv6AddressTypeIPv6Address IPv6AddressType = "IPv6Address"
)

// Defines values for InlinedAliasRecordType.
const (
	InlinedAliasRecordTypeAliasRecord InlinedAliasRecordType = "AliasRecord"
)

// Defines values for InlinedAuthenticatorType.
const (
	InlinedAuthenticatorTypeAuthenticator InlinedAuthenticatorType = "Authenticator"
)

// Defines values for InlinedConfigurationType.
const (
	Configuration InlinedConfigurationType = "Configuration"
)

// Defines values for InlinedDHCPClientIdentifierType.
const (
	DHCPClientIdentifier InlinedDHCPClientIdentifierType = "DHCPClientIdentifier"
)

// Defines values for InlinedDHCPUniqueIdentifierType.
const (
	DHCPUniqueIdentifier InlinedDHCPUniqueIdentifierType = "DHCPUniqueIdentifier"
)

// Defines values for InlinedDNSSECSigningPolicyType.
const (
	DNSSECSigningPolicy InlinedDNSSECSigningPolicyType = "DNSSECSigningPolicy"
)

// Defines values for InlinedDeviceType.
const (
	Device InlinedDeviceType = "Device"
)

// Defines values for InlinedIPv4GroupType.
const (
	IPv4Group InlinedIPv4GroupType = "IPv4Group"
)

// Defines values for InlinedIPv4TemplateType.
const (
	IPv4Template InlinedIPv4TemplateType = "IPv4Template"
)

// Defines values for InlinedKerberosServicePrincipalType.
const (
	KerberosServicePrincipal InlinedKerberosServicePrincipalType = "KerberosServicePrincipal"
)

// Defines values for InlinedLocationType.
const (
	Location InlinedLocationType = "Location"
)

// Defines values for InlinedMACAddressType.
const (
	MACAddress InlinedMACAddressType = "MACAddress"
)

// Defines values for InlinedResourceRecordType.
const (
	InlinedResourceRecordTypeResourceRecord InlinedResourceRecordType = "ResourceRecord"
)

// Defines values for InlinedResponsePolicyType.
const (
	ResponsePolicy InlinedResponsePolicyType = "ResponsePolicy"
)

// Defines values for InlinedViewType.
const (
	InlinedViewTypeView InlinedViewType = "View"
)

// Defines values for InlinedZoneTemplateType.
const (
	ZoneTemplate InlinedZoneTemplateType = "ZoneTemplate"
)

// Defines values for InternalRootZoneType.
const (
	InternalRootZoneTypeInternalRootZone InternalRootZoneType = "InternalRootZone"
)

// Defines values for MXRecordRecordType.
const (
	MX MXRecordRecordType = "MX"
)

// Defines values for MXRecordType.
const (
	MXRecordTypeMXRecord MXRecordType = "MXRecord"
)

// Defines values for NAPTRRecordRecordType.
const (
	NAPTR NAPTRRecordRecordType = "NAPTR"
)

// Defines values for NAPTRRecordType.
const (
	NAPTRRecordTypeNAPTRRecord NAPTRRecordType = "NAPTRRecord"
)

// Defines values for NetworkInterfaceRedundancyScenario.
const (
	ACTIVEACTIVE NetworkInterfaceRedundancyScenario = "ACTIVE_ACTIVE"
	ACTIVEBACKUP NetworkInterfaceRedundancyScenario = "ACTIVE_BACKUP"
)

// Defines values for NetworkInterfaceType.
const (
	NetworkInterfaceTypeNetworkInterface NetworkInterfaceType = "NetworkInterface"
)

// Defines values for NotFoundErrorCode.
const (
	ActiveServerNotConnected           NotFoundErrorCode = "ActiveServerNotConnected"
	CannotConnectToServer              NotFoundErrorCode = "CannotConnectToServer"
	InlinedResourceNotFound            NotFoundErrorCode = "InlinedResourceNotFound"
	NetworkNotFoundForAddress          NotFoundErrorCode = "NetworkNotFoundForAddress"
	PassiveServerNotConnected          NotFoundErrorCode = "PassiveServerNotConnected"
	ResourceFieldNotFound              NotFoundErrorCode = "ResourceFieldNotFound"
	ResourceNotFound                   NotFoundErrorCode = "ResourceNotFound"
	ServerGroupHasNoMembers            NotFoundErrorCode = "ServerGroupHasNoMembers"
	ServerNotConnected                 NotFoundErrorCode = "ServerNotConnected"
	ServerServiceInterfaceNotConnected NotFoundErrorCode = "ServerServiceInterfaceNotConnected"
	WrongResourceCollection            NotFoundErrorCode = "WrongResourceCollection"
)

// Defines values for NotFoundErrorReason.
const (
	NotFound NotFoundErrorReason = "Not Found"
)

// Defines values for NotFoundErrorStatus.
const (
	N404 NotFoundErrorStatus = 404
)

// Defines values for QuickDeploymentState.
const (
	CANCELLED             QuickDeploymentState = "CANCELLED"
	CANCELLING            QuickDeploymentState = "CANCELLING"
	COMPLETED             QuickDeploymentState = "COMPLETED"
	COMPLETEDWITHERRORS   QuickDeploymentState = "COMPLETED_WITH_ERRORS"
	COMPLETEDWITHWARNINGS QuickDeploymentState = "COMPLETED_WITH_WARNINGS"
	FAILED                QuickDeploymentState = "FAILED"
	PENDING               QuickDeploymentState = "PENDING"
	QUEUED                QuickDeploymentState = "QUEUED"
	RUNNING               QuickDeploymentState = "RUNNING"
	UNKNOWN               QuickDeploymentState = "UNKNOWN"
)

// Defines values for QuickDeploymentStatus.
const (
	CANCEL QuickDeploymentStatus = "CANCEL"
)

// Defines values for QuickDeploymentType.
const (
	QuickDeploymentTypeQuickDeployment QuickDeploymentType = "QuickDeployment"
)

// Defines values for ResourceRecordType.
const (
	ResourceRecordTypeResourceRecord ResourceRecordType = "ResourceRecord"
)

// Defines values for ResponsePolicyZoneOverridePolicyType.
const (
	ALLOWLIST ResponsePolicyZoneOverridePolicyType = "ALLOWLIST"
	BLACKHOLE ResponsePolicyZoneOverridePolicyType = "BLACKHOLE"
	BLOCKLIST ResponsePolicyZoneOverridePolicyType = "BLOCKLIST"
	REDIRECT  ResponsePolicyZoneOverridePolicyType = "REDIRECT"
)

// Defines values for ResponsePolicyZoneResponsePolicyZoneType.
const (
	EXTERNAL ResponsePolicyZoneResponsePolicyZoneType = "EXTERNAL"
	FEED     ResponsePolicyZoneResponsePolicyZoneType = "FEED"
	LOCAL    ResponsePolicyZoneResponsePolicyZoneType = "LOCAL"
)

// Defines values for ResponsePolicyZoneType.
const (
	ResponsePolicyZoneTypeResponsePolicyZone ResponsePolicyZoneType = "ResponsePolicyZone"
)

// Defines values for SNMPVersion.
const (
	V1  SNMPVersion = "v1"
	V2c SNMPVersion = "v2c"
	V3  SNMPVersion = "v3"
)

// Defines values for SRVRecordRecordType.
const (
	SRV SRVRecordRecordType = "SRV"
)

// Defines values for SRVRecordType.
const (
	SRVRecordTypeSRVRecord SRVRecordType = "SRVRecord"
)

// Defines values for SVCBRecordRecordType.
const (
	SVCB SVCBRecordRecordType = "SVCB"
)

// Defines values for SVCBRecordType.
const (
	SVCBRecordTypeSVCBRecord SVCBRecordType = "SVCBRecord"
)

// Defines values for ServerGroupType.
const (
	ServerGroupTypeServerGroup ServerGroupType = "ServerGroup"
)

// Defines values for TXTRecordRecordType.
const (
	TXTRecordRecordTypeTXT TXTRecordRecordType = "TXT"
)

// Defines values for TXTRecordType.
const (
	TXTRecordTypeTXTRecord TXTRecordType = "TXTRecord"
)

// Defines values for TransactionOperation.
const (
	TransactionOperationADDAAAARECORD                                   TransactionOperation = "ADD_AAAA_RECORD"
	TransactionOperationADDACCESSRIGHT                                  TransactionOperation = "ADD_ACCESS_RIGHT"
	TransactionOperationADDACL                                          TransactionOperation = "ADD_ACL"
	TransactionOperationADDADMINISTRATIVEACCESSRIGHTS                   TransactionOperation = "ADD_ADMINISTRATIVE_ACCESS_RIGHTS"
	TransactionOperationADDALIASRECORD                                  TransactionOperation = "ADD_ALIAS_RECORD"
	TransactionOperationADDARECORD                                      TransactionOperation = "ADD_A_RECORD"
	TransactionOperationADDCONFIGURATION                                TransactionOperation = "ADD_CONFIGURATION"
	TransactionOperationADDCUSTOMDHCPV4CLIENTOPTION                     TransactionOperation = "ADD_CUSTOM_DHCPV4_CLIENT_OPTION"
	TransactionOperationADDCUSTOMDHCPV4CLIENTOPTIONDEFINITION           TransactionOperation = "ADD_CUSTOM_DHCPV4_CLIENT_OPTION_DEFINITION"
	TransactionOperationADDDEPLOYMENTOPTIONVALUE                        TransactionOperation = "ADD_DEPLOYMENT_OPTION_VALUE"
	TransactionOperationADDDEPLOYMENTSCHEDULER                          TransactionOperation = "ADD_DEPLOYMENT_SCHEDULER"
	TransactionOperationADDDEVICE                                       TransactionOperation = "ADD_DEVICE"
	TransactionOperationADDDEVICEINSTANCE                               TransactionOperation = "ADD_DEVICE_INSTANCE"
	TransactionOperationADDDEVICESUBTYPE                                TransactionOperation = "ADD_DEVICE_SUBTYPE"
	TransactionOperationADDDEVICETYPE                                   TransactionOperation = "ADD_DEVICE_TYPE"
	TransactionOperationADDDHCPDEPLOYMENTROLE                           TransactionOperation = "ADD_DHCP_DEPLOYMENT_ROLE"
	TransactionOperationADDDHCPV4CLIENTCLASS                            TransactionOperation = "ADD_DHCPV4_CLIENT_CLASS"
	TransactionOperationADDDHCPV4CLIENTOPTION                           TransactionOperation = "ADD_DHCPV4_CLIENT_OPTION"
	TransactionOperationADDDHCPV4CLIENTSUBCLASS                         TransactionOperation = "ADD_DHCPV4_CLIENT_SUBCLASS"
	TransactionOperationADDDHCPV4RAWOPTION                              TransactionOperation = "ADD_DHCPV4_RAW_OPTION"
	TransactionOperationADDDHCPV4SERVICEOPTION                          TransactionOperation = "ADD_DHCPV4_SERVICE_OPTION"
	TransactionOperationADDDHCPV6CLIENTOPTION                           TransactionOperation = "ADD_DHCPV6_CLIENT_OPTION"
	TransactionOperationADDDHCPV6RAWOPTION                              TransactionOperation = "ADD_DHCPV6_RAW_OPTION"
	TransactionOperationADDDHCPV6SERVICEOPTION                          TransactionOperation = "ADD_DHCPV6_SERVICE_OPTION"
	TransactionOperationADDDHCPZONEGROUP                                TransactionOperation = "ADD_DHCP_ZONE_GROUP"
	TransactionOperationADDDNS64                                        TransactionOperation = "ADD_DNS64"
	TransactionOperationADDDNSDEPLOYMENTROLE                            TransactionOperation = "ADD_DNS_DEPLOYMENT_ROLE"
	TransactionOperationADDDNSOPTION                                    TransactionOperation = "ADD_DNS_OPTION"
	TransactionOperationADDDNSRAWOPTION                                 TransactionOperation = "ADD_DNS_RAW_OPTION"
	TransactionOperationADDDNSSECSIGNINGPOLICY                          TransactionOperation = "ADD_DNSSEC_SIGNING_POLICY"
	TransactionOperationADDE164ZONE                                     TransactionOperation = "ADD_E164_ZONE"
	TransactionOperationADDEXTERNALHOSTRECORD                           TransactionOperation = "ADD_EXTERNAL_HOST_RECORD"
	TransactionOperationADDFORWARDDHCPZONE                              TransactionOperation = "ADD_FORWARD_DHCP_ZONE"
	TransactionOperationADDGENERICRECORD                                TransactionOperation = "ADD_GENERIC_RECORD"
	TransactionOperationADDGTMSERVER                                    TransactionOperation = "ADD_GTM_SERVER"
	TransactionOperationADDHASERVER                                     TransactionOperation = "ADD_HA_SERVER"
	TransactionOperationADDHINFORECORD                                  TransactionOperation = "ADD_HINFO_RECORD"
	TransactionOperationADDHOSTRECORD                                   TransactionOperation = "ADD_HOST_RECORD"
	TransactionOperationADDHSMCONFIGURATION                             TransactionOperation = "ADD_HSM_CONFIGURATION"
	TransactionOperationADDHSMSERVER                                    TransactionOperation = "ADD_HSM_SERVER"
	TransactionOperationADDHTTPSRECORD                                  TransactionOperation = "ADD_HTTPS_RECORD"
	TransactionOperationADDINTERNALROOTZONE                             TransactionOperation = "ADD_INTERNAL_ROOT_ZONE"
	TransactionOperationADDIPV4BLOCK                                    TransactionOperation = "ADD_IPV4_BLOCK"
	TransactionOperationADDIPV4DHCPRANGE                                TransactionOperation = "ADD_IPV4_DHCP_RANGE"
	TransactionOperationADDIPV4GROUP                                    TransactionOperation = "ADD_IPV4_GROUP"
	TransactionOperationADDIPV4NETWORK                                  TransactionOperation = "ADD_IPV4_NETWORK"
	TransactionOperationADDIPV4PARENT                                   TransactionOperation = "ADD_IPV4_PARENT"
	TransactionOperationADDIPV4RECONCILIATIONPOLICY                     TransactionOperation = "ADD_IPV4_RECONCILIATION_POLICY"
	TransactionOperationADDIPV4TEMPLATE                                 TransactionOperation = "ADD_IPV4_TEMPLATE"
	TransactionOperationADDIPV6ADDRESS                                  TransactionOperation = "ADD_IPV6_ADDRESS"
	TransactionOperationADDIPV6ADDRESSHOST                              TransactionOperation = "ADD_IPV6_ADDRESS_HOST"
	TransactionOperationADDIPV6DHCPRANGE                                TransactionOperation = "ADD_IPV6_DHCP_RANGE"
	TransactionOperationADDIPV6GLOBALADDRESSBLOCK                       TransactionOperation = "ADD_IPV6_GLOBAL_ADDRESS_BLOCK"
	TransactionOperationADDIPV6NETWORK                                  TransactionOperation = "ADD_IPV6_NETWORK"
	TransactionOperationADDIPV6PARENT                                   TransactionOperation = "ADD_IPV6_PARENT"
	TransactionOperationADDIPV6RECONCILIATIONPOLICY                     TransactionOperation = "ADD_IPV6_RECONCILIATION_POLICY"
	TransactionOperationADDIPV6TEMPLATE                                 TransactionOperation = "ADD_IPV6_TEMPLATE"
	TransactionOperationADDKDC                                          TransactionOperation = "ADD_KDC"
	TransactionOperationADDKERBEROSAUTHENTICATOR                        TransactionOperation = "ADD_KERBEROS_AUTHENTICATOR"
	TransactionOperationADDKERBEROSREALM                                TransactionOperation = "ADD_KERBEROS_REALM"
	TransactionOperationADDKEYSIGNINGKEY                                TransactionOperation = "ADD_KEY_SIGNING_KEY"
	TransactionOperationADDLDAPAUTHENTICATOR                            TransactionOperation = "ADD_LDAP_AUTHENTICATOR"
	TransactionOperationADDLDAPGROUP                                    TransactionOperation = "ADD_LDAP_GROUP"
	TransactionOperationADDLOCATION                                     TransactionOperation = "ADD_LOCATION"
	TransactionOperationADDLTMSERVER                                    TransactionOperation = "ADD_LTM_SERVER"
	TransactionOperationADDMACADDRESS                                   TransactionOperation = "ADD_MAC_ADDRESS"
	TransactionOperationADDMACADDRESSTOMACPOOL                          TransactionOperation = "ADD_MAC_ADDRESS_TO_MAC_POOL"
	TransactionOperationADDMACPOOL                                      TransactionOperation = "ADD_MAC_POOL"
	TransactionOperationADDMXRECORD                                     TransactionOperation = "ADD_MX_RECORD"
	TransactionOperationADDNAMINGPOLICY                                 TransactionOperation = "ADD_NAMING_POLICY"
	TransactionOperationADDNAMINGPOLICYVALUECONNECTOR                   TransactionOperation = "ADD_NAMING_POLICY_VALUE_CONNECTOR"
	TransactionOperationADDNAMINGPOLICYVALUEINCREMENTAL                 TransactionOperation = "ADD_NAMING_POLICY_VALUE_INCREMENTAL"
	TransactionOperationADDNAMINGPOLICYVALUEINTEGER                     TransactionOperation = "ADD_NAMING_POLICY_VALUE_INTEGER"
	TransactionOperationADDNAMINGPOLICYVALUEREQUIRED                    TransactionOperation = "ADD_NAMING_POLICY_VALUE_REQUIRED"
	TransactionOperationADDNAMINGPOLICYVALUETEXT                        TransactionOperation = "ADD_NAMING_POLICY_VALUE_TEXT"
	TransactionOperationADDNAMINGRESTRICTION                            TransactionOperation = "ADD_NAMING_RESTRICTION"
	TransactionOperationADDNAPTRRECORD                                  TransactionOperation = "ADD_NAPTR_RECORD"
	TransactionOperationADDNAPTRRECORDGROUP                             TransactionOperation = "ADD_NAPTR_RECORD_GROUP"
	TransactionOperationADDNOTIFICATIONGROUP                            TransactionOperation = "ADD_NOTIFICATION_GROUP"
	TransactionOperationADDNOTIFICATIONGROUPUSERSORGROUPS               TransactionOperation = "ADD_NOTIFICATION_GROUP_USERS_OR_GROUPS"
	TransactionOperationADDOAUTHSERVER                                  TransactionOperation = "ADD_OAUTH_SERVER"
	TransactionOperationADDRADIUSAUTHENTICATOR                          TransactionOperation = "ADD_RADIUS_AUTHENTICATOR"
	TransactionOperationADDREPORT                                       TransactionOperation = "ADD_REPORT"
	TransactionOperationADDREPORTSCHEDULER                              TransactionOperation = "ADD_REPORT_SCHEDULER"
	TransactionOperationADDRESOURCE                                     TransactionOperation = "ADD_RESOURCE"
	TransactionOperationADDRESOURCECOLLECTOR                            TransactionOperation = "ADD_RESOURCE_COLLECTOR"
	TransactionOperationADDRESOURCELINK                                 TransactionOperation = "ADD_RESOURCE_LINK"
	TransactionOperationADDRESPONSEPOLICY                               TransactionOperation = "ADD_RESPONSE_POLICY"
	TransactionOperationADDRESPONSEPOLICYZONE                           TransactionOperation = "ADD_RESPONSE_POLICY_ZONE"
	TransactionOperationADDREVERSEDHCPZONE                              TransactionOperation = "ADD_REVERSE_DHCP_ZONE"
	TransactionOperationADDSAMLIDENTITYPROVIDER                         TransactionOperation = "ADD_SAML_IDENTITY_PROVIDER"
	TransactionOperationADDSAMLSERVICEPROVIDER                          TransactionOperation = "ADD_SAML_SERVICE_PROVIDER"
	TransactionOperationADDSAMLSERVICEPROVIDERMETADATA                  TransactionOperation = "ADD_SAML_SERVICE_PROVIDER_METADATA"
	TransactionOperationADDSERVER                                       TransactionOperation = "ADD_SERVER"
	TransactionOperationADDSERVERGROUP                                  TransactionOperation = "ADD_SERVER_GROUP"
	TransactionOperationADDSERVERNETWORKINTERFACE                       TransactionOperation = "ADD_SERVER_NETWORK_INTERFACE"
	TransactionOperationADDSERVERPATCHHISTORY                           TransactionOperation = "ADD_SERVER_PATCH_HISTORY"
	TransactionOperationADDSERVERPATCHINFO                              TransactionOperation = "ADD_SERVER_PATCH_INFO"
	TransactionOperationADDSERVERPUBLISHEDINTERFACE                     TransactionOperation = "ADD_SERVER_PUBLISHED_INTERFACE"
	TransactionOperationADDSERVERTOGTMSERVERRESOURCEPOOL                TransactionOperation = "ADD_SERVER_TO_GTM_SERVER_RESOURCE_POOL"
	TransactionOperationADDSERVERTOLTMSERVERRESOURCEPOOL                TransactionOperation = "ADD_SERVER_TO_LTM_SERVER_RESOURCE_POOL"
	TransactionOperationADDSERVERTOSERVERGROUP                          TransactionOperation = "ADD_SERVER_TO_SERVER_GROUP"
	TransactionOperationADDSERVERVERSIONHISTORY                         TransactionOperation = "ADD_SERVER_VERSION_HISTORY"
	TransactionOperationADDSERVERVIRTUALINTERFACE                       TransactionOperation = "ADD_SERVER_VIRTUAL_INTERFACE"
	TransactionOperationADDSERVICEPRINCIPAL                             TransactionOperation = "ADD_SERVICE_PRINCIPAL"
	TransactionOperationADDSRVRECORD                                    TransactionOperation = "ADD_SRV_RECORD"
	TransactionOperationADDSSOGROUP                                     TransactionOperation = "ADD_SSO_GROUP"
	TransactionOperationADDSTARTOFAUTHORITY                             TransactionOperation = "ADD_START_OF_AUTHORITY"
	TransactionOperationADDSVCBRECORD                                   TransactionOperation = "ADD_SVCB_RECORD"
	TransactionOperationADDTACACSPLUSAUTHENTICATOR                      TransactionOperation = "ADD_TACACSPLUS_AUTHENTICATOR"
	TransactionOperationADDTACACSPLUSGROUP                              TransactionOperation = "ADD_TACACSPLUS_GROUP"
	TransactionOperationADDTAG                                          TransactionOperation = "ADD_TAG"
	TransactionOperationADDTAGGROUP                                     TransactionOperation = "ADD_TAG_GROUP"
	TransactionOperationADDTAGLINKS                                     TransactionOperation = "ADD_TAG_LINKS"
	TransactionOperationADDTASK                                         TransactionOperation = "ADD_TASK"
	TransactionOperationADDTFTPDEPLOYMENTROLE                           TransactionOperation = "ADD_TFTP_DEPLOYMENT_ROLE"
	TransactionOperationADDTFTPFILE                                     TransactionOperation = "ADD_TFTP_FILE"
	TransactionOperationADDTFTPFOLDER                                   TransactionOperation = "ADD_TFTP_FOLDER"
	TransactionOperationADDTFTPGROUP                                    TransactionOperation = "ADD_TFTP_GROUP"
	TransactionOperationADDTSIGKEY                                      TransactionOperation = "ADD_TSIG_KEY"
	TransactionOperationADDTXTRECORD                                    TransactionOperation = "ADD_TXT_RECORD"
	TransactionOperationADDURIRECORD                                    TransactionOperation = "ADD_URI_RECORD"
	TransactionOperationADDUSER                                         TransactionOperation = "ADD_USER"
	TransactionOperationADDUSERDEFINEDFIELDDEFINITION                   TransactionOperation = "ADD_USER_DEFINED_FIELD_DEFINITION"
	TransactionOperationADDUSERDEFINEDLINKDEFINITION                    TransactionOperation = "ADD_USER_DEFINED_LINK_DEFINITION"
	TransactionOperationADDUSERGROUP                                    TransactionOperation = "ADD_USER_GROUP"
	TransactionOperationADDUSERMACPOOL                                  TransactionOperation = "ADD_USER_MAC_POOL"
	TransactionOperationADDUSERSTOGROUPS                                TransactionOperation = "ADD_USERS_TO_GROUPS"
	TransactionOperationADDVENDORCLIENTOPTION                           TransactionOperation = "ADD_VENDOR_CLIENT_OPTION"
	TransactionOperationADDVENDOROPTIONDEFINITION                       TransactionOperation = "ADD_VENDOR_OPTION_DEFINITION"
	TransactionOperationADDVENDORPROFILE                                TransactionOperation = "ADD_VENDOR_PROFILE"
	TransactionOperationADDVIEW                                         TransactionOperation = "ADD_VIEW"
	TransactionOperationADDWINDOWSDHCPFAILOVERDEPLOYMENTROLE            TransactionOperation = "ADD_WINDOWS_DHCP_FAILOVER_DEPLOYMENT_ROLE"
	TransactionOperationADDX509AUTHENTICATOR                            TransactionOperation = "ADD_X509_AUTHENTICATOR"
	TransactionOperationADDZONE                                         TransactionOperation = "ADD_ZONE"
	TransactionOperationADDZONESIGNINGKEY                               TransactionOperation = "ADD_ZONE_SIGNING_KEY"
	TransactionOperationADDZONETEMPLATE                                 TransactionOperation = "ADD_ZONE_TEMPLATE"
	TransactionOperationAPPLYADDRESSMANAGERUPDATE                       TransactionOperation = "APPLY_ADDRESS_MANAGER_UPDATE"
	TransactionOperationAPPLYIPV4TEMPLATE                               TransactionOperation = "APPLY_IPV4_TEMPLATE"
	TransactionOperationAPPLYNAMINGPOLICY                               TransactionOperation = "APPLY_NAMING_POLICY"
	TransactionOperationAPPLYSIGNINGPOLICY                              TransactionOperation = "APPLY_SIGNING_POLICY"
	TransactionOperationAPPROVEADDALIASRECORD                           TransactionOperation = "APPROVE_ADD_ALIAS_RECORD"
	TransactionOperationAPPROVEADDHOSTRECORD                            TransactionOperation = "APPROVE_ADD_HOST_RECORD"
	TransactionOperationAPPROVEADDIPV4NETWORK                           TransactionOperation = "APPROVE_ADD_IPV4_NETWORK"
	TransactionOperationAPPROVEADDRESOURCERECORD                        TransactionOperation = "APPROVE_ADD_RESOURCE_RECORD"
	TransactionOperationAPPROVEADDZONE                                  TransactionOperation = "APPROVE_ADD_ZONE"
	TransactionOperationAPPROVEASSIGNIPV4ADDRESS                        TransactionOperation = "APPROVE_ASSIGN_IPV4_ADDRESS"
	TransactionOperationAPPROVEASSIGNIPV4ADDRESSWITHPTR                 TransactionOperation = "APPROVE_ASSIGN_IPV4_ADDRESS_WITH_PTR"
	TransactionOperationAPPROVECHANGEIPV4STATE                          TransactionOperation = "APPROVE_CHANGE_IPV4_STATE"
	TransactionOperationAPPROVEDELETERESOURCE                           TransactionOperation = "APPROVE_DELETE_RESOURCE"
	TransactionOperationAPPROVERENAMERESOURCERECORD                     TransactionOperation = "APPROVE_RENAME_RESOURCE_RECORD"
	TransactionOperationAPPROVEUPDATEALIASRECORD                        TransactionOperation = "APPROVE_UPDATE_ALIAS_RECORD"
	TransactionOperationAPPROVEUPDATEHOSTRECORD                         TransactionOperation = "APPROVE_UPDATE_HOST_RECORD"
	TransactionOperationAPPROVEUPDATEIPV4ADDRESS                        TransactionOperation = "APPROVE_UPDATE_IPV4_ADDRESS"
	TransactionOperationAPPROVEUPDATEIPV4NETWORK                        TransactionOperation = "APPROVE_UPDATE_IPV4_NETWORK"
	TransactionOperationAPPROVEUPDATEREADONLYIPV4NETWORK                TransactionOperation = "APPROVE_UPDATE_READONLY_IPV4_NETWORK"
	TransactionOperationAPPROVEUPDATERESOURCERECORD                     TransactionOperation = "APPROVE_UPDATE_RESOURCE_RECORD"
	TransactionOperationAPPROVEUPDATEZONE                               TransactionOperation = "APPROVE_UPDATE_ZONE"
	TransactionOperationASSIGNIPV4ADDRESS                               TransactionOperation = "ASSIGN_IPV4_ADDRESS"
	TransactionOperationASSIGNIPV4TEMPLATE                              TransactionOperation = "ASSIGN_IPV4_TEMPLATE"
	TransactionOperationASSIGNIPV6ADDRESS                               TransactionOperation = "ASSIGN_IPV6_ADDRESS"
	TransactionOperationASSIGNNEXTAVAILABLEIPV4ADDRESS                  TransactionOperation = "ASSIGN_NEXT_AVAILABLE_IPV4_ADDRESS"
	TransactionOperationBREAKHASERVER                                   TransactionOperation = "BREAK_HA_SERVER"
	TransactionOperationBULKDNSUPDATE                                   TransactionOperation = "BULK_DNS_UPDATE"
	TransactionOperationCHANGEIPV4ADDRESSSTATE                          TransactionOperation = "CHANGE_IPV4_ADDRESS_STATE"
	TransactionOperationCLEANUPDHCPDEPLOYMENTROLE                       TransactionOperation = "CLEANUP_DHCP_DEPLOYMENT_ROLE"
	TransactionOperationCLEANUPDHCPSETTINGS                             TransactionOperation = "CLEANUP_DHCP_SETTINGS"
	TransactionOperationCLEANUPMISMATCHEDRESOURCES                      TransactionOperation = "CLEANUP_MISMATCHED_RESOURCES"
	TransactionOperationCLEARIPV6ADDRESSASSIGNMENT                      TransactionOperation = "CLEAR_IPV6_ADDRESS_ASSIGNMENT"
	TransactionOperationCLEARSERVERDNSCACHE                             TransactionOperation = "CLEAR_SERVER_DNS_CACHE"
	TransactionOperationCLEARSERVERDNSCACHEDOMAINONLY                   TransactionOperation = "CLEAR_SERVER_DNS_CACHE_DOMAIN_ONLY"
	TransactionOperationCLEARSERVERDNSCACHEHOSTNAMEONLY                 TransactionOperation = "CLEAR_SERVER_DNS_CACHE_HOSTNAME_ONLY"
	TransactionOperationCONFIGUREADDRESSMANAGERNTPSERVICE               TransactionOperation = "CONFIGURE_ADDRESS_MANAGER_NTP_SERVICE"
	TransactionOperationCONFIGUREADDRESSMANAGERSNMPSERVICE              TransactionOperation = "CONFIGURE_ADDRESS_MANAGER_SNMP_SERVICE"
	TransactionOperationCONFIGUREADDRESSMANAGERSYSLOGSERVICE            TransactionOperation = "CONFIGURE_ADDRESS_MANAGER_SYSLOG_SERVICE"
	TransactionOperationCONFIGURESERVERADDITIONALIPADDRESSESSERVICE     TransactionOperation = "CONFIGURE_SERVER_ADDITIONAL_IP_ADDRESSES_SERVICE"
	TransactionOperationCONFIGURESERVERANYCASTSERVICE                   TransactionOperation = "CONFIGURE_SERVER_ANYCAST_SERVICE"
	TransactionOperationCONFIGURESERVERCOLLECTORSERVICE                 TransactionOperation = "CONFIGURE_SERVER_COLLECTOR_SERVICE"
	TransactionOperationCONFIGURESERVERFIREWALLSERVICE                  TransactionOperation = "CONFIGURE_SERVER_FIREWALL_SERVICE"
	TransactionOperationCONFIGURESERVERNTPSERVICE                       TransactionOperation = "CONFIGURE_SERVER_NTP_SERVICE"
	TransactionOperationCONFIGURESERVERSNMPSERVICE                      TransactionOperation = "CONFIGURE_SERVER_SNMP_SERVICE"
	TransactionOperationCONFIGURESERVERSSHSERVICE                       TransactionOperation = "CONFIGURE_SERVER_SSH_SERVICE"
	TransactionOperationCONFIGURESERVERSYSLOGSERVICE                    TransactionOperation = "CONFIGURE_SERVER_SYSLOG_SERVICE"
	TransactionOperationCONNECTSERVER                                   TransactionOperation = "CONNECT_SERVER"
	TransactionOperationCOPYRESOURCES                                   TransactionOperation = "COPY_RESOURCES"
	TransactionOperationDATAARCHIVEORPURGETASK                          TransactionOperation = "DATA_ARCHIVE_OR_PURGE_TASK"
	TransactionOperationDELETEAAAARECORD                                TransactionOperation = "DELETE_AAAA_RECORD"
	TransactionOperationDELETEACCESSRIGHT                               TransactionOperation = "DELETE_ACCESS_RIGHT"
	TransactionOperationDELETEACL                                       TransactionOperation = "DELETE_ACL"
	TransactionOperationDELETEADMINISTRATIVEACCESSRIGHT                 TransactionOperation = "DELETE_ADMINISTRATIVE_ACCESS_RIGHT"
	TransactionOperationDELETEALIASRECORD                               TransactionOperation = "DELETE_ALIAS_RECORD"
	TransactionOperationDELETEAPPROVEDANDDENIEDWORKFLOWREQUESTS         TransactionOperation = "DELETE_APPROVED_AND_DENIED_WORKFLOW_REQUESTS"
	TransactionOperationDELETEARECORD                                   TransactionOperation = "DELETE_A_RECORD"
	TransactionOperationDELETECOLLECTOR                                 TransactionOperation = "DELETE_COLLECTOR"
	TransactionOperationDELETECONFIGURATION                             TransactionOperation = "DELETE_CONFIGURATION"
	TransactionOperationDELETECUSTOMDHCPV4CLIENTOPTIONDEFINITION        TransactionOperation = "DELETE_CUSTOM_DHCPV4_CLIENT_OPTION_DEFINITION"
	TransactionOperationDELETEDEPLOYMENTSCHEDULER                       TransactionOperation = "DELETE_DEPLOYMENT_SCHEDULER"
	TransactionOperationDELETEDEVICE                                    TransactionOperation = "DELETE_DEVICE"
	TransactionOperationDELETEDEVICEINSTANCE                            TransactionOperation = "DELETE_DEVICE_INSTANCE"
	TransactionOperationDELETEDEVICESUBTYPE                             TransactionOperation = "DELETE_DEVICE_SUBTYPE"
	TransactionOperationDELETEDEVICETYPE                                TransactionOperation = "DELETE_DEVICE_TYPE"
	TransactionOperationDELETEDHCPDEPLOYMENTROLE                        TransactionOperation = "DELETE_DHCP_DEPLOYMENT_ROLE"
	TransactionOperationDELETEDHCPV4CLIENTCLASS                         TransactionOperation = "DELETE_DHCPV4_CLIENT_CLASS"
	TransactionOperationDELETEDHCPV4CLIENTOPTION                        TransactionOperation = "DELETE_DHCPV4_CLIENT_OPTION"
	TransactionOperationDELETEDHCPV4CLIENTSUBCLASS                      TransactionOperation = "DELETE_DHCPV4_CLIENT_SUBCLASS"
	TransactionOperationDELETEDHCPV4RAWOPTION                           TransactionOperation = "DELETE_DHCPV4_RAW_OPTION"
	TransactionOperationDELETEDHCPV4SERVICEOPTION                       TransactionOperation = "DELETE_DHCPV4_SERVICE_OPTION"
	TransactionOperationDELETEDHCPV6CLIENTOPTION                        TransactionOperation = "DELETE_DHCPV6_CLIENT_OPTION"
	TransactionOperationDELETEDHCPV6RAWOPTION                           TransactionOperation = "DELETE_DHCPV6_RAW_OPTION"
	TransactionOperationDELETEDHCPV6SERVICEOPTION                       TransactionOperation = "DELETE_DHCPV6_SERVICE_OPTION"
	TransactionOperationDELETEDHCPZONEGROUP                             TransactionOperation = "DELETE_DHCP_ZONE_GROUP"
	TransactionOperationDELETEDNS64                                     TransactionOperation = "DELETE_DNS64"
	TransactionOperationDELETEDNSDEPLOYMENTROLE                         TransactionOperation = "DELETE_DNS_DEPLOYMENT_ROLE"
	TransactionOperationDELETEDNSOPTION                                 TransactionOperation = "DELETE_DNS_OPTION"
	TransactionOperationDELETEDNSRAWOPTION                              TransactionOperation = "DELETE_DNS_RAW_OPTION"
	TransactionOperationDELETEDNSSECSIGNINGPOLICY                       TransactionOperation = "DELETE_DNSSEC_SIGNING_POLICY"
	TransactionOperationDELETEDYNAMICALIASRECORD                        TransactionOperation = "DELETE_DYNAMIC_ALIAS_RECORD"
	TransactionOperationDELETEDYNAMICGENERICRECORD                      TransactionOperation = "DELETE_DYNAMIC_GENERIC_RECORD"
	TransactionOperationDELETEDYNAMICHINFORECORD                        TransactionOperation = "DELETE_DYNAMIC_HINFO_RECORD"
	TransactionOperationDELETEDYNAMICHOSTRECORD                         TransactionOperation = "DELETE_DYNAMIC_HOST_RECORD"
	TransactionOperationDELETEDYNAMICHTTPSRECORD                        TransactionOperation = "DELETE_DYNAMIC_HTTPS_RECORD"
	TransactionOperationDELETEDYNAMICMXRECORD                           TransactionOperation = "DELETE_DYNAMIC_MX_RECORD"
	TransactionOperationDELETEDYNAMICNAPTRRECORD                        TransactionOperation = "DELETE_DYNAMIC_NAPTR_RECORD"
	TransactionOperationDELETEDYNAMICRECORD                             TransactionOperation = "DELETE_DYNAMIC_RECORD"
	TransactionOperationDELETEDYNAMICSRVRECORD                          TransactionOperation = "DELETE_DYNAMIC_SRV_RECORD"
	TransactionOperationDELETEDYNAMICSVCBRECORD                         TransactionOperation = "DELETE_DYNAMIC_SVCB_RECORD"
	TransactionOperationDELETEDYNAMICTXTRECORD                          TransactionOperation = "DELETE_DYNAMIC_TXT_RECORD"
	TransactionOperationDELETEDYNAMICURIRECORD                          TransactionOperation = "DELETE_DYNAMIC_URI_RECORD"
	TransactionOperationDELETEE164ZONE                                  TransactionOperation = "DELETE_E164_ZONE"
	TransactionOperationDELETEENTRUSTKEYSIGNINGKEY                      TransactionOperation = "DELETE_ENTRUST_KEY_SIGNING_KEY"
	TransactionOperationDELETEENTRUSTZONESIGNINGKEY                     TransactionOperation = "DELETE_ENTRUST_ZONE_SIGNING_KEY"
	TransactionOperationDELETEERRORENTRY                                TransactionOperation = "DELETE_ERROR_ENTRY"
	TransactionOperationDELETEEXTERNALHOSTRECORD                        TransactionOperation = "DELETE_EXTERNAL_HOST_RECORD"
	TransactionOperationDELETEFORWARDDHCPZONE                           TransactionOperation = "DELETE_FORWARD_DHCP_ZONE"
	TransactionOperationDELETEGENERICRECORD                             TransactionOperation = "DELETE_GENERIC_RECORD"
	TransactionOperationDELETEGTMSERVER                                 TransactionOperation = "DELETE_GTM_SERVER"
	TransactionOperationDELETEHINFORECORD                               TransactionOperation = "DELETE_HINFO_RECORD"
	TransactionOperationDELETEHOSTRECORD                                TransactionOperation = "DELETE_HOST_RECORD"
	TransactionOperationDELETEHSMCONFIGURATION                          TransactionOperation = "DELETE_HSM_CONFIGURATION"
	TransactionOperationDELETEHSMSERVER                                 TransactionOperation = "DELETE_HSM_SERVER"
	TransactionOperationDELETEHTTPSRECORD                               TransactionOperation = "DELETE_HTTPS_RECORD"
	TransactionOperationDELETEINTERNALROOTZONE                          TransactionOperation = "DELETE_INTERNAL_ROOT_ZONE"
	TransactionOperationDELETEIPV4ADDRESS                               TransactionOperation = "DELETE_IPV4_ADDRESS"
	TransactionOperationDELETEIPV4BLOCK                                 TransactionOperation = "DELETE_IPV4_BLOCK"
	TransactionOperationDELETEIPV4DHCPRANGE                             TransactionOperation = "DELETE_IPV4_DHCP_RANGE"
	TransactionOperationDELETEIPV4GROUP                                 TransactionOperation = "DELETE_IPV4_GROUP"
	TransactionOperationDELETEIPV4NETWORK                               TransactionOperation = "DELETE_IPV4_NETWORK"
	TransactionOperationDELETEIPV4RECONCILIATIONADDRESSES               TransactionOperation = "DELETE_IPV4_RECONCILIATION_ADDRESSES"
	TransactionOperationDELETEIPV4RECONCILIATIONPOLICY                  TransactionOperation = "DELETE_IPV4_RECONCILIATION_POLICY"
	TransactionOperationDELETEIPV4TEMPLATE                              TransactionOperation = "DELETE_IPV4_TEMPLATE"
	TransactionOperationDELETEIPV6ADDRESS                               TransactionOperation = "DELETE_IPV6_ADDRESS"
	TransactionOperationDELETEIPV6BLOCK                                 TransactionOperation = "DELETE_IPV6_BLOCK"
	TransactionOperationDELETEIPV6DHCPRANGE                             TransactionOperation = "DELETE_IPV6_DHCP_RANGE"
	TransactionOperationDELETEIPV6NETWORK                               TransactionOperation = "DELETE_IPV6_NETWORK"
	TransactionOperationDELETEIPV6RECONCILIATIONADDRESSES               TransactionOperation = "DELETE_IPV6_RECONCILIATION_ADDRESSES"
	TransactionOperationDELETEIPV6RECONCILIATIONPOLICY                  TransactionOperation = "DELETE_IPV6_RECONCILIATION_POLICY"
	TransactionOperationDELETEIPV6TEMPLATE                              TransactionOperation = "DELETE_IPV6_TEMPLATE"
	TransactionOperationDELETEKDC                                       TransactionOperation = "DELETE_KDC"
	TransactionOperationDELETEKERBEROSAUTHENTICATOR                     TransactionOperation = "DELETE_KERBEROS_AUTHENTICATOR"
	TransactionOperationDELETEKERBEROSREALM                             TransactionOperation = "DELETE_KERBEROS_REALM"
	TransactionOperationDELETEKEYSIGNINGKEY                             TransactionOperation = "DELETE_KEY_SIGNING_KEY"
	TransactionOperationDELETELDAPAUTHENTICATOR                         TransactionOperation = "DELETE_LDAP_AUTHENTICATOR"
	TransactionOperationDELETELOCATION                                  TransactionOperation = "DELETE_LOCATION"
	TransactionOperationDELETELTMSERVER                                 TransactionOperation = "DELETE_LTM_SERVER"
	TransactionOperationDELETEMACADDRESS                                TransactionOperation = "DELETE_MAC_ADDRESS"
	TransactionOperationDELETEMACADDRESSFROMMACPOOL                     TransactionOperation = "DELETE_MAC_ADDRESS_FROM_MAC_POOL"
	TransactionOperationDELETEMXRECORD                                  TransactionOperation = "DELETE_MX_RECORD"
	TransactionOperationDELETENAMINGPOLICY                              TransactionOperation = "DELETE_NAMING_POLICY"
	TransactionOperationDELETENAMINGPOLICYVALUECONNECTOR                TransactionOperation = "DELETE_NAMING_POLICY_VALUE_CONNECTOR"
	TransactionOperationDELETENAMINGPOLICYVALUEINCREMENTAL              TransactionOperation = "DELETE_NAMING_POLICY_VALUE_INCREMENTAL"
	TransactionOperationDELETENAMINGPOLICYVALUEINTEGER                  TransactionOperation = "DELETE_NAMING_POLICY_VALUE_INTEGER"
	TransactionOperationDELETENAMINGPOLICYVALUEREQUIRED                 TransactionOperation = "DELETE_NAMING_POLICY_VALUE_REQUIRED"
	TransactionOperationDELETENAMINGPOLICYVALUETEXT                     TransactionOperation = "DELETE_NAMING_POLICY_VALUE_TEXT"
	TransactionOperationDELETENAMINGRESTRICTION                         TransactionOperation = "DELETE_NAMING_RESTRICTION"
	TransactionOperationDELETENAPTRRECORD                               TransactionOperation = "DELETE_NAPTR_RECORD"
	TransactionOperationDELETENAPTRRECORDGROUP                          TransactionOperation = "DELETE_NAPTR_RECORD_GROUP"
	TransactionOperationDELETENOTIFICATIONGROUP                         TransactionOperation = "DELETE_NOTIFICATION_GROUP"
	TransactionOperationDELETERADIUSAUTHENTICATOR                       TransactionOperation = "DELETE_RADIUS_AUTHENTICATOR"
	TransactionOperationDELETEREPORT                                    TransactionOperation = "DELETE_REPORT"
	TransactionOperationDELETEREPORTSCHEDULER                           TransactionOperation = "DELETE_REPORT_SCHEDULER"
	TransactionOperationDELETERESOURCE                                  TransactionOperation = "DELETE_RESOURCE"
	TransactionOperationDELETERESOURCELINK                              TransactionOperation = "DELETE_RESOURCE_LINK"
	TransactionOperationDELETERESPONSEPOLICY                            TransactionOperation = "DELETE_RESPONSE_POLICY"
	TransactionOperationDELETERESPONSEPOLICYZONE                        TransactionOperation = "DELETE_RESPONSE_POLICY_ZONE"
	TransactionOperationDELETEREVERSEDHCPZONE                           TransactionOperation = "DELETE_REVERSE_DHCP_ZONE"
	TransactionOperationDELETESERVER                                    TransactionOperation = "DELETE_SERVER"
	TransactionOperationDELETESERVERFROMSERVERGROUP                     TransactionOperation = "DELETE_SERVER_FROM_SERVER_GROUP"
	TransactionOperationDELETESERVERGROUP                               TransactionOperation = "DELETE_SERVER_GROUP"
	TransactionOperationDELETESERVERPUBLISHEDINTERFACE                  TransactionOperation = "DELETE_SERVER_PUBLISHED_INTERFACE"
	TransactionOperationDELETESERVICEPRINCIPAL                          TransactionOperation = "DELETE_SERVICE_PRINCIPAL"
	TransactionOperationDELETESRVRECORD                                 TransactionOperation = "DELETE_SRV_RECORD"
	TransactionOperationDELETESTARTOFAUTHORITY                          TransactionOperation = "DELETE_START_OF_AUTHORITY"
	TransactionOperationDELETESVCBRECORD                                TransactionOperation = "DELETE_SVCB_RECORD"
	TransactionOperationDELETETACACSPLUSAUTHENTICATOR                   TransactionOperation = "DELETE_TACACSPLUS_AUTHENTICATOR"
	TransactionOperationDELETETAG                                       TransactionOperation = "DELETE_TAG"
	TransactionOperationDELETETAGGROUP                                  TransactionOperation = "DELETE_TAG_GROUP"
	TransactionOperationDELETETASK                                      TransactionOperation = "DELETE_TASK"
	TransactionOperationDELETETFTPDEPLOYMENTROLE                        TransactionOperation = "DELETE_TFTP_DEPLOYMENT_ROLE"
	TransactionOperationDELETETFTPFILE                                  TransactionOperation = "DELETE_TFTP_FILE"
	TransactionOperationDELETETFTPFOLDER                                TransactionOperation = "DELETE_TFTP_FOLDER"
	TransactionOperationDELETETFTPGROUP                                 TransactionOperation = "DELETE_TFTP_GROUP"
	TransactionOperationDELETETSIGKEY                                   TransactionOperation = "DELETE_TSIG_KEY"
	TransactionOperationDELETETXTRECORD                                 TransactionOperation = "DELETE_TXT_RECORD"
	TransactionOperationDELETEUNIMPORTEDZONES                           TransactionOperation = "DELETE_UNIMPORTED_ZONES"
	TransactionOperationDELETEURIRECORD                                 TransactionOperation = "DELETE_URI_RECORD"
	TransactionOperationDELETEUSER                                      TransactionOperation = "DELETE_USER"
	TransactionOperationDELETEUSERDEFINEDFIELDDEFINITION                TransactionOperation = "DELETE_USER_DEFINED_FIELD_DEFINITION"
	TransactionOperationDELETEUSERDEFINEDLINKDEFINITION                 TransactionOperation = "DELETE_USER_DEFINED_LINK_DEFINITION"
	TransactionOperationDELETEUSERFROMGROUP                             TransactionOperation = "DELETE_USER_FROM_GROUP"
	TransactionOperationDELETEUSERGROUP                                 TransactionOperation = "DELETE_USER_GROUP"
	TransactionOperationDELETEUSERMACPOOL                               TransactionOperation = "DELETE_USER_MAC_POOL"
	TransactionOperationDELETEVENDORCLIENTOPTION                        TransactionOperation = "DELETE_VENDOR_CLIENT_OPTION"
	TransactionOperationDELETEVENDOROPTIONDEFINITION                    TransactionOperation = "DELETE_VENDOR_OPTION_DEFINITION"
	TransactionOperationDELETEVENDORPROFILE                             TransactionOperation = "DELETE_VENDOR_PROFILE"
	TransactionOperationDELETEVIEW                                      TransactionOperation = "DELETE_VIEW"
	TransactionOperationDELETEWORKFLOWREQUEST                           TransactionOperation = "DELETE_WORKFLOW_REQUEST"
	TransactionOperationDELETEX509AUTHENTICATOR                         TransactionOperation = "DELETE_X509_AUTHENTICATOR"
	TransactionOperationDELETEZONE                                      TransactionOperation = "DELETE_ZONE"
	TransactionOperationDELETEZONESIGNINGKEY                            TransactionOperation = "DELETE_ZONE_SIGNING_KEY"
	TransactionOperationDELETEZONETEMPLATE                              TransactionOperation = "DELETE_ZONE_TEMPLATE"
	TransactionOperationDENYADDALIASRECORD                              TransactionOperation = "DENY_ADD_ALIAS_RECORD"
	TransactionOperationDENYADDHOSTRECORD                               TransactionOperation = "DENY_ADD_HOST_RECORD"
	TransactionOperationDENYADDIPV4NETWORK                              TransactionOperation = "DENY_ADD_IPV4_NETWORK"
	TransactionOperationDENYADDRESOURCERECORD                           TransactionOperation = "DENY_ADD_RESOURCE_RECORD"
	TransactionOperationDENYADDZONE                                     TransactionOperation = "DENY_ADD_ZONE"
	TransactionOperationDENYASSIGNIPV4ADDRESS                           TransactionOperation = "DENY_ASSIGN_IPV4_ADDRESS"
	TransactionOperationDENYASSIGNIPV4ADDRESSWITHPTR                    TransactionOperation = "DENY_ASSIGN_IPV4_ADDRESS_WITH_PTR"
	TransactionOperationDENYCHANGEIPV4STATE                             TransactionOperation = "DENY_CHANGE_IPV4_STATE"
	TransactionOperationDENYDELETERESOURCE                              TransactionOperation = "DENY_DELETE_RESOURCE"
	TransactionOperationDENYRENAMERESOURCERECORD                        TransactionOperation = "DENY_RENAME_RESOURCE_RECORD"
	TransactionOperationDENYUPDATEALIASRECORD                           TransactionOperation = "DENY_UPDATE_ALIAS_RECORD"
	TransactionOperationDENYUPDATEHOSTRECORD                            TransactionOperation = "DENY_UPDATE_HOST_RECORD"
	TransactionOperationDENYUPDATEIPV4ADDRESS                           TransactionOperation = "DENY_UPDATE_IPV4_ADDRESS"
	TransactionOperationDENYUPDATEIPV4NETWORK                           TransactionOperation = "DENY_UPDATE_IPV4_NETWORK"
	TransactionOperationDENYUPDATEREADONLYIPV4NETWORK                   TransactionOperation = "DENY_UPDATE_READONLY_IPV4_NETWORK"
	TransactionOperationDENYUPDATERESOURCERECORD                        TransactionOperation = "DENY_UPDATE_RESOURCE_RECORD"
	TransactionOperationDENYUPDATEZONE                                  TransactionOperation = "DENY_UPDATE_ZONE"
	TransactionOperationDEPLOYSERVER                                    TransactionOperation = "DEPLOY_SERVER"
	TransactionOperationDHCPDYNAMICUPDATEOPERATION                      TransactionOperation = "DHCP_DYNAMIC_UPDATE_OPERATION"
	TransactionOperationDISABLEAUTOVACUUMSERVICE                        TransactionOperation = "DISABLE_AUTOVACUUM_SERVICE"
	TransactionOperationDNSDYNAMICADDOPERATION                          TransactionOperation = "DNS_DYNAMIC_ADD_OPERATION"
	TransactionOperationDNSDYNAMICDELETEOPERATION                       TransactionOperation = "DNS_DYNAMIC_DELETE_OPERATION"
	TransactionOperationDNSDYNAMICUPDATEOPERATION                       TransactionOperation = "DNS_DYNAMIC_UPDATE_OPERATION"
	TransactionOperationDUPLICATEFORWARDDHCPZONE                        TransactionOperation = "DUPLICATE_FORWARD_DHCP_ZONE"
	TransactionOperationDUPLICATEIPV4BLOCK                              TransactionOperation = "DUPLICATE_IPV4_BLOCK"
	TransactionOperationDUPLICATEIPV4NETWORK                            TransactionOperation = "DUPLICATE_IPV4_NETWORK"
	TransactionOperationDUPLICATERESOURCERECORD                         TransactionOperation = "DUPLICATE_RESOURCE_RECORD"
	TransactionOperationDUPLICATEREVERSEDHCPZONE                        TransactionOperation = "DUPLICATE_REVERSE_DHCP_ZONE"
	TransactionOperationELECTADPRIMARYDEPLOYMENTROLES                   TransactionOperation = "ELECT_AD_PRIMARY_DEPLOYMENT_ROLES"
	TransactionOperationENABLEAUTOVACUUMSERVICE                         TransactionOperation = "ENABLE_AUTOVACUUM_SERVICE"
	TransactionOperationENABLEHSMSUPPORT                                TransactionOperation = "ENABLE_HSM_SUPPORT"
	TransactionOperationFAILOVERHASERVER                                TransactionOperation = "FAILOVER_HA_SERVER"
	TransactionOperationGENERATEDNSSECKEY                               TransactionOperation = "GENERATE_DNSSEC_KEY"
	TransactionOperationGETHASERVERSTATUS                               TransactionOperation = "GET_HA_SERVER_STATUS"
	TransactionOperationGETSERVERINFO                                   TransactionOperation = "GET_SERVER_INFO"
	TransactionOperationIMPORTCONFIGURATION                             TransactionOperation = "IMPORT_CONFIGURATION"
	TransactionOperationIMPORTENTITIES                                  TransactionOperation = "IMPORT_ENTITIES"
	TransactionOperationIMPORTZONE                                      TransactionOperation = "IMPORT_ZONE"
	TransactionOperationINITIALIZEADDRESSMANAGER                        TransactionOperation = "INITIALIZE_ADDRESS_MANAGER"
	TransactionOperationINITIALIZEADDRESSMANAGERLOCALES                 TransactionOperation = "INITIALIZE_ADDRESS_MANAGER_LOCALES"
	TransactionOperationJOINSECURITYWORLD                               TransactionOperation = "JOIN_SECURITY_WORLD"
	TransactionOperationLOCKOUTUSER                                     TransactionOperation = "LOCK_OUT_USER"
	TransactionOperationLOCKOUTUSERROLLBACK                             TransactionOperation = "LOCK_OUT_USER_ROLLBACK"
	TransactionOperationMERGEDUPLICATEHOSTRECORDS                       TransactionOperation = "MERGE_DUPLICATE_HOST_RECORDS"
	TransactionOperationMERGEIPV4BLOCKS                                 TransactionOperation = "MERGE_IPV4_BLOCKS"
	TransactionOperationMERGEIPV4BLOCKWITHPARENT                        TransactionOperation = "MERGE_IPV4_BLOCK_WITH_PARENT"
	TransactionOperationMERGEIPV4DHCPRANGES                             TransactionOperation = "MERGE_IPV4_DHCP_RANGES"
	TransactionOperationMERGEIPV4NETWORKS                               TransactionOperation = "MERGE_IPV4_NETWORKS"
	TransactionOperationMIGRATEAUTOCREATE                               TransactionOperation = "MIGRATE_AUTO_CREATE"
	TransactionOperationMIGRATEBATCH                                    TransactionOperation = "MIGRATE_BATCH"
	TransactionOperationMOVEDEPLOYMENTROLES                             TransactionOperation = "MOVE_DEPLOYMENT_ROLES"
	TransactionOperationMOVEIPV4ADDRESS                                 TransactionOperation = "MOVE_IPV4_ADDRESS"
	TransactionOperationMOVEIPV4BLOCK                                   TransactionOperation = "MOVE_IPV4_BLOCK"
	TransactionOperationMOVEIPV4NETWORK                                 TransactionOperation = "MOVE_IPV4_NETWORK"
	TransactionOperationMOVEIPV6ADDRESSASSIGNMENT                       TransactionOperation = "MOVE_IPV6_ADDRESS_ASSIGNMENT"
	TransactionOperationMOVEIPV6BLOCK                                   TransactionOperation = "MOVE_IPV6_BLOCK"
	TransactionOperationMOVEIPV6NETWORK                                 TransactionOperation = "MOVE_IPV6_NETWORK"
	TransactionOperationMOVERESOURCERECORD                              TransactionOperation = "MOVE_RESOURCE_RECORD"
	TransactionOperationMOVETFTPFILEORFOLDER                            TransactionOperation = "MOVE_TFTP_FILE_OR_FOLDER"
	TransactionOperationMOVEZONE                                        TransactionOperation = "MOVE_ZONE"
	TransactionOperationPARTITIONIPV6BLOCK                              TransactionOperation = "PARTITION_IPV6_BLOCK"
	TransactionOperationPARTITIONTOBLOCKS                               TransactionOperation = "PARTITION_TO_BLOCKS"
	TransactionOperationPARTITIONTONETWORKS                             TransactionOperation = "PARTITION_TO_NETWORKS"
	TransactionOperationPATCHADDRESSMANAGER                             TransactionOperation = "PATCH_ADDRESS_MANAGER"
	TransactionOperationPATCHSERVER                                     TransactionOperation = "PATCH_SERVER"
	TransactionOperationPOPULATEZONE                                    TransactionOperation = "POPULATE_ZONE"
	TransactionOperationPROCESSOAUTHTOKEN                               TransactionOperation = "PROCESS_OAUTH_TOKEN"
	TransactionOperationPROCESSSAMLRESPONSE                             TransactionOperation = "PROCESS_SAML_RESPONSE"
	TransactionOperationQUERYSERVERFORHOSTNAME                          TransactionOperation = "QUERY_SERVER_FOR_HOSTNAME"
	TransactionOperationREAPPLYIPV4TEMPLATE                             TransactionOperation = "REAPPLY_IPV4_TEMPLATE"
	TransactionOperationREAPPLYZONETEMPLATE                             TransactionOperation = "REAPPLY_ZONE_TEMPLATE"
	TransactionOperationRECONCILEIPV4ADDRESSES                          TransactionOperation = "RECONCILE_IPV4_ADDRESSES"
	TransactionOperationRECONCILEIPV4DHCPRANGE                          TransactionOperation = "RECONCILE_IPV4_DHCP_RANGE"
	TransactionOperationRECONCILEIPV4NETWORK                            TransactionOperation = "RECONCILE_IPV4_NETWORK"
	TransactionOperationRECONCILEIPV6ADDRESSES                          TransactionOperation = "RECONCILE_IPV6_ADDRESSES"
	TransactionOperationRECONCILESERVER                                 TransactionOperation = "RECONCILE_SERVER"
	TransactionOperationRECONCILEVIEW                                   TransactionOperation = "RECONCILE_VIEW"
	TransactionOperationRECONCILEZONE                                   TransactionOperation = "RECONCILE_ZONE"
	TransactionOperationRECORDSERVERDEPLOYMENTEVENT                     TransactionOperation = "RECORD_SERVER_DEPLOYMENT_EVENT"
	TransactionOperationREMOVEDNSSECSIGNINGPOLICY                       TransactionOperation = "REMOVE_DNSSEC_SIGNING_POLICY"
	TransactionOperationREMOVEDUIDFROMIPV6ADDRESS                       TransactionOperation = "REMOVE_DUID_FROM_IPV6_ADDRESS"
	TransactionOperationREMOVERESOURCELINK                              TransactionOperation = "REMOVE_RESOURCE_LINK"
	TransactionOperationREMOVERESOURCELOCATION                          TransactionOperation = "REMOVE_RESOURCE_LOCATION"
	TransactionOperationREMOVETAG                                       TransactionOperation = "REMOVE_TAG"
	TransactionOperationRENAMEALIASRECORD                               TransactionOperation = "RENAME_ALIAS_RECORD"
	TransactionOperationRENAMEGENERICRECORD                             TransactionOperation = "RENAME_GENERIC_RECORD"
	TransactionOperationRENAMEHINFORECORD                               TransactionOperation = "RENAME_HINFO_RECORD"
	TransactionOperationRENAMEHOSTRECORD                                TransactionOperation = "RENAME_HOST_RECORD"
	TransactionOperationRENAMEHTTPSRECORD                               TransactionOperation = "RENAME_HTTPS_RECORD"
	TransactionOperationRENAMEMXRECORD                                  TransactionOperation = "RENAME_MX_RECORD"
	TransactionOperationRENAMENAPTRRECORD                               TransactionOperation = "RENAME_NAPTR_RECORD"
	TransactionOperationRENAMESRVRECORD                                 TransactionOperation = "RENAME_SRV_RECORD"
	TransactionOperationRENAMESVCBRECORD                                TransactionOperation = "RENAME_SVCB_RECORD"
	TransactionOperationRENAMETXTRECORD                                 TransactionOperation = "RENAME_TXT_RECORD"
	TransactionOperationRENAMEURIRECORD                                 TransactionOperation = "RENAME_URI_RECORD"
	TransactionOperationREPAIRHASERVER                                  TransactionOperation = "REPAIR_HA_SERVER"
	TransactionOperationREPLACESERVER                                   TransactionOperation = "REPLACE_SERVER"
	TransactionOperationREPLACETFTPFILE                                 TransactionOperation = "REPLACE_TFTP_FILE"
	TransactionOperationREQUESTADDALIASRECORD                           TransactionOperation = "REQUEST_ADD_ALIAS_RECORD"
	TransactionOperationREQUESTADDHOSTRECORD                            TransactionOperation = "REQUEST_ADD_HOST_RECORD"
	TransactionOperationREQUESTADDIPV4NETWORK                           TransactionOperation = "REQUEST_ADD_IPV4_NETWORK"
	TransactionOperationREQUESTADDRESOURCERECORD                        TransactionOperation = "REQUEST_ADD_RESOURCE_RECORD"
	TransactionOperationREQUESTADDZONE                                  TransactionOperation = "REQUEST_ADD_ZONE"
	TransactionOperationREQUESTASSIGNIPV4ADDRESS                        TransactionOperation = "REQUEST_ASSIGN_IPV4_ADDRESS"
	TransactionOperationREQUESTASSIGNIPV4ADDRESSWITHPTR                 TransactionOperation = "REQUEST_ASSIGN_IPV4_ADDRESS_WITH_PTR"
	TransactionOperationREQUESTASSIGNNEXTAVAILABLEIPV4ADDRESS           TransactionOperation = "REQUEST_ASSIGN_NEXT_AVAILABLE_IPV4_ADDRESS"
	TransactionOperationREQUESTCHANGEIPV4STATE                          TransactionOperation = "REQUEST_CHANGE_IPV4_STATE"
	TransactionOperationREQUESTDELETERESOURCE                           TransactionOperation = "REQUEST_DELETE_RESOURCE"
	TransactionOperationREQUESTRENAMERESOURCERECORD                     TransactionOperation = "REQUEST_RENAME_RESOURCE_RECORD"
	TransactionOperationREQUESTUPDATEALIASRECORD                        TransactionOperation = "REQUEST_UPDATE_ALIAS_RECORD"
	TransactionOperationREQUESTUPDATEHOSTRECORD                         TransactionOperation = "REQUEST_UPDATE_HOST_RECORD"
	TransactionOperationREQUESTUPDATEIPV4ADDRESS                        TransactionOperation = "REQUEST_UPDATE_IPV4_ADDRESS"
	TransactionOperationREQUESTUPDATEIPV4NETWORK                        TransactionOperation = "REQUEST_UPDATE_IPV4_NETWORK"
	TransactionOperationREQUESTUPDATEREADONLYIPV4NETWORK                TransactionOperation = "REQUEST_UPDATE_READONLY_IPV4_NETWORK"
	TransactionOperationREQUESTUPDATERESOURCERECORD                     TransactionOperation = "REQUEST_UPDATE_RESOURCE_RECORD"
	TransactionOperationREQUESTUPDATEZONE                               TransactionOperation = "REQUEST_UPDATE_ZONE"
	TransactionOperationRESETSERVERPASSWORD                             TransactionOperation = "RESET_SERVER_PASSWORD"
	TransactionOperationRESIZEIPV4BLOCK                                 TransactionOperation = "RESIZE_IPV4_BLOCK"
	TransactionOperationRESIZEIPV4NETWORK                               TransactionOperation = "RESIZE_IPV4_NETWORK"
	TransactionOperationRESIZEIPV6BLOCK                                 TransactionOperation = "RESIZE_IPV6_BLOCK"
	TransactionOperationRESIZEIPV6NETWORK                               TransactionOperation = "RESIZE_IPV6_NETWORK"
	TransactionOperationRESTORERESOURCE                                 TransactionOperation = "RESTORE_RESOURCE"
	TransactionOperationSPLITIPV4BLOCK                                  TransactionOperation = "SPLIT_IPV4_BLOCK"
	TransactionOperationSPLITIPV4NETWORK                                TransactionOperation = "SPLIT_IPV4_NETWORK"
	TransactionOperationSPLITIPV6BLOCK                                  TransactionOperation = "SPLIT_IPV6_BLOCK"
	TransactionOperationSPLITIPV6NETWORK                                TransactionOperation = "SPLIT_IPV6_NETWORK"
	TransactionOperationSTARTWINDOWSREADONLYDNSDEPLOYMENT               TransactionOperation = "START_WINDOWS_READONLY_DNS_DEPLOYMENT"
	TransactionOperationUNASSIGNIPV4TEMPLATE                            TransactionOperation = "UNASSIGN_IPV4_TEMPLATE"
	TransactionOperationUPDATEACCESSRIGHT                               TransactionOperation = "UPDATE_ACCESS_RIGHT"
	TransactionOperationUPDATEACL                                       TransactionOperation = "UPDATE_ACL"
	TransactionOperationUPDATEADMINISTRATIVEACCESSRIGHT                 TransactionOperation = "UPDATE_ADMINISTRATIVE_ACCESS_RIGHT"
	TransactionOperationUPDATEALIASRECORD                               TransactionOperation = "UPDATE_ALIAS_RECORD"
	TransactionOperationUPDATECOLLECTOR                                 TransactionOperation = "UPDATE_COLLECTOR"
	TransactionOperationUPDATECONFIGURATION                             TransactionOperation = "UPDATE_CONFIGURATION"
	TransactionOperationUPDATECONFIGURATIONDNSOPTIONINHERITANCESETTINGS TransactionOperation = "UPDATE_CONFIGURATION_DNS_OPTION_INHERITANCE_SETTINGS"
	TransactionOperationUPDATECUSTOMDHCPV4CLIENTOPTIONDEFINITION        TransactionOperation = "UPDATE_CUSTOM_DHCPV4_CLIENT_OPTION_DEFINITION"
	TransactionOperationUPDATEDEPLOYMENTSCHEDULER                       TransactionOperation = "UPDATE_DEPLOYMENT_SCHEDULER"
	TransactionOperationUPDATEDEVICE                                    TransactionOperation = "UPDATE_DEVICE"
	TransactionOperationUPDATEDEVICESUBTYPE                             TransactionOperation = "UPDATE_DEVICE_SUBTYPE"
	TransactionOperationUPDATEDEVICETYPE                                TransactionOperation = "UPDATE_DEVICE_TYPE"
	TransactionOperationUPDATEDHCPDEPLOYMENTROLE                        TransactionOperation = "UPDATE_DHCP_DEPLOYMENT_ROLE"
	TransactionOperationUPDATEDHCPRECONCILIATION                        TransactionOperation = "UPDATE_DHCP_RECONCILIATION"
	TransactionOperationUPDATEDHCPV4CLIENTCLASS                         TransactionOperation = "UPDATE_DHCPV4_CLIENT_CLASS"
	TransactionOperationUPDATEDHCPV4CLIENTOPTION                        TransactionOperation = "UPDATE_DHCPV4_CLIENT_OPTION"
	TransactionOperationUPDATEDHCPV4CLIENTSUBCLASS                      TransactionOperation = "UPDATE_DHCPV4_CLIENT_SUBCLASS"
	TransactionOperationUPDATEDHCPV4RAWOPTION                           TransactionOperation = "UPDATE_DHCPV4_RAW_OPTION"
	TransactionOperationUPDATEDHCPV4SERVICEOPTION                       TransactionOperation = "UPDATE_DHCPV4_SERVICE_OPTION"
	TransactionOperationUPDATEDHCPV6CLIENTOPTION                        TransactionOperation = "UPDATE_DHCPV6_CLIENT_OPTION"
	TransactionOperationUPDATEDHCPV6RAWOPTION                           TransactionOperation = "UPDATE_DHCPV6_RAW_OPTION"
	TransactionOperationUPDATEDHCPV6SERVICEOPTION                       TransactionOperation = "UPDATE_DHCPV6_SERVICE_OPTION"
	TransactionOperationUPDATEDHCPZONEGROUP                             TransactionOperation = "UPDATE_DHCP_ZONE_GROUP"
	TransactionOperationUPDATEDNS64                                     TransactionOperation = "UPDATE_DNS64"
	TransactionOperationUPDATEDNSDEPLOYMENTROLE                         TransactionOperation = "UPDATE_DNS_DEPLOYMENT_ROLE"
	TransactionOperationUPDATEDNSOPTION                                 TransactionOperation = "UPDATE_DNS_OPTION"
	TransactionOperationUPDATEDNSRAWOPTION                              TransactionOperation = "UPDATE_DNS_RAW_OPTION"
	TransactionOperationUPDATEDNSSECSIGNINGPOLICY                       TransactionOperation = "UPDATE_DNSSEC_SIGNING_POLICY"
	TransactionOperationUPDATEDYNAMICALIASRECORD                        TransactionOperation = "UPDATE_DYNAMIC_ALIAS_RECORD"
	TransactionOperationUPDATEDYNAMICHINFORECORD                        TransactionOperation = "UPDATE_DYNAMIC_HINFO_RECORD"
	TransactionOperationUPDATEDYNAMICHTTPSRECORD                        TransactionOperation = "UPDATE_DYNAMIC_HTTPS_RECORD"
	TransactionOperationUPDATEDYNAMICMXRECORD                           TransactionOperation = "UPDATE_DYNAMIC_MX_RECORD"
	TransactionOperationUPDATEDYNAMICNAPTRRECORD                        TransactionOperation = "UPDATE_DYNAMIC_NAPTR_RECORD"
	TransactionOperationUPDATEDYNAMICSRVRECORD                          TransactionOperation = "UPDATE_DYNAMIC_SRV_RECORD"
	TransactionOperationUPDATEDYNAMICSVCBRECORD                         TransactionOperation = "UPDATE_DYNAMIC_SVCB_RECORD"
	TransactionOperationUPDATEDYNAMICTXTRECORD                          TransactionOperation = "UPDATE_DYNAMIC_TXT_RECORD"
	TransactionOperationUPDATEDYNAMICURIRECORD                          TransactionOperation = "UPDATE_DYNAMIC_URI_RECORD"
	TransactionOperationUPDATEE164ZONE                                  TransactionOperation = "UPDATE_E164_ZONE"
	TransactionOperationUPDATEENTRUSTKEYSIGNINGKEY                      TransactionOperation = "UPDATE_ENTRUST_KEY_SIGNING_KEY"
	TransactionOperationUPDATEENTRUSTKEYSIGNINGKEYLIST                  TransactionOperation = "UPDATE_ENTRUST_KEY_SIGNING_KEY_LIST"
	TransactionOperationUPDATEENTRUSTZONESIGNINGKEY                     TransactionOperation = "UPDATE_ENTRUST_ZONE_SIGNING_KEY"
	TransactionOperationUPDATEEXTERNALHOSTRECORD                        TransactionOperation = "UPDATE_EXTERNAL_HOST_RECORD"
	TransactionOperationUPDATEFORWARDDHCPZONE                           TransactionOperation = "UPDATE_FORWARD_DHCP_ZONE"
	TransactionOperationUPDATEGENERICRECORD                             TransactionOperation = "UPDATE_GENERIC_RECORD"
	TransactionOperationUPDATEGLOBALSETTINGS                            TransactionOperation = "UPDATE_GLOBAL_SETTINGS"
	TransactionOperationUPDATEGTMSERVER                                 TransactionOperation = "UPDATE_GTM_SERVER"
	TransactionOperationUPDATEGTMSERVERRESOURCEGROUP                    TransactionOperation = "UPDATE_GTM_SERVER_RESOURCE_GROUP"
	TransactionOperationUPDATEHASERVER                                  TransactionOperation = "UPDATE_HA_SERVER"
	TransactionOperationUPDATEHINFORECORD                               TransactionOperation = "UPDATE_HINFO_RECORD"
	TransactionOperationUPDATEHOSTRECORD                                TransactionOperation = "UPDATE_HOST_RECORD"
	TransactionOperationUPDATEHSMCONFIGURATION                          TransactionOperation = "UPDATE_HSM_CONFIGURATION"
	TransactionOperationUPDATEHSMSERVER                                 TransactionOperation = "UPDATE_HSM_SERVER"
	TransactionOperationUPDATEHTTPSRECORD                               TransactionOperation = "UPDATE_HTTPS_RECORD"
	TransactionOperationUPDATEINTERNALROOTZONE                          TransactionOperation = "UPDATE_INTERNAL_ROOT_ZONE"
	TransactionOperationUPDATEIPADDRESS                                 TransactionOperation = "UPDATE_IP_ADDRESS"
	TransactionOperationUPDATEIPOVERLAPSETTINGS                         TransactionOperation = "UPDATE_IP_OVERLAP_SETTINGS"
	TransactionOperationUPDATEIPV4ADDRESS                               TransactionOperation = "UPDATE_IPV4_ADDRESS"
	TransactionOperationUPDATEIPV4BLOCK                                 TransactionOperation = "UPDATE_IPV4_BLOCK"
	TransactionOperationUPDATEIPV4DHCPRANGE                             TransactionOperation = "UPDATE_IPV4_DHCP_RANGE"
	TransactionOperationUPDATEIPV4GROUP                                 TransactionOperation = "UPDATE_IPV4_GROUP"
	TransactionOperationUPDATEIPV4NETWORK                               TransactionOperation = "UPDATE_IPV4_NETWORK"
	TransactionOperationUPDATEIPV4RECONCILIATIONPOLICY                  TransactionOperation = "UPDATE_IPV4_RECONCILIATION_POLICY"
	TransactionOperationUPDATEIPV4TEMPLATE                              TransactionOperation = "UPDATE_IPV4_TEMPLATE"
	TransactionOperationUPDATEIPV6ADDRESS                               TransactionOperation = "UPDATE_IPV6_ADDRESS"
	TransactionOperationUPDATEIPV6ADDRESSDUID                           TransactionOperation = "UPDATE_IPV6_ADDRESS_DUID"
	TransactionOperationUPDATEIPV6BLOCK                                 TransactionOperation = "UPDATE_IPV6_BLOCK"
	TransactionOperationUPDATEIPV6DHCPRANGE                             TransactionOperation = "UPDATE_IPV6_DHCP_RANGE"
	TransactionOperationUPDATEIPV6NETWORK                               TransactionOperation = "UPDATE_IPV6_NETWORK"
	TransactionOperationUPDATEIPV6RECONCILIATIONPOLICY                  TransactionOperation = "UPDATE_IPV6_RECONCILIATION_POLICY"
	TransactionOperationUPDATEIPV6TEMPLATE                              TransactionOperation = "UPDATE_IPV6_TEMPLATE"
	TransactionOperationUPDATEKERBEROSAUTHENTICATOR                     TransactionOperation = "UPDATE_KERBEROS_AUTHENTICATOR"
	TransactionOperationUPDATEKERBEROSDOMAINCONTROLLER                  TransactionOperation = "UPDATE_KERBEROS_DOMAIN_CONTROLLER"
	TransactionOperationUPDATEKERBEROSREALM                             TransactionOperation = "UPDATE_KERBEROS_REALM"
	TransactionOperationUPDATEKEYSIGNINGKEY                             TransactionOperation = "UPDATE_KEY_SIGNING_KEY"
	TransactionOperationUPDATELDAPAUTHENTICATOR                         TransactionOperation = "UPDATE_LDAP_AUTHENTICATOR"
	TransactionOperationUPDATELOCATION                                  TransactionOperation = "UPDATE_LOCATION"
	TransactionOperationUPDATELOGINSECURITYSETTINGS                     TransactionOperation = "UPDATE_LOGIN_SECURITY_SETTINGS"
	TransactionOperationUPDATELTMSERVER                                 TransactionOperation = "UPDATE_LTM_SERVER"
	TransactionOperationUPDATELTMSERVERRESOURCEGROUP                    TransactionOperation = "UPDATE_LTM_SERVER_RESOURCE_GROUP"
	TransactionOperationUPDATEMACADDRESS                                TransactionOperation = "UPDATE_MAC_ADDRESS"
	TransactionOperationUPDATEMACPOOL                                   TransactionOperation = "UPDATE_MAC_POOL"
	TransactionOperationUPDATEMXRECORD                                  TransactionOperation = "UPDATE_MX_RECORD"
	TransactionOperationUPDATENAMINGPOLICY                              TransactionOperation = "UPDATE_NAMING_POLICY"
	TransactionOperationUPDATENAMINGPOLICYVALUECONNECTOR                TransactionOperation = "UPDATE_NAMING_POLICY_VALUE_CONNECTOR"
	TransactionOperationUPDATENAMINGPOLICYVALUEINCREMENTAL              TransactionOperation = "UPDATE_NAMING_POLICY_VALUE_INCREMENTAL"
	TransactionOperationUPDATENAMINGPOLICYVALUEINTEGER                  TransactionOperation = "UPDATE_NAMING_POLICY_VALUE_INTEGER"
	TransactionOperationUPDATENAMINGPOLICYVALUEREQUIRED                 TransactionOperation = "UPDATE_NAMING_POLICY_VALUE_REQUIRED"
	TransactionOperationUPDATENAMINGPOLICYVALUETEXT                     TransactionOperation = "UPDATE_NAMING_POLICY_VALUE_TEXT"
	TransactionOperationUPDATENAMINGRESTRICTION                         TransactionOperation = "UPDATE_NAMING_RESTRICTION"
	TransactionOperationUPDATENAPTRRECORD                               TransactionOperation = "UPDATE_NAPTR_RECORD"
	TransactionOperationUPDATENAPTRRECORDGROUP                          TransactionOperation = "UPDATE_NAPTR_RECORD_GROUP"
	TransactionOperationUPDATENOTIFICATIONGROUP                         TransactionOperation = "UPDATE_NOTIFICATION_GROUP"
	TransactionOperationUPDATEOAUTHSERVER                               TransactionOperation = "UPDATE_OAUTH_SERVER"
	TransactionOperationUPDATERADIUSAUTHENTICATOR                       TransactionOperation = "UPDATE_RADIUS_AUTHENTICATOR"
	TransactionOperationUPDATEREADONLYIPV4NETWORK                       TransactionOperation = "UPDATE_READONLY_IPV4_NETWORK"
	TransactionOperationUPDATEREPORT                                    TransactionOperation = "UPDATE_REPORT"
	TransactionOperationUPDATEREPORTSCHEDULER                           TransactionOperation = "UPDATE_REPORT_SCHEDULER"
	TransactionOperationUPDATEREPORTSCHEDULERSSTATUS                    TransactionOperation = "UPDATE_REPORT_SCHEDULERS_STATUS"
	TransactionOperationUPDATERESOURCE                                  TransactionOperation = "UPDATE_RESOURCE"
	TransactionOperationUPDATERESOURCELOCATION                          TransactionOperation = "UPDATE_RESOURCE_LOCATION"
	TransactionOperationUPDATERESPONSEPOLICY                            TransactionOperation = "UPDATE_RESPONSE_POLICY"
	TransactionOperationUPDATERESPONSEPOLICYZONE                        TransactionOperation = "UPDATE_RESPONSE_POLICY_ZONE"
	TransactionOperationUPDATERETENTIONSETTINGS                         TransactionOperation = "UPDATE_RETENTION_SETTINGS"
	TransactionOperationUPDATEREVERSEDHCPZONE                           TransactionOperation = "UPDATE_REVERSE_DHCP_ZONE"
	TransactionOperationUPDATESAMLIDENTITYPROVIDER                      TransactionOperation = "UPDATE_SAML_IDENTITY_PROVIDER"
	TransactionOperationUPDATESAMLSERVICEPROVIDER                       TransactionOperation = "UPDATE_SAML_SERVICE_PROVIDER"
	TransactionOperationUPDATESAMLSERVICEPROVIDERKEYSTORE               TransactionOperation = "UPDATE_SAML_SERVICE_PROVIDER_KEY_STORE"
	TransactionOperationUPDATESAMLSERVICEPROVIDERMETADATA               TransactionOperation = "UPDATE_SAML_SERVICE_PROVIDER_METADATA"
	TransactionOperationUPDATESCHEDULEDDEPLOYMENT                       TransactionOperation = "UPDATE_SCHEDULED_DEPLOYMENT"
	TransactionOperationUPDATESERVER                                    TransactionOperation = "UPDATE_SERVER"
	TransactionOperationUPDATESERVERGROUP                               TransactionOperation = "UPDATE_SERVER_GROUP"
	TransactionOperationUPDATESERVERINTERFACE                           TransactionOperation = "UPDATE_SERVER_INTERFACE"
	TransactionOperationUPDATESERVERMONITORINGSETTINGS                  TransactionOperation = "UPDATE_SERVER_MONITORING_SETTINGS"
	TransactionOperationUPDATESERVERPASSWORDSERVER                      TransactionOperation = "UPDATE_SERVER_PASSWORD_SERVER"
	TransactionOperationUPDATESERVERPUBLISHEDINTERFACE                  TransactionOperation = "UPDATE_SERVER_PUBLISHED_INTERFACE"
	TransactionOperationUPDATESERVICEPRINCIPAL                          TransactionOperation = "UPDATE_SERVICE_PRINCIPAL"
	TransactionOperationUPDATESRVRECORD                                 TransactionOperation = "UPDATE_SRV_RECORD"
	TransactionOperationUPDATESTARTOFAUTHORITY                          TransactionOperation = "UPDATE_START_OF_AUTHORITY"
	TransactionOperationUPDATESVCBRECORD                                TransactionOperation = "UPDATE_SVCB_RECORD"
	TransactionOperationUPDATETACACSPLUSAUTHENTICATOR                   TransactionOperation = "UPDATE_TACACSPLUS_AUTHENTICATOR"
	TransactionOperationUPDATETAG                                       TransactionOperation = "UPDATE_TAG"
	TransactionOperationUPDATETAGGROUP                                  TransactionOperation = "UPDATE_TAG_GROUP"
	TransactionOperationUPDATETASK                                      TransactionOperation = "UPDATE_TASK"
	TransactionOperationUPDATETFTPDEPLOYMENTROLE                        TransactionOperation = "UPDATE_TFTP_DEPLOYMENT_ROLE"
	TransactionOperationUPDATETFTPFILE                                  TransactionOperation = "UPDATE_TFTP_FILE"
	TransactionOperationUPDATETFTPFOLDER                                TransactionOperation = "UPDATE_TFTP_FOLDER"
	TransactionOperationUPDATETFTPGROUP                                 TransactionOperation = "UPDATE_TFTP_GROUP"
	TransactionOperationUPDATETSIGKEY                                   TransactionOperation = "UPDATE_TSIG_KEY"
	TransactionOperationUPDATETXTRECORD                                 TransactionOperation = "UPDATE_TXT_RECORD"
	TransactionOperationUPDATEURIRECORD                                 TransactionOperation = "UPDATE_URI_RECORD"
	TransactionOperationUPDATEUSER                                      TransactionOperation = "UPDATE_USER"
	TransactionOperationUPDATEUSERDEFINEDFIELDDEFINITION                TransactionOperation = "UPDATE_USER_DEFINED_FIELD_DEFINITION"
	TransactionOperationUPDATEUSERDEFINEDLINKDEFINITION                 TransactionOperation = "UPDATE_USER_DEFINED_LINK_DEFINITION"
	TransactionOperationUPDATEUSERGROUP                                 TransactionOperation = "UPDATE_USER_GROUP"
	TransactionOperationUPDATEUSERMACPOOL                               TransactionOperation = "UPDATE_USER_MAC_POOL"
	TransactionOperationUPDATEUSERPASSWORD                              TransactionOperation = "UPDATE_USER_PASSWORD"
	TransactionOperationUPDATEUSERPASSWORDPOLICY                        TransactionOperation = "UPDATE_USER_PASSWORD_POLICY"
	TransactionOperationUPDATEVENDORCLIENTOPTION                        TransactionOperation = "UPDATE_VENDOR_CLIENT_OPTION"
	TransactionOperationUPDATEVENDOROPTIONDEFINITION                    TransactionOperation = "UPDATE_VENDOR_OPTION_DEFINITION"
	TransactionOperationUPDATEVENDORPROFILE                             TransactionOperation = "UPDATE_VENDOR_PROFILE"
	TransactionOperationUPDATEVIEW                                      TransactionOperation = "UPDATE_VIEW"
	TransactionOperationUPDATEWINDOWSDHCPFAILOVERDEPLOYMENTROLE         TransactionOperation = "UPDATE_WINDOWS_DHCP_FAILOVER_DEPLOYMENT_ROLE"
	TransactionOperationUPDATEX509AUTHENTICATOR                         TransactionOperation = "UPDATE_X509_AUTHENTICATOR"
	TransactionOperationUPDATEZONE                                      TransactionOperation = "UPDATE_ZONE"
	TransactionOperationUPDATEZONESIGNINGKEY                            TransactionOperation = "UPDATE_ZONE_SIGNING_KEY"
	TransactionOperationUPDATEZONETEMPLATE                              TransactionOperation = "UPDATE_ZONE_TEMPLATE"
	TransactionOperationVERIFYADDRESSMANAGERUPDATE                      TransactionOperation = "VERIFY_ADDRESS_MANAGER_UPDATE"
)

// Defines values for TransactionTransactionType.
const (
	UNDO TransactionTransactionType = "UNDO"
)

// Defines values for TransactionType.
const (
	TransactionTypeTransaction TransactionType = "Transaction"
)

// Defines values for URIRecordRecordType.
const (
	URI URIRecordRecordType = "URI"
)

// Defines values for URIRecordType.
const (
	URIRecordTypeURIRecord URIRecordType = "URIRecord"
)

// Defines values for UnauthorizedErrorCode.
const (
	InvalidAuthorizationCredentials UnauthorizedErrorCode = "InvalidAuthorizationCredentials"
	InvalidServerPassword           UnauthorizedErrorCode = "InvalidServerPassword"
	InvalidUsernameOrApiKey         UnauthorizedErrorCode = "InvalidUsernameOrApiKey"
	InvalidUsernameOrPassword       UnauthorizedErrorCode = "InvalidUsernameOrPassword"
)

// Defines values for UnauthorizedErrorReason.
const (
	Unauthorized UnauthorizedErrorReason = "Unauthorized"
)

// Defines values for UnauthorizedErrorStatus.
const (
	N401 UnauthorizedErrorStatus = 401
)

// Defines values for UserAccessType.
const (
	API       UserAccessType = "API"
	GUI       UserAccessType = "GUI"
	GUIANDAPI UserAccessType = "GUI_AND_API"
)

// Defines values for UserHistoryPrivilege.
const (
	UserHistoryPrivilegeADMINISTRATOR   UserHistoryPrivilege = "ADMINISTRATOR"
	UserHistoryPrivilegeHIDE            UserHistoryPrivilege = "HIDE"
	UserHistoryPrivilegeVIEWHISTORYLIST UserHistoryPrivilege = "VIEW_HISTORY_LIST"
)

// Defines values for UserSecurityPrivilege.
const (
	UserSecurityPrivilegeADDACCESSRIGHTS        UserSecurityPrivilege = "ADD_ACCESS_RIGHTS"
	UserSecurityPrivilegeADMINISTRATOR          UserSecurityPrivilege = "ADMINISTRATOR"
	UserSecurityPrivilegeCHANGEACCESSRIGHTS     UserSecurityPrivilege = "CHANGE_ACCESS_RIGHTS"
	UserSecurityPrivilegeDELETEACCESSRIGHTS     UserSecurityPrivilege = "DELETE_ACCESS_RIGHTS"
	UserSecurityPrivilegeNOACCESS               UserSecurityPrivilege = "NO_ACCESS"
	UserSecurityPrivilegeVIEWMYACCESSRIGHTS     UserSecurityPrivilege = "VIEW_MY_ACCESS_RIGHTS"
	UserSecurityPrivilegeVIEWOTHERSACCESSRIGHTS UserSecurityPrivilege = "VIEW_OTHERS_ACCESS_RIGHTS"
)

// Defines values for UserType.
const (
	UserTypeUser UserType = "User"
)

// Defines values for UserSessionState.
const (
	EXPIRED    UserSessionState = "EXPIRED"
	LOGGEDIN   UserSessionState = "LOGGED_IN"
	LOGGEDOUT  UserSessionState = "LOGGED_OUT"
	LOGINFAIL  UserSessionState = "LOGIN_FAIL"
	TERMINATED UserSessionState = "TERMINATED"
	TIMEDOUT   UserSessionState = "TIMED_OUT"
)

// Defines values for UserSessionType.
const (
	UserSessionTypeUserSession UserSessionType = "UserSession"
)

// Defines values for ViewType.
const (
	ViewTypeView ViewType = "View"
)

// Defines values for WorkflowRequestOperation.
const (
	WorkflowRequestOperationADDALIASRECORD            WorkflowRequestOperation = "ADD_ALIAS_RECORD"
	WorkflowRequestOperationADDHOSTRECORD             WorkflowRequestOperation = "ADD_HOST_RECORD"
	WorkflowRequestOperationADDIPV4NETWORK            WorkflowRequestOperation = "ADD_IPV4_NETWORK"
	WorkflowRequestOperationADDRESOURCERECORD         WorkflowRequestOperation = "ADD_RESOURCE_RECORD"
	WorkflowRequestOperationADDZONE                   WorkflowRequestOperation = "ADD_ZONE"
	WorkflowRequestOperationASSIGNIPV4ADDRESS         WorkflowRequestOperation = "ASSIGN_IPV4_ADDRESS"
	WorkflowRequestOperationCHANGEIPV4ADDRESSSTATE    WorkflowRequestOperation = "CHANGE_IPV4_ADDRESS_STATE"
	WorkflowRequestOperationDELETERESOURCE            WorkflowRequestOperation = "DELETE_RESOURCE"
	WorkflowRequestOperationRENAMERESOURCERECORD      WorkflowRequestOperation = "RENAME_RESOURCE_RECORD"
	WorkflowRequestOperationUPDATEALIASRECORD         WorkflowRequestOperation = "UPDATE_ALIAS_RECORD"
	WorkflowRequestOperationUPDATEHOSTRECORD          WorkflowRequestOperation = "UPDATE_HOST_RECORD"
	WorkflowRequestOperationUPDATEIPV4ADDRESS         WorkflowRequestOperation = "UPDATE_IPV4_ADDRESS"
	WorkflowRequestOperationUPDATEIPV4NETWORK         WorkflowRequestOperation = "UPDATE_IPV4_NETWORK"
	WorkflowRequestOperationUPDATEREADONLYIPV4NETWORK WorkflowRequestOperation = "UPDATE_READONLY_IPV4_NETWORK"
	WorkflowRequestOperationUPDATERESOURCERECORD      WorkflowRequestOperation = "UPDATE_RESOURCE_RECORD"
	WorkflowRequestOperationUPDATEZONE                WorkflowRequestOperation = "UPDATE_ZONE"
)

// Defines values for WorkflowRequestResourceType.
const (
	WorkflowRequestResourceTypeACL                                WorkflowRequestResourceType = "ACL"
	WorkflowRequestResourceTypeAbstractKeySigningKey              WorkflowRequestResourceType = "AbstractKeySigningKey"
	WorkflowRequestResourceTypeAbstractNetworkInterface           WorkflowRequestResourceType = "AbstractNetworkInterface"
	WorkflowRequestResourceTypeAbstractServer                     WorkflowRequestResourceType = "AbstractServer"
	WorkflowRequestResourceTypeAbstractZoneSigningKey             WorkflowRequestResourceType = "AbstractZoneSigningKey"
	WorkflowRequestResourceTypeAccessRight                        WorkflowRequestResourceType = "AccessRight"
	WorkflowRequestResourceTypeAddressManager                     WorkflowRequestResourceType = "AddressManager"
	WorkflowRequestResourceTypeAddressManagerAuthenticator        WorkflowRequestResourceType = "AddressManagerAuthenticator"
	WorkflowRequestResourceTypeAddressManagerDatabase             WorkflowRequestResourceType = "AddressManagerDatabase"
	WorkflowRequestResourceTypeAddressManagerServer               WorkflowRequestResourceType = "AddressManagerServer"
	WorkflowRequestResourceTypeAdministrativeAccessRight          WorkflowRequestResourceType = "AdministrativeAccessRight"
	WorkflowRequestResourceTypeAliasRecord                        WorkflowRequestResourceType = "AliasRecord"
	WorkflowRequestResourceTypeAnycastService                     WorkflowRequestResourceType = "AnycastService"
	WorkflowRequestResourceTypeAuditDataSettings                  WorkflowRequestResourceType = "AuditDataSettings"
	WorkflowRequestResourceTypeAuthenticator                      WorkflowRequestResourceType = "Authenticator"
	WorkflowRequestResourceTypeConfiguration                      WorkflowRequestResourceType = "Configuration"
	WorkflowRequestResourceTypeDHCPActivityService                WorkflowRequestResourceType = "DHCPActivityService"
	WorkflowRequestResourceTypeDHCPAlertSettings                  WorkflowRequestResourceType = "DHCPAlertSettings"
	WorkflowRequestResourceTypeDHCPClientIdentifier               WorkflowRequestResourceType = "DHCPClientIdentifier"
	WorkflowRequestResourceTypeDHCPClientOption                   WorkflowRequestResourceType = "DHCPClientOption"
	WorkflowRequestResourceTypeDHCPDeploymentRole                 WorkflowRequestResourceType = "DHCPDeploymentRole"
	WorkflowRequestResourceTypeDHCPForwardZone                    WorkflowRequestResourceType = "DHCPForwardZone"
	WorkflowRequestResourceTypeDHCPReverseZone                    WorkflowRequestResourceType = "DHCPReverseZone"
	WorkflowRequestResourceTypeDHCPServiceOption                  WorkflowRequestResourceType = "DHCPServiceOption"
	WorkflowRequestResourceTypeDHCPStatisticsService              WorkflowRequestResourceType = "DHCPStatisticsService"
	WorkflowRequestResourceTypeDHCPUniqueIdentifier               WorkflowRequestResourceType = "DHCPUniqueIdentifier"
	WorkflowRequestResourceTypeDHCPVendorOption                   WorkflowRequestResourceType = "DHCPVendorOption"
	WorkflowRequestResourceTypeDHCPVendorOptionDefinition         WorkflowRequestResourceType = "DHCPVendorOptionDefinition"
	WorkflowRequestResourceTypeDHCPZone                           WorkflowRequestResourceType = "DHCPZone"
	WorkflowRequestResourceTypeDHCPZoneGroup                      WorkflowRequestResourceType = "DHCPZoneGroup"
	WorkflowRequestResourceTypeDHCPv4ClientClass                  WorkflowRequestResourceType = "DHCPv4ClientClass"
	WorkflowRequestResourceTypeDHCPv4ClientOption                 WorkflowRequestResourceType = "DHCPv4ClientOption"
	WorkflowRequestResourceTypeDHCPv4ClientOptionDefinition       WorkflowRequestResourceType = "DHCPv4ClientOptionDefinition"
	WorkflowRequestResourceTypeDHCPv4CustomClientOptionDefinition WorkflowRequestResourceType = "DHCPv4CustomClientOptionDefinition"
	WorkflowRequestResourceTypeDHCPv4Lease                        WorkflowRequestResourceType = "DHCPv4Lease"
	WorkflowRequestResourceTypeDHCPv4RawOption                    WorkflowRequestResourceType = "DHCPv4RawOption"
	WorkflowRequestResourceTypeDHCPv4ServiceOption                WorkflowRequestResourceType = "DHCPv4ServiceOption"
	WorkflowRequestResourceTypeDHCPv4ServiceOptionDefinition      WorkflowRequestResourceType = "DHCPv4ServiceOptionDefinition"
	WorkflowRequestResourceTypeDHCPv4Subclass                     WorkflowRequestResourceType = "DHCPv4Subclass"
	WorkflowRequestResourceTypeDHCPv6ClientOption                 WorkflowRequestResourceType = "DHCPv6ClientOption"
	WorkflowRequestResourceTypeDHCPv6ClientOptionDefinition       WorkflowRequestResourceType = "DHCPv6ClientOptionDefinition"
	WorkflowRequestResourceTypeDHCPv6Lease                        WorkflowRequestResourceType = "DHCPv6Lease"
	WorkflowRequestResourceTypeDHCPv6RawOption                    WorkflowRequestResourceType = "DHCPv6RawOption"
	WorkflowRequestResourceTypeDHCPv6ServiceOption                WorkflowRequestResourceType = "DHCPv6ServiceOption"
	WorkflowRequestResourceTypeDHCPv6ServiceOptionDefinition      WorkflowRequestResourceType = "DHCPv6ServiceOptionDefinition"
	WorkflowRequestResourceTypeDNS64                              WorkflowRequestResourceType = "DNS64"
	WorkflowRequestResourceTypeDNSActivityService                 WorkflowRequestResourceType = "DNSActivityService"
	WorkflowRequestResourceTypeDNSDeploymentRole                  WorkflowRequestResourceType = "DNSDeploymentRole"
	WorkflowRequestResourceTypeDNSOption                          WorkflowRequestResourceType = "DNSOption"
	WorkflowRequestResourceTypeDNSOptionDefinition                WorkflowRequestResourceType = "DNSOptionDefinition"
	WorkflowRequestResourceTypeDNSRawOption                       WorkflowRequestResourceType = "DNSRawOption"
	WorkflowRequestResourceTypeDNSResolverService                 WorkflowRequestResourceType = "DNSResolverService"
	WorkflowRequestResourceTypeDNSSECSigningPolicy                WorkflowRequestResourceType = "DNSSECSigningPolicy"
	WorkflowRequestResourceTypeDNSStatisticsService               WorkflowRequestResourceType = "DNSStatisticsService"
	WorkflowRequestResourceTypeDashboard                          WorkflowRequestResourceType = "Dashboard"
	WorkflowRequestResourceTypeDatabaseBackupFile                 WorkflowRequestResourceType = "DatabaseBackupFile"
	WorkflowRequestResourceTypeDatabaseBackupSchedule             WorkflowRequestResourceType = "DatabaseBackupSchedule"
	WorkflowRequestResourceTypeDatabaseLog                        WorkflowRequestResourceType = "DatabaseLog"
	WorkflowRequestResourceTypeDefaultClientOption                WorkflowRequestResourceType = "DefaultClientOption"
	WorkflowRequestResourceTypeDefaultDHCPOption                  WorkflowRequestResourceType = "DefaultDHCPOption"
	WorkflowRequestResourceTypeDefaultDHCPServiceOption           WorkflowRequestResourceType = "DefaultDHCPServiceOption"
	WorkflowRequestResourceTypeDefaultDNSOption                   WorkflowRequestResourceType = "DefaultDNSOption"
	WorkflowRequestResourceTypeDenyMACPool                        WorkflowRequestResourceType = "DenyMACPool"
	WorkflowRequestResourceTypeDeploymentRole                     WorkflowRequestResourceType = "DeploymentRole"
	WorkflowRequestResourceTypeDeploymentRoleMove                 WorkflowRequestResourceType = "DeploymentRoleMove"
	WorkflowRequestResourceTypeDeploymentSchedule                 WorkflowRequestResourceType = "DeploymentSchedule"
	WorkflowRequestResourceTypeDevice                             WorkflowRequestResourceType = "Device"
	WorkflowRequestResourceTypeDeviceSubtype                      WorkflowRequestResourceType = "DeviceSubtype"
	WorkflowRequestResourceTypeDeviceType                         WorkflowRequestResourceType = "DeviceType"
	WorkflowRequestResourceTypeDifferentialDeployment             WorkflowRequestResourceType = "DifferentialDeployment"
	WorkflowRequestResourceTypeDiscoveredARPEntry                 WorkflowRequestResourceType = "DiscoveredARPEntry"
	WorkflowRequestResourceTypeDiscoveredHost                     WorkflowRequestResourceType = "DiscoveredHost"
	WorkflowRequestResourceTypeDiscoveredInterface                WorkflowRequestResourceType = "DiscoveredInterface"
	WorkflowRequestResourceTypeDiscoveredMACAddress               WorkflowRequestResourceType = "DiscoveredMACAddress"
	WorkflowRequestResourceTypeDiscoveredNetwork                  WorkflowRequestResourceType = "DiscoveredNetwork"
	WorkflowRequestResourceTypeDiscoveredRouter                   WorkflowRequestResourceType = "DiscoveredRouter"
	WorkflowRequestResourceTypeDiscoveredSwitch                   WorkflowRequestResourceType = "DiscoveredSwitch"
	WorkflowRequestResourceTypeDiscoveredVLAN                     WorkflowRequestResourceType = "DiscoveredVLAN"
	WorkflowRequestResourceTypeENUMNumberZone                     WorkflowRequestResourceType = "ENUMNumberZone"
	WorkflowRequestResourceTypeENUMZone                           WorkflowRequestResourceType = "ENUMZone"
	WorkflowRequestResourceTypeEntrustKeySigningKey               WorkflowRequestResourceType = "EntrustKeySigningKey"
	WorkflowRequestResourceTypeEntrustZoneSigningKey              WorkflowRequestResourceType = "EntrustZoneSigningKey"
	WorkflowRequestResourceTypeEvent                              WorkflowRequestResourceType = "Event"
	WorkflowRequestResourceTypeExternalHostRecord                 WorkflowRequestResourceType = "ExternalHostRecord"
	WorkflowRequestResourceTypeExternalHostsZone                  WorkflowRequestResourceType = "ExternalHostsZone"
	WorkflowRequestResourceTypeFailoverAPIService                 WorkflowRequestResourceType = "FailoverAPIService"
	WorkflowRequestResourceTypeFirewallService                    WorkflowRequestResourceType = "FirewallService"
	WorkflowRequestResourceTypeFullDeployment                     WorkflowRequestResourceType = "FullDeployment"
	WorkflowRequestResourceTypeGatewayService                     WorkflowRequestResourceType = "GatewayService"
	WorkflowRequestResourceTypeGenericRecord                      WorkflowRequestResourceType = "GenericRecord"
	WorkflowRequestResourceTypeGlobalSettings                     WorkflowRequestResourceType = "GlobalSettings"
	WorkflowRequestResourceTypeHAServer                           WorkflowRequestResourceType = "HAServer"
	WorkflowRequestResourceTypeHINFORecord                        WorkflowRequestResourceType = "HINFORecord"
	WorkflowRequestResourceTypeHSMConfiguration                   WorkflowRequestResourceType = "HSMConfiguration"
	WorkflowRequestResourceTypeHSMKeySigningKey                   WorkflowRequestResourceType = "HSMKeySigningKey"
	WorkflowRequestResourceTypeHSMServer                          WorkflowRequestResourceType = "HSMServer"
	WorkflowRequestResourceTypeHSMZoneSigningKey                  WorkflowRequestResourceType = "HSMZoneSigningKey"
	WorkflowRequestResourceTypeHTTPSRecord                        WorkflowRequestResourceType = "HTTPSRecord"
	WorkflowRequestResourceTypeHostRecord                         WorkflowRequestResourceType = "HostRecord"
	WorkflowRequestResourceTypeIPServerInterface                  WorkflowRequestResourceType = "IPServerInterface"
	WorkflowRequestResourceTypeIPv4Address                        WorkflowRequestResourceType = "IPv4Address"
	WorkflowRequestResourceTypeIPv4AddressImport                  WorkflowRequestResourceType = "IPv4AddressImport"
	WorkflowRequestResourceTypeIPv4AddressMove                    WorkflowRequestResourceType = "IPv4AddressMove"
	WorkflowRequestResourceTypeIPv4Block                          WorkflowRequestResourceType = "IPv4Block"
	WorkflowRequestResourceTypeIPv4BlockImport                    WorkflowRequestResourceType = "IPv4BlockImport"
	WorkflowRequestResourceTypeIPv4BlockMerge                     WorkflowRequestResourceType = "IPv4BlockMerge"
	WorkflowRequestResourceTypeIPv4BlockMove                      WorkflowRequestResourceType = "IPv4BlockMove"
	WorkflowRequestResourceTypeIPv4BlockSplit                     WorkflowRequestResourceType = "IPv4BlockSplit"
	WorkflowRequestResourceTypeIPv4DHCPRange                      WorkflowRequestResourceType = "IPv4DHCPRange"
	WorkflowRequestResourceTypeIPv4DHCPRangeMerge                 WorkflowRequestResourceType = "IPv4DHCPRangeMerge"
	WorkflowRequestResourceTypeIPv4DHCPRangeTemplateItem          WorkflowRequestResourceType = "IPv4DHCPRangeTemplateItem"
	WorkflowRequestResourceTypeIPv4GatewayTemplateItem            WorkflowRequestResourceType = "IPv4GatewayTemplateItem"
	WorkflowRequestResourceTypeIPv4Group                          WorkflowRequestResourceType = "IPv4Group"
	WorkflowRequestResourceTypeIPv4GroupTemplateItem              WorkflowRequestResourceType = "IPv4GroupTemplateItem"
	WorkflowRequestResourceTypeIPv4HiddenTemplateItemChild        WorkflowRequestResourceType = "IPv4HiddenTemplateItemChild"
	WorkflowRequestResourceTypeIPv4Network                        WorkflowRequestResourceType = "IPv4Network"
	WorkflowRequestResourceTypeIPv4NetworkImport                  WorkflowRequestResourceType = "IPv4NetworkImport"
	WorkflowRequestResourceTypeIPv4NetworkMerge                   WorkflowRequestResourceType = "IPv4NetworkMerge"
	WorkflowRequestResourceTypeIPv4NetworkMove                    WorkflowRequestResourceType = "IPv4NetworkMove"
	WorkflowRequestResourceTypeIPv4NetworkSplit                   WorkflowRequestResourceType = "IPv4NetworkSplit"
	WorkflowRequestResourceTypeIPv4Prefix                         WorkflowRequestResourceType = "IPv4Prefix"
	WorkflowRequestResourceTypeIPv4Range                          WorkflowRequestResourceType = "IPv4Range"
	WorkflowRequestResourceTypeIPv4ReconciliationPolicy           WorkflowRequestResourceType = "IPv4ReconciliationPolicy"
	WorkflowRequestResourceTypeIPv4ReservedRangeTemplateItem      WorkflowRequestResourceType = "IPv4ReservedRangeTemplateItem"
	WorkflowRequestResourceTypeIPv4Template                       WorkflowRequestResourceType = "IPv4Template"
	WorkflowRequestResourceTypeIPv4TemplateApplication            WorkflowRequestResourceType = "IPv4TemplateApplication"
	WorkflowRequestResourceTypeIPv6Address                        WorkflowRequestResourceType = "IPv6Address"
	WorkflowRequestResourceTypeIPv6AddressImport                  WorkflowRequestResourceType = "IPv6AddressImport"
	WorkflowRequestResourceTypeIPv6AddressMove                    WorkflowRequestResourceType = "IPv6AddressMove"
	WorkflowRequestResourceTypeIPv6Block                          WorkflowRequestResourceType = "IPv6Block"
	WorkflowRequestResourceTypeIPv6BlockImport                    WorkflowRequestResourceType = "IPv6BlockImport"
	WorkflowRequestResourceTypeIPv6BlockMove                      WorkflowRequestResourceType = "IPv6BlockMove"
	WorkflowRequestResourceTypeIPv6DHCPRange                      WorkflowRequestResourceType = "IPv6DHCPRange"
	WorkflowRequestResourceTypeIPv6Network                        WorkflowRequestResourceType = "IPv6Network"
	WorkflowRequestResourceTypeIPv6NetworkImport                  WorkflowRequestResourceType = "IPv6NetworkImport"
	WorkflowRequestResourceTypeIPv6NetworkMove                    WorkflowRequestResourceType = "IPv6NetworkMove"
	WorkflowRequestResourceTypeIPv6Prefix                         WorkflowRequestResourceType = "IPv6Prefix"
	WorkflowRequestResourceTypeIPv6ReconciliationPolicy           WorkflowRequestResourceType = "IPv6ReconciliationPolicy"
	WorkflowRequestResourceTypeIPv6Template                       WorkflowRequestResourceType = "IPv6Template"
	WorkflowRequestResourceTypeIPv6TemplateItem                   WorkflowRequestResourceType = "IPv6TemplateItem"
	WorkflowRequestResourceTypeImportLog                          WorkflowRequestResourceType = "ImportLog"
	WorkflowRequestResourceTypeInterfacesService                  WorkflowRequestResourceType = "InterfacesService"
	WorkflowRequestResourceTypeInternalRootZone                   WorkflowRequestResourceType = "InternalRootZone"
	WorkflowRequestResourceTypeKerberosAuthenticator              WorkflowRequestResourceType = "KerberosAuthenticator"
	WorkflowRequestResourceTypeKerberosRealm                      WorkflowRequestResourceType = "KerberosRealm"
	WorkflowRequestResourceTypeKerberosServicePrincipal           WorkflowRequestResourceType = "KerberosServicePrincipal"
	WorkflowRequestResourceTypeKeyDistributionCenter              WorkflowRequestResourceType = "KeyDistributionCenter"
	WorkflowRequestResourceTypeKeySigningKey                      WorkflowRequestResourceType = "KeySigningKey"
	WorkflowRequestResourceTypeLDAPAuthenticator                  WorkflowRequestResourceType = "LDAPAuthenticator"
	WorkflowRequestResourceTypeLicenseService                     WorkflowRequestResourceType = "LicenseService"
	WorkflowRequestResourceTypeLocation                           WorkflowRequestResourceType = "Location"
	WorkflowRequestResourceTypeLocationGroup                      WorkflowRequestResourceType = "LocationGroup"
	WorkflowRequestResourceTypeLog                                WorkflowRequestResourceType = "Log"
	WorkflowRequestResourceTypeLogLevelSettings                   WorkflowRequestResourceType = "LogLevelSettings"
	WorkflowRequestResourceTypeLoginPolicySettings                WorkflowRequestResourceType = "LoginPolicySettings"
	WorkflowRequestResourceTypeMACAddress                         WorkflowRequestResourceType = "MACAddress"
	WorkflowRequestResourceTypeMACPool                            WorkflowRequestResourceType = "MACPool"
	WorkflowRequestResourceTypeMXRecord                           WorkflowRequestResourceType = "MXRecord"
	WorkflowRequestResourceTypeMonitoringSettings                 WorkflowRequestResourceType = "MonitoringSettings"
	WorkflowRequestResourceTypeNAPTRRecord                        WorkflowRequestResourceType = "NAPTRRecord"
	WorkflowRequestResourceTypeNTPService                         WorkflowRequestResourceType = "NTPService"
	WorkflowRequestResourceTypeNamingPolicy                       WorkflowRequestResourceType = "NamingPolicy"
	WorkflowRequestResourceTypeNamingPolicyConnectorValue         WorkflowRequestResourceType = "NamingPolicyConnectorValue"
	WorkflowRequestResourceTypeNamingPolicyIncrementalValue       WorkflowRequestResourceType = "NamingPolicyIncrementalValue"
	WorkflowRequestResourceTypeNamingPolicyIntegerValue           WorkflowRequestResourceType = "NamingPolicyIntegerValue"
	WorkflowRequestResourceTypeNamingPolicyRequiredValue          WorkflowRequestResourceType = "NamingPolicyRequiredValue"
	WorkflowRequestResourceTypeNamingPolicyRestriction            WorkflowRequestResourceType = "NamingPolicyRestriction"
	WorkflowRequestResourceTypeNamingPolicyTextValue              WorkflowRequestResourceType = "NamingPolicyTextValue"
	WorkflowRequestResourceTypeNetworkInterface                   WorkflowRequestResourceType = "NetworkInterface"
	WorkflowRequestResourceTypeNotificationGroup                  WorkflowRequestResourceType = "NotificationGroup"
	WorkflowRequestResourceTypeOAuthAuthorizationServer           WorkflowRequestResourceType = "OAuthAuthorizationServer"
	WorkflowRequestResourceTypeOperation                          WorkflowRequestResourceType = "Operation"
	WorkflowRequestResourceTypePasswordPolicySettings             WorkflowRequestResourceType = "PasswordPolicySettings"
	WorkflowRequestResourceTypePreference                         WorkflowRequestResourceType = "Preference"
	WorkflowRequestResourceTypePublishedInterface                 WorkflowRequestResourceType = "PublishedInterface"
	WorkflowRequestResourceTypeQuickDeployment                    WorkflowRequestResourceType = "QuickDeployment"
	WorkflowRequestResourceTypeRADIUSAuthenticator                WorkflowRequestResourceType = "RADIUSAuthenticator"
	WorkflowRequestResourceTypeRawOption                          WorkflowRequestResourceType = "RawOption"
	WorkflowRequestResourceTypeReport                             WorkflowRequestResourceType = "Report"
	WorkflowRequestResourceTypeReportSchedule                     WorkflowRequestResourceType = "ReportSchedule"
	WorkflowRequestResourceTypeResource                           WorkflowRequestResourceType = "Resource"
	WorkflowRequestResourceTypeResourceImport                     WorkflowRequestResourceType = "ResourceImport"
	WorkflowRequestResourceTypeResourceRecord                     WorkflowRequestResourceType = "ResourceRecord"
	WorkflowRequestResourceTypeResourceRecordImport               WorkflowRequestResourceType = "ResourceRecordImport"
	WorkflowRequestResourceTypeResourceRecordMove                 WorkflowRequestResourceType = "ResourceRecordMove"
	WorkflowRequestResourceTypeResponsePolicy                     WorkflowRequestResourceType = "ResponsePolicy"
	WorkflowRequestResourceTypeResponsePolicyItem                 WorkflowRequestResourceType = "ResponsePolicyItem"
	WorkflowRequestResourceTypeResponsePolicyItemImport           WorkflowRequestResourceType = "ResponsePolicyItemImport"
	WorkflowRequestResourceTypeResponsePolicyZone                 WorkflowRequestResourceType = "ResponsePolicyZone"
	WorkflowRequestResourceTypeResponsePolicyZoneFeedCategory     WorkflowRequestResourceType = "ResponsePolicyZoneFeedCategory"
	WorkflowRequestResourceTypeSAMLIdentityProvider               WorkflowRequestResourceType = "SAMLIdentityProvider"
	WorkflowRequestResourceTypeSAMLServiceProviderSettings        WorkflowRequestResourceType = "SAMLServiceProviderSettings"
	WorkflowRequestResourceTypeSNMPService                        WorkflowRequestResourceType = "SNMPService"
	WorkflowRequestResourceTypeSRVRecord                          WorkflowRequestResourceType = "SRVRecord"
	WorkflowRequestResourceTypeSSHService                         WorkflowRequestResourceType = "SSHService"
	WorkflowRequestResourceTypeSSOEnforcementSettings             WorkflowRequestResourceType = "SSOEnforcementSettings"
	WorkflowRequestResourceTypeSVCBRecord                         WorkflowRequestResourceType = "SVCBRecord"
	WorkflowRequestResourceTypeSelectiveDeployment                WorkflowRequestResourceType = "SelectiveDeployment"
	WorkflowRequestResourceTypeServer                             WorkflowRequestResourceType = "Server"
	WorkflowRequestResourceTypeServerFile                         WorkflowRequestResourceType = "ServerFile"
	WorkflowRequestResourceTypeServerGroup                        WorkflowRequestResourceType = "ServerGroup"
	WorkflowRequestResourceTypeServerGroupInterface               WorkflowRequestResourceType = "ServerGroupInterface"
	WorkflowRequestResourceTypeServerInterface                    WorkflowRequestResourceType = "ServerInterface"
	WorkflowRequestResourceTypeServerLog                          WorkflowRequestResourceType = "ServerLog"
	WorkflowRequestResourceTypeServerPatch                        WorkflowRequestResourceType = "ServerPatch"
	WorkflowRequestResourceTypeServerPatchApplication             WorkflowRequestResourceType = "ServerPatchApplication"
	WorkflowRequestResourceTypeServiceOption                      WorkflowRequestResourceType = "ServiceOption"
	WorkflowRequestResourceTypeSigningKey                         WorkflowRequestResourceType = "SigningKey"
	WorkflowRequestResourceTypeStartOfAuthority                   WorkflowRequestResourceType = "StartOfAuthority"
	WorkflowRequestResourceTypeStartOfAuthorityDefinition         WorkflowRequestResourceType = "StartOfAuthorityDefinition"
	WorkflowRequestResourceTypeSyslogService                      WorkflowRequestResourceType = "SyslogService"
	WorkflowRequestResourceTypeSystemLog                          WorkflowRequestResourceType = "SystemLog"
	WorkflowRequestResourceTypeSystemSettings                     WorkflowRequestResourceType = "SystemSettings"
	WorkflowRequestResourceTypeTACACSPlusAuthenticator            WorkflowRequestResourceType = "TACACSPlusAuthenticator"
	WorkflowRequestResourceTypeTFTPDeploymentRole                 WorkflowRequestResourceType = "TFTPDeploymentRole"
	WorkflowRequestResourceTypeTFTPFile                           WorkflowRequestResourceType = "TFTPFile"
	WorkflowRequestResourceTypeTFTPFolder                         WorkflowRequestResourceType = "TFTPFolder"
	WorkflowRequestResourceTypeTFTPGroup                          WorkflowRequestResourceType = "TFTPGroup"
	WorkflowRequestResourceTypeTFTPNode                           WorkflowRequestResourceType = "TFTPNode"
	WorkflowRequestResourceTypeTSIGKey                            WorkflowRequestResourceType = "TSIGKey"
	WorkflowRequestResourceTypeTXTRecord                          WorkflowRequestResourceType = "TXTRecord"
	WorkflowRequestResourceTypeTag                                WorkflowRequestResourceType = "Tag"
	WorkflowRequestResourceTypeTagGroup                           WorkflowRequestResourceType = "TagGroup"
	WorkflowRequestResourceTypeTask                               WorkflowRequestResourceType = "Task"
	WorkflowRequestResourceTypeTransaction                        WorkflowRequestResourceType = "Transaction"
	WorkflowRequestResourceTypeTrustRelationship                  WorkflowRequestResourceType = "TrustRelationship"
	WorkflowRequestResourceTypeURIRecord                          WorkflowRequestResourceType = "URIRecord"
	WorkflowRequestResourceTypeUser                               WorkflowRequestResourceType = "User"
	WorkflowRequestResourceTypeUserDefinedFieldDefinition         WorkflowRequestResourceType = "UserDefinedFieldDefinition"
	WorkflowRequestResourceTypeUserDefinedLinkDefinition          WorkflowRequestResourceType = "UserDefinedLinkDefinition"
	WorkflowRequestResourceTypeUserGroup                          WorkflowRequestResourceType = "UserGroup"
	WorkflowRequestResourceTypeUserSession                        WorkflowRequestResourceType = "UserSession"
	WorkflowRequestResourceTypeValidationDeployment               WorkflowRequestResourceType = "ValidationDeployment"
	WorkflowRequestResourceTypeVendorProfile                      WorkflowRequestResourceType = "VendorProfile"
	WorkflowRequestResourceTypeView                               WorkflowRequestResourceType = "View"
	WorkflowRequestResourceTypeVirtualInterface                   WorkflowRequestResourceType = "VirtualInterface"
	WorkflowRequestResourceTypeWebAccessSettings                  WorkflowRequestResourceType = "WebAccessSettings"
	WorkflowRequestResourceTypeWidget                             WorkflowRequestResourceType = "Widget"
	WorkflowRequestResourceTypeWorkflowRequest                    WorkflowRequestResourceType = "WorkflowRequest"
	WorkflowRequestResourceTypeX509Authenticator                  WorkflowRequestResourceType = "X509Authenticator"
	WorkflowRequestResourceTypeZone                               WorkflowRequestResourceType = "Zone"
	WorkflowRequestResourceTypeZoneImport                         WorkflowRequestResourceType = "ZoneImport"
	WorkflowRequestResourceTypeZoneMove                           WorkflowRequestResourceType = "ZoneMove"
	WorkflowRequestResourceTypeZoneSigningKey                     WorkflowRequestResourceType = "ZoneSigningKey"
	WorkflowRequestResourceTypeZoneTemplate                       WorkflowRequestResourceType = "ZoneTemplate"
	WorkflowRequestResourceTypeZoneTemplateApplication            WorkflowRequestResourceType = "ZoneTemplateApplication"
)

// Defines values for WorkflowRequestState.
const (
	APPROVED WorkflowRequestState = "APPROVED"
	DENIED   WorkflowRequestState = "DENIED"
)

// Defines values for WorkflowRequestType.
const (
	WorkflowRequestTypeWorkflowRequest WorkflowRequestType = "WorkflowRequest"
)

// Defines values for ZoneType.
const (
	ZoneTypeZone ZoneType = "Zone"
)

// AbstractServer A list of servers that are part of the server group.
type AbstractServer struct {
	// InheritedFields The fields inherited from the parent resource.
	InheritedFields *[]string `json:"_inheritedFields,omitempty"`

	// CheckIntegrityValidation The method for which the syntax checks of the DNS zone file is checked.
	CheckIntegrityValidation *AbstractServerCheckIntegrityValidation `json:"checkIntegrityValidation,omitempty"`

	// CheckMxCnameValidation Checks if MX records point to a CNAME record rather than an A or AAAA, and determines how Address Manager handles conditions found by the check.
	CheckMxCnameValidation *AbstractServerCheckMxCnameValidation `json:"checkMxCnameValidation,omitempty"`

	// CheckMxValidation Checks if MX records point to an IP address rather than an A or AAAA, and determines how Address Manager handles conditions found by the check.
	CheckMxValidation *AbstractServerCheckMxValidation `json:"checkMxValidation,omitempty"`

	// CheckNamesValidation Checks the names within the DNS zone files and determines how Address Manager handles conditions found by the check.
	CheckNamesValidation *AbstractServerCheckNamesValidation `json:"checkNamesValidation,omitempty"`

	// CheckNsValidation Checks if NS records point to an IP address rather than an A or AAAA, and determines how Address Manager handles conditions found by the check.
	CheckNsValidation *AbstractServerCheckNsValidation `json:"checkNsValidation,omitempty"`

	// CheckSrvCnameValidation Checks if SRV records point to a CNAME record rather than an A or AAAA, and determines how Address Manager handles conditions found by the check.
	CheckSrvCnameValidation *AbstractServerCheckSrvCnameValidation `json:"checkSrvCnameValidation,omitempty"`

	// CheckWildcardValidation Checks for wildcards in zone names that don't appear as the last segment of a zone name, and determines how Address Manager handles conditions found by the check.
	CheckWildcardValidation *AbstractServerCheckWildcardValidation `json:"checkWildcardValidation,omitempty"`
	Configuration           *InlinedConfiguration                  `json:"configuration,omitempty"`

	// Connected Indicates whether the server is connected to Address Manager.
	Connected *bool `json:"connected,omitempty"`

	// DhcpConfigurationValidationEnabled Indicates whether the syntax of the dhcpd.conf file is validated prior to deployment from Address Manager.
	DhcpConfigurationValidationEnabled *bool                            `json:"dhcpConfigurationValidationEnabled,omitempty"`
	DhcpServicePrincipal               *InlinedKerberosServicePrincipal `json:"dhcpServicePrincipal,omitempty"`

	// DnsConfigurationValidationEnabled Indicates whether the syntax of the named.conf file is validated prior to deployment from Address Manager.
	DnsConfigurationValidationEnabled *bool                            `json:"dnsConfigurationValidationEnabled,omitempty"`
	DnsServicePrincipal               *InlinedKerberosServicePrincipal `json:"dnsServicePrincipal,omitempty"`

	// DnsZoneValidationEnabled Indicates whether the syntax of each DNS zone file is validated prior to deployment from Address Manager.
	DnsZoneValidationEnabled *bool `json:"dnsZoneValidationEnabled,omitempty"`

	// EncryptedNotificationsEnabled Indicates whether notifications are encrypted between Address Manager and the DNS/DHCP Server
	EncryptedNotificationsEnabled *bool `json:"encryptedNotificationsEnabled,omitempty"`

	// HaBackboneEnabled Indicates whether a backbone is enabled between nodes of a high-availability pair.
	HaBackboneEnabled *bool `json:"haBackboneEnabled,omitempty"`

	// HaPingAddress Sets the ping address of the high-availability pair.
	HaPingAddress *string `json:"haPingAddress,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Interfaces The list of network interfaces of the server.
	Interfaces *[]NetworkInterface `json:"interfaces,omitempty"`
	Location   *InlinedLocation    `json:"location,omitempty"`

	// ManagementUrl Specifies the management URL for an F5 LTM or GTM server.
	ManagementUrl *string `json:"managementUrl,omitempty"`

	// MonitoringEnabled Indicates whether monitoring service is enabled on the server.
	MonitoringEnabled *bool `json:"monitoringEnabled,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// OverrideConfigurationLevelDhcpValidation Indicates whether DHCP deployment validation settings configured at the configuration level are overridden at the server level.
	OverrideConfigurationLevelDhcpValidation *bool `json:"overrideConfigurationLevelDhcpValidation,omitempty"`

	// OverrideConfigurationLevelDnsValidation Indicates whether DNS deployment validation settings configured at the configuration level are overridden at the server level.
	OverrideConfigurationLevelDnsValidation *bool `json:"overrideConfigurationLevelDnsValidation,omitempty"`

	// Password The password used to authenticate with the server.
	Password *string `json:"password,omitempty"`

	// PrivateAddress The private IP address of the server.
	PrivateAddress *string `json:"privateAddress,omitempty"`

	// Profile The profile of the server.
	Profile *AbstractServerProfile `json:"profile,omitempty"`

	// SelfIpAddress Specifies the self URL for an F5 GTM server.
	SelfIpAddress *string      `json:"selfIpAddress,omitempty"`
	ServerGroup   *ServerGroup `json:"serverGroup,omitempty"`

	// ServiceProviderAccount The hosting service account name or number associated with the BlueCat Cloud DNS subscription.
	ServiceProviderAccount *string `json:"serviceProviderAccount,omitempty"`

	// ServiceProviderApiKey The hosting service API key associated with the BlueCat Cloud DNS subscription.
	ServiceProviderApiKey *string `json:"serviceProviderApiKey,omitempty"`

	// Snmp Defines the SNMP settings of the configuration.
	Snmp *SNMP `json:"snmp,omitempty"`

	// State The current state of the server, indicating whether the server is enabled or disabled.
	State *AbstractServerState `json:"state,omitempty"`

	// Statistics Displays statistics information collected from the monitoring service.
	Statistics *map[string]map[string]interface{} `json:"statistics,omitempty"`

	// Type The server scope resource type.
	Type *AbstractServerType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`

	// Username The username used to authenticate with the server.
	Username *string `json:"username,omitempty"`
}

// AbstractServerCheckIntegrityValidation The method for which the syntax checks of the DNS zone file is checked.
type AbstractServerCheckIntegrityValidation string

// AbstractServerCheckMxCnameValidation Checks if MX records point to a CNAME record rather than an A or AAAA, and determines how Address Manager handles conditions found by the check.
type AbstractServerCheckMxCnameValidation string

// AbstractServerCheckMxValidation Checks if MX records point to an IP address rather than an A or AAAA, and determines how Address Manager handles conditions found by the check.
type AbstractServerCheckMxValidation string

// AbstractServerCheckNamesValidation Checks the names within the DNS zone files and determines how Address Manager handles conditions found by the check.
type AbstractServerCheckNamesValidation string

// AbstractServerCheckNsValidation Checks if NS records point to an IP address rather than an A or AAAA, and determines how Address Manager handles conditions found by the check.
type AbstractServerCheckNsValidation string

// AbstractServerCheckSrvCnameValidation Checks if SRV records point to a CNAME record rather than an A or AAAA, and determines how Address Manager handles conditions found by the check.
type AbstractServerCheckSrvCnameValidation string

// AbstractServerCheckWildcardValidation Checks for wildcards in zone names that don't appear as the last segment of a zone name, and determines how Address Manager handles conditions found by the check.
type AbstractServerCheckWildcardValidation string

// AbstractServerProfile The profile of the server.
type AbstractServerProfile string

// AbstractServerState The current state of the server, indicating whether the server is enabled or disabled.
type AbstractServerState string

// AbstractServerType The server scope resource type.
type AbstractServerType string

// Address An IP address assigned to the host record.
type Address struct {
	// Address The IP address.
	Address       *string               `json:"address,omitempty"`
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`
	Device        *Address_Device       `json:"device,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// LeaseDateTime The timestamp detailing when the lease for the IP address was offered.
	LeaseDateTime *time.Time `json:"leaseDateTime,omitempty"`

	// LeaseExpirationDateTime The timestamp detailing when the lease for the IP address expires.
	LeaseExpirationDateTime *time.Time          `json:"leaseExpirationDateTime,omitempty"`
	Location                *InlinedLocation    `json:"location,omitempty"`
	MacAddress              *Address_MacAddress `json:"macAddress,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// RemoteId The ID of the relay agent.
	RemoteId *string `json:"remoteId,omitempty"`

	// ResourceRecords The list of resource records to associate with the address.
	ResourceRecords *[]InlinedResourceRecord `json:"resourceRecords,omitempty"`

	// State The state of the IP address.
	State *AddressState `json:"state,omitempty"`

	// Type The type of IP address.
	Type *string `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`
}

// AddressDevice0 defines model for .
type AddressDevice0 = InlinedDevice

// AddressDevice1 defines model for .
type AddressDevice1 = InlinedDevice

// Address_Device defines model for Address.Device.
type Address_Device struct {
	union json.RawMessage
}

// AddressMacAddress0 defines model for .
type AddressMacAddress0 = InlinedMACAddress

// AddressMacAddress1 defines model for .
type AddressMacAddress1 = InlinedMACAddress

// Address_MacAddress defines model for Address.MacAddress.
type Address_MacAddress struct {
	union json.RawMessage
}

// AddressState The state of the IP address.
type AddressState string

// AdministrativeResourceAccessRightBean The administrative access right levels that the user has for the events list, log management, and reporting.
type AdministrativeResourceAccessRightBean struct {
	// AccessLevel The administrative action access level associated with the access right.
	AccessLevel *AdministrativeResourceAccessRightBeanAccessLevel `json:"accessLevel,omitempty"`

	// ResourceType The resource type the access right is applied to.
	ResourceType *AdministrativeResourceAccessRightBeanResourceType `json:"resourceType,omitempty"`
}

// AdministrativeResourceAccessRightBeanAccessLevel The administrative action access level associated with the access right.
type AdministrativeResourceAccessRightBeanAccessLevel string

// AdministrativeResourceAccessRightBeanResourceType The resource type the access right is applied to.
type AdministrativeResourceAccessRightBeanResourceType string

// AliasRecord defines model for AliasRecord.
type AliasRecord struct {
	// AbsoluteName The fully qualified domain name of the resource record.
	AbsoluteName *string `json:"absoluteName,omitempty"`

	// Comment The additional comments associated with the resource record.
	Comment       *string               `json:"comment,omitempty"`
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`

	// Dynamic Indicates whether the resource record is dynamic.
	Dynamic *bool `json:"dynamic,omitempty"`

	// Id The resource identifier.
	Id           *int64                    `json:"id,omitempty"`
	LinkedRecord *AliasRecord_LinkedRecord `json:"linkedRecord,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// RecordType The resource record type.
	RecordType *AliasRecordRecordType `json:"recordType,omitempty"`

	// Ttl The overridden TTL value of the resource record, in seconds.
	Ttl *int64 `json:"ttl,omitempty"`

	// Type The resource type.
	Type *AliasRecordType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`
}

// AliasRecordLinkedRecord0 defines model for .
type AliasRecordLinkedRecord0 = InlinedResourceRecord

// AliasRecordLinkedRecord1 defines model for .
type AliasRecordLinkedRecord1 = InlinedResourceRecord

// AliasRecord_LinkedRecord defines model for AliasRecord.LinkedRecord.
type AliasRecord_LinkedRecord struct {
	union json.RawMessage
}

// AliasRecordRecordType The resource record type.
type AliasRecordRecordType string

// AliasRecordType The resource type.
type AliasRecordType string

// AliasRecordCollectionHalLinks defines model for AliasRecordCollectionHalLinks.
type AliasRecordCollectionHalLinks struct {
	Next *struct {
		Href *string `json:"href,omitempty"`
	} `json:"next,omitempty"`
	Prev *struct {
		Href *string `json:"href,omitempty"`
	} `json:"prev,omitempty"`
}

// AliasRecordPostRequestBody defines model for AliasRecordPostRequestBody.
type AliasRecordPostRequestBody = AliasRecord

// AliasRecordResourceLinks defines model for AliasRecordResourceLinks.
type AliasRecordResourceLinks struct {
	Collection *struct {
		Href *string `json:"href,omitempty"`
	} `json:"collection,omitempty"`
	Self *struct {
		Href *string `json:"href,omitempty"`
	} `json:"self,omitempty"`
}

// Authenticator The authenticator that manages the user.
type Authenticator struct {
	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name for the authenticator.
	Name *string `json:"name,omitempty"`

	// Type The type of authenticator.
	Type *AuthenticatorType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`
}

// AuthenticatorType The type of authenticator.
type AuthenticatorType string

// BadRequestError defines model for BadRequestError.
type BadRequestError struct {
	Code    *BadRequestErrorCode   `json:"code,omitempty"`
	Message *string                `json:"message,omitempty"`
	Reason  *BadRequestErrorReason `json:"reason,omitempty"`
	Status  *BadRequestErrorStatus `json:"status,omitempty"`
}

// BadRequestErrorCode defines model for BadRequestError.Code.
type BadRequestErrorCode string

// BadRequestErrorReason defines model for BadRequestError.Reason.
type BadRequestErrorReason string

// BadRequestErrorStatus defines model for BadRequestError.Status.
type BadRequestErrorStatus int32

// CollectionCount defines model for CollectionCount.
type CollectionCount = int32

// CollectionTotalCount defines model for CollectionTotalCount.
type CollectionTotalCount = int32

// ConflictError defines model for ConflictError.
type ConflictError struct {
	Code    *ConflictErrorCode   `json:"code,omitempty"`
	Message *string              `json:"message,omitempty"`
	Reason  *ConflictErrorReason `json:"reason,omitempty"`
	Status  *ConflictErrorStatus `json:"status,omitempty"`
}

// ConflictErrorCode defines model for ConflictError.Code.
type ConflictErrorCode string

// ConflictErrorReason defines model for ConflictError.Reason.
type ConflictErrorReason string

// ConflictErrorStatus defines model for ConflictError.Status.
type ConflictErrorStatus int32

// ENUMNumberZone defines model for ENUMNumberZone.
type ENUMNumberZone struct {
	// AbsoluteName The FQDN of the ENUM zone number.
	AbsoluteName  *string               `json:"absoluteName,omitempty"`
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// NumberName The numeric value of the ENUM number.
	NumberName *string `json:"numberName,omitempty"`

	// Type The resource type.
	Type *ENUMNumberZoneType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`
	View              *View                              `json:"view,omitempty"`
}

// ENUMNumberZoneType The resource type.
type ENUMNumberZoneType string

// ENUMNumberZoneCollectionHalLinks defines model for ENUMNumberZoneCollectionHalLinks.
type ENUMNumberZoneCollectionHalLinks struct {
	Next *struct {
		Href *string `json:"href,omitempty"`
	} `json:"next,omitempty"`
	Prev *struct {
		Href *string `json:"href,omitempty"`
	} `json:"prev,omitempty"`
}

// ENUMNumberZoneResourceLinks defines model for ENUMNumberZoneResourceLinks.
type ENUMNumberZoneResourceLinks struct {
	Collection *struct {
		Href *string `json:"href,omitempty"`
	} `json:"collection,omitempty"`
	Self *struct {
		Href *string `json:"href,omitempty"`
	} `json:"self,omitempty"`
}

// ENUMZone defines model for ENUMZone.
type ENUMZone struct {
	// AbsoluteName The FQDN of the ENUM zone.
	AbsoluteName  *string               `json:"absoluteName,omitempty"`
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`

	// DeploymentEnabled Indicates whether the ENUM zone is deployable.
	DeploymentEnabled *bool `json:"deploymentEnabled,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The value for the portion of the telephone number that the ENUM zone represents. ENUM zones represents a portion of a telephone number, such as the country code, area code, or exchange.
	Name *string `json:"name,omitempty"`

	// Type The resource type.
	Type *ENUMZoneType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`
	View              *View                              `json:"view,omitempty"`
}

// ENUMZoneType The resource type.
type ENUMZoneType string

// ExternalHostRecord defines model for ExternalHostRecord.
type ExternalHostRecord struct {
	// AbsoluteName The fully qualified domain name of the resource record.
	AbsoluteName *string `json:"absoluteName,omitempty"`

	// Comment The additional comments associated with the resource record.
	Comment       *string               `json:"comment,omitempty"`
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`

	// Dynamic Indicates whether the resource record is dynamic.
	Dynamic *bool `json:"dynamic,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Ttl The overridden TTL value of the resource record, in seconds.
	Ttl *int64 `json:"ttl,omitempty"`

	// Type The resource type.
	Type *ExternalHostRecordType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`
	View              *InlinedView                       `json:"view,omitempty"`
}

// ExternalHostRecordType The resource type.
type ExternalHostRecordType string

// ExternalHostRecordPostRequestBody defines model for ExternalHostRecordPostRequestBody.
type ExternalHostRecordPostRequestBody = ExternalHostRecord

// ExternalHostsZone defines model for ExternalHostsZone.
type ExternalHostsZone struct {
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Type The resource type.
	Type *ExternalHostsZoneType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`
	View              *View                              `json:"view,omitempty"`
}

// ExternalHostsZoneType The resource type.
type ExternalHostsZoneType string

// FieldUpdateBean A list of updated fields in the workflow request.
type FieldUpdateBean struct {
	// Name The name of the field.
	Name          *string                 `json:"name,omitempty"`
	PreviousValue *map[string]interface{} `json:"previousValue,omitempty"`
	Value         *map[string]interface{} `json:"value,omitempty"`
}

// ForbiddenError defines model for ForbiddenError.
type ForbiddenError struct {
	Code    *ForbiddenErrorCode   `json:"code,omitempty"`
	Message *string               `json:"message,omitempty"`
	Reason  *ForbiddenErrorReason `json:"reason,omitempty"`
	Status  *ForbiddenErrorStatus `json:"status,omitempty"`
}

// ForbiddenErrorCode defines model for ForbiddenError.Code.
type ForbiddenErrorCode string

// ForbiddenErrorReason defines model for ForbiddenError.Reason.
type ForbiddenErrorReason string

// ForbiddenErrorStatus defines model for ForbiddenError.Status.
type ForbiddenErrorStatus int32

// GenericRecord defines model for GenericRecord.
type GenericRecord struct {
	// AbsoluteName The fully qualified domain name of the resource record.
	AbsoluteName *string `json:"absoluteName,omitempty"`

	// Comment The additional comments associated with the resource record.
	Comment       *string               `json:"comment,omitempty"`
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`

	// Dynamic Indicates whether the resource record is dynamic.
	Dynamic *bool `json:"dynamic,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Rdata The resource record data.
	Rdata *string `json:"rdata,omitempty"`

	// RecordType The resource record type.
	RecordType *GenericRecordRecordType `json:"recordType,omitempty"`

	// Ttl The overridden TTL value of the resource record, in seconds.
	Ttl *int64 `json:"ttl,omitempty"`

	// Type The resource type.
	Type *GenericRecordType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`
}

// GenericRecordRecordType The resource record type.
type GenericRecordRecordType string

// GenericRecordType The resource type.
type GenericRecordType string

// GenericRecordPostRequestBody defines model for GenericRecordPostRequestBody.
type GenericRecordPostRequestBody = GenericRecord

// HINFORecord defines model for HINFORecord.
type HINFORecord struct {
	// AbsoluteName The fully qualified domain name of the resource record.
	AbsoluteName *string `json:"absoluteName,omitempty"`

	// Comment The additional comments associated with the resource record.
	Comment       *string               `json:"comment,omitempty"`
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`

	// Cpu The string describing the server CPU.
	Cpu *string `json:"cpu,omitempty"`

	// Dynamic Indicates whether the resource record is dynamic.
	Dynamic *bool `json:"dynamic,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Os The string describing the server operating system.
	Os *string `json:"os,omitempty"`

	// RecordType The resource record type.
	RecordType *HINFORecordRecordType `json:"recordType,omitempty"`

	// Ttl The overridden TTL value of the resource record, in seconds.
	Ttl *int64 `json:"ttl,omitempty"`

	// Type The resource type.
	Type *HINFORecordType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`
}

// HINFORecordRecordType The resource record type.
type HINFORecordRecordType string

// HINFORecordType The resource type.
type HINFORecordType string

// HINFORecordPostRequestBody defines model for HINFORecordPostRequestBody.
type HINFORecordPostRequestBody = HINFORecord

// HTTPSRecord defines model for HTTPSRecord.
type HTTPSRecord struct {
	// AbsoluteName The fully qualified domain name of the resource record.
	AbsoluteName *string `json:"absoluteName,omitempty"`

	// Comment The additional comments associated with the resource record.
	Comment       *string               `json:"comment,omitempty"`
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`

	// Dynamic Indicates whether the resource record is dynamic.
	Dynamic *bool `json:"dynamic,omitempty"`

	// Id The resource identifier.
	Id           *int64                    `json:"id,omitempty"`
	LinkedRecord *HTTPSRecord_LinkedRecord `json:"linkedRecord,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Priority The priority of the record relative to others. Set a value of zero to indicate AliasMode, or set a non-zero value to indicate ServiceMode. For service mode only: Configuring multiple HTTPS records with the same domain name and priority will trigger a simple load-distribution scheme inside the client. Using different values in the priority field will create a fallback configuration for the service that favours lower values first.
	Priority *int32 `json:"priority,omitempty"`

	// RecordType The resource record type.
	RecordType *HTTPSRecordRecordType `json:"recordType,omitempty"`

	// ServiceParameters Service parameter key/value pairs describing the alternative endpoint. These parameters are optional and only for ServiceMode.
	ServiceParameters *SVCBServiceParameters `json:"serviceParameters,omitempty"`

	// Ttl The overridden TTL value of the resource record, in seconds.
	Ttl *int64 `json:"ttl,omitempty"`

	// Type The resource type.
	Type *HTTPSRecordType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`
}

// HTTPSRecordLinkedRecord0 defines model for .
type HTTPSRecordLinkedRecord0 = InlinedLinkableHostRecord

// HTTPSRecordLinkedRecord1 defines model for .
type HTTPSRecordLinkedRecord1 = InlinedLinkableHostRecord

// HTTPSRecord_LinkedRecord defines model for HTTPSRecord.LinkedRecord.
type HTTPSRecord_LinkedRecord struct {
	union json.RawMessage
}

// HTTPSRecordRecordType The resource record type.
type HTTPSRecordRecordType string

// HTTPSRecordType The resource type.
type HTTPSRecordType string

// HTTPSRecordPostRequestBody defines model for HTTPSRecordPostRequestBody.
type HTTPSRecordPostRequestBody = HTTPSRecord

// HostRecord defines model for HostRecord.
type HostRecord struct {
	// AbsoluteName The fully qualified domain name of the resource record.
	AbsoluteName *string    `json:"absoluteName,omitempty"`
	Addresses    *[]Address `json:"addresses,omitempty"`

	// Comment The additional comments associated with the resource record.
	Comment       *string               `json:"comment,omitempty"`
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`

	// DependentRecords The list of alias records associated with the current resource records.
	DependentRecords *[]HostRecord_DependentRecords_Item `json:"dependentRecords,omitempty"`

	// Dynamic Indicates whether the resource record is dynamic.
	Dynamic *bool `json:"dynamic,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// RecordType The resource record type.
	RecordType *HostRecordRecordType `json:"recordType,omitempty"`

	// ReverseRecord Indicates if a PTR record is created for the host record.
	ReverseRecord *bool `json:"reverseRecord,omitempty"`

	// Ttl The overridden TTL value of the resource record, in seconds.
	Ttl *int64 `json:"ttl,omitempty"`

	// Type The resource type.
	Type *HostRecordType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`

	// Views A list of views associated with the resource record. This field is only necessary when linking host records with an address.
	Views *[]InlinedView `json:"views,omitempty"`
}

// HostRecordDependentRecords0 defines model for .
type HostRecordDependentRecords0 = InlinedAliasRecord

// HostRecordDependentRecords1 defines model for .
type HostRecordDependentRecords1 = InlinedAliasRecord

// HostRecord_DependentRecords_Item defines model for HostRecord.dependentRecords.Item.
type HostRecord_DependentRecords_Item struct {
	union json.RawMessage
}

// HostRecordRecordType The resource record type.
type HostRecordRecordType string

// HostRecordType The resource type.
type HostRecordType string

// HostRecordPostRequestBody defines model for HostRecordPostRequestBody.
type HostRecordPostRequestBody = HostRecord

// IPv4Address defines model for IPv4Address.
type IPv4Address struct {
	// Address The IP address.
	Address *string `json:"address,omitempty"`

	// CircuitId The ID of the circuit from which the request came.
	CircuitId        *string                      `json:"circuitId,omitempty"`
	ClientIdentifier *InlinedDHCPClientIdentifier `json:"clientIdentifier,omitempty"`
	Configuration    *InlinedConfiguration        `json:"configuration,omitempty"`
	Device           *IPv4Address_Device          `json:"device,omitempty"`

	// Id The resource identifier.
	Id      *int64            `json:"id,omitempty"`
	IpGroup *InlinedIPv4Group `json:"ipGroup,omitempty"`

	// LeaseDateTime The timestamp detailing when the lease for the IP address was offered.
	LeaseDateTime *time.Time `json:"leaseDateTime,omitempty"`

	// LeaseExpirationDateTime The timestamp detailing when the lease for the IP address expires.
	LeaseExpirationDateTime *time.Time              `json:"leaseExpirationDateTime,omitempty"`
	Location                *InlinedLocation        `json:"location,omitempty"`
	MacAddress              *IPv4Address_MacAddress `json:"macAddress,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// ParameterRequestList The list of parameters that the device requested from the DHCP server.
	ParameterRequestList *[]int32 `json:"parameterRequestList,omitempty"`

	// RemoteId The ID of the relay agent.
	RemoteId *string `json:"remoteId,omitempty"`

	// ResourceRecords The list of resource records to associate with the address.
	ResourceRecords *[]InlinedResourceRecord `json:"resourceRecords,omitempty"`

	// RouterPortInfo Connected router port information for the IPv4 address.
	RouterPortInfo *string `json:"routerPortInfo,omitempty"`

	// State The state of the IP address.
	State *IPv4AddressState `json:"state,omitempty"`

	// SwitchPortInfo Connected switch port information for the IPv4 address.
	SwitchPortInfo *string              `json:"switchPortInfo,omitempty"`
	Template       *InlinedIPv4Template `json:"template,omitempty"`

	// Type The type of IP address.
	Type *IPv4AddressType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`

	// VendorClassIdentifier An identifier sent by the DHCP client software running on a device.
	VendorClassIdentifier *string `json:"vendorClassIdentifier,omitempty"`

	// VlanInfo VLAN information for the IPv4 address.
	VlanInfo *string `json:"vlanInfo,omitempty"`
}

// IPv4AddressDevice0 defines model for .
type IPv4AddressDevice0 = InlinedDevice

// IPv4AddressDevice1 defines model for .
type IPv4AddressDevice1 = InlinedDevice

// IPv4Address_Device defines model for IPv4Address.Device.
type IPv4Address_Device struct {
	union json.RawMessage
}

// IPv4AddressMacAddress0 defines model for .
type IPv4AddressMacAddress0 = InlinedMACAddress

// IPv4AddressMacAddress1 defines model for .
type IPv4AddressMacAddress1 = InlinedMACAddress

// IPv4Address_MacAddress defines model for IPv4Address.MacAddress.
type IPv4Address_MacAddress struct {
	union json.RawMessage
}

// IPv4AddressState The state of the IP address.
type IPv4AddressState string

// IPv4AddressType The type of IP address.
type IPv4AddressType string

// IPv4AddressCollectionHalLinks defines model for IPv4AddressCollectionHalLinks.
type IPv4AddressCollectionHalLinks struct {
	Next *struct {
		Href *string `json:"href,omitempty"`
	} `json:"next,omitempty"`
	Prev *struct {
		Href *string `json:"href,omitempty"`
	} `json:"prev,omitempty"`
}

// IPv4AddressResourceLinks defines model for IPv4AddressResourceLinks.
type IPv4AddressResourceLinks struct {
	Collection *struct {
		Href *string `json:"href,omitempty"`
	} `json:"collection,omitempty"`
	Self *struct {
		Href *string `json:"href,omitempty"`
	} `json:"self,omitempty"`
}

// IPv6Address defines model for IPv6Address.
type IPv6Address struct {
	// Address The IP address.
	Address          *string                      `json:"address,omitempty"`
	ClientIdentifier *InlinedDHCPUniqueIdentifier `json:"clientIdentifier,omitempty"`
	Configuration    *InlinedConfiguration        `json:"configuration,omitempty"`
	Device           *IPv6Address_Device          `json:"device,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// IdentityAssociationIdentifier The Identity Association Identifier for the network interface of the client system.
	IdentityAssociationIdentifier *string `json:"identityAssociationIdentifier,omitempty"`

	// InterfaceId The ID of the interface from which the request came.
	InterfaceId *string `json:"interfaceId,omitempty"`

	// LeaseDateTime The timestamp detailing when the lease for the IP address was offered.
	LeaseDateTime *time.Time `json:"leaseDateTime,omitempty"`

	// LeaseExpirationDateTime The timestamp detailing when the lease for the IP address expires.
	LeaseExpirationDateTime *time.Time              `json:"leaseExpirationDateTime,omitempty"`
	Location                *InlinedLocation        `json:"location,omitempty"`
	MacAddress              *IPv6Address_MacAddress `json:"macAddress,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// RemoteId The ID of the relay agent.
	RemoteId *string `json:"remoteId,omitempty"`

	// ReservedUsing The type of DHCP reservation.
	ReservedUsing *IPv6AddressReservedUsing `json:"reservedUsing,omitempty"`

	// ResourceRecords The list of resource records to associate with the address.
	ResourceRecords *[]InlinedResourceRecord `json:"resourceRecords,omitempty"`

	// State The state of the IP address.
	State *IPv6AddressState `json:"state,omitempty"`

	// Type The type of IP address.
	Type *IPv6AddressType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`
}

// IPv6AddressDevice0 defines model for .
type IPv6AddressDevice0 = InlinedDevice

// IPv6AddressDevice1 defines model for .
type IPv6AddressDevice1 = InlinedDevice

// IPv6Address_Device defines model for IPv6Address.Device.
type IPv6Address_Device struct {
	union json.RawMessage
}

// IPv6AddressMacAddress0 defines model for .
type IPv6AddressMacAddress0 = InlinedMACAddress

// IPv6AddressMacAddress1 defines model for .
type IPv6AddressMacAddress1 = InlinedMACAddress

// IPv6Address_MacAddress defines model for IPv6Address.MacAddress.
type IPv6Address_MacAddress struct {
	union json.RawMessage
}

// IPv6AddressReservedUsing The type of DHCP reservation.
type IPv6AddressReservedUsing string

// IPv6AddressState The state of the IP address.
type IPv6AddressState string

// IPv6AddressType The type of IP address.
type IPv6AddressType string

// InlinedAliasRecord defines model for InlinedAliasRecord.
type InlinedAliasRecord struct {
	// AbsoluteName The fully qualified domain name of the resource record.
	AbsoluteName *string `json:"absoluteName,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Type The resource type.
	Type *InlinedAliasRecordType `json:"type,omitempty"`
}

// InlinedAliasRecordType The resource type.
type InlinedAliasRecordType string

// InlinedAuthenticator defines model for InlinedAuthenticator.
type InlinedAuthenticator struct {
	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name for the authenticator.
	Name *string `json:"name,omitempty"`

	// Type The type of authenticator.
	Type *InlinedAuthenticatorType `json:"type,omitempty"`
}

// InlinedAuthenticatorType The type of authenticator.
type InlinedAuthenticatorType string

// InlinedConfiguration defines model for InlinedConfiguration.
type InlinedConfiguration struct {
	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Type The resource type.
	Type *InlinedConfigurationType `json:"type,omitempty"`
}

// InlinedConfigurationType The resource type.
type InlinedConfigurationType string

// InlinedDHCPClientIdentifier defines model for InlinedDHCPClientIdentifier.
type InlinedDHCPClientIdentifier struct {
	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Type The resource type.
	Type *InlinedDHCPClientIdentifierType `json:"type,omitempty"`

	// Uid The DHCP client identifier.
	Uid *UID `json:"uid,omitempty"`
}

// InlinedDHCPClientIdentifierType The resource type.
type InlinedDHCPClientIdentifierType string

// InlinedDHCPUniqueIdentifier defines model for InlinedDHCPUniqueIdentifier.
type InlinedDHCPUniqueIdentifier struct {
	// Duid The DHCP unique identifier.
	Duid *string `json:"duid,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Type The resource type.
	Type *InlinedDHCPUniqueIdentifierType `json:"type,omitempty"`
}

// InlinedDHCPUniqueIdentifierType The resource type.
type InlinedDHCPUniqueIdentifierType string

// InlinedDNSSECSigningPolicy defines model for InlinedDNSSECSigningPolicy.
type InlinedDNSSECSigningPolicy struct {
	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Type The resource type.
	Type *InlinedDNSSECSigningPolicyType `json:"type,omitempty"`
}

// InlinedDNSSECSigningPolicyType The resource type.
type InlinedDNSSECSigningPolicyType string

// InlinedDevice defines model for InlinedDevice.
type InlinedDevice struct {
	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the device.
	Name *string `json:"name,omitempty"`

	// Type The resource type.
	Type *InlinedDeviceType `json:"type,omitempty"`
}

// InlinedDeviceType The resource type.
type InlinedDeviceType string

// InlinedIPv4Group defines model for InlinedIPv4Group.
type InlinedIPv4Group struct {
	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the IPv4 group.
	Name *string `json:"name,omitempty"`

	// Type The resource type.
	Type *InlinedIPv4GroupType `json:"type,omitempty"`
}

// InlinedIPv4GroupType The resource type.
type InlinedIPv4GroupType string

// InlinedIPv4Template defines model for InlinedIPv4Template.
type InlinedIPv4Template struct {
	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Type The resource type.
	Type *InlinedIPv4TemplateType `json:"type,omitempty"`
}

// InlinedIPv4TemplateType The resource type.
type InlinedIPv4TemplateType string

// InlinedKerberosServicePrincipal defines model for InlinedKerberosServicePrincipal.
type InlinedKerberosServicePrincipal struct {
	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name for the Kerberos service principal defined in the User Logon name field in Windows configuration section.
	Name *string `json:"name,omitempty"`

	// Type The resource type.
	Type *InlinedKerberosServicePrincipalType `json:"type,omitempty"`
}

// InlinedKerberosServicePrincipalType The resource type.
type InlinedKerberosServicePrincipalType string

// InlinedLinkableHostRecord defines model for InlinedLinkableHostRecord.
type InlinedLinkableHostRecord struct {
	// AbsoluteName The fully qualified domain name of the resource record.
	AbsoluteName *string `json:"absoluteName,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Type The resource type.
	Type *string `json:"type,omitempty"`
}

// InlinedLocation defines model for InlinedLocation.
type InlinedLocation struct {
	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Type The resource type.
	Type *InlinedLocationType `json:"type,omitempty"`
}

// InlinedLocationType The resource type.
type InlinedLocationType string

// InlinedMACAddress defines model for InlinedMACAddress.
type InlinedMACAddress struct {
	// Address The MAC address.
	Address *string `json:"address,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Type The resource type.
	Type *InlinedMACAddressType `json:"type,omitempty"`
}

// InlinedMACAddressType The resource type.
type InlinedMACAddressType string

// InlinedResourceRecord defines model for InlinedResourceRecord.
type InlinedResourceRecord struct {
	// AbsoluteName The fully qualified domain name of the resource record.
	AbsoluteName *string `json:"absoluteName,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Type The resource type.
	Type *InlinedResourceRecordType `json:"type,omitempty"`
}

// InlinedResourceRecordType The resource type.
type InlinedResourceRecordType string

// InlinedResponsePolicy defines model for InlinedResponsePolicy.
type InlinedResponsePolicy struct {
	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the response policy
	Name *string `json:"name,omitempty"`

	// Type The resource type.
	Type *InlinedResponsePolicyType `json:"type,omitempty"`
}

// InlinedResponsePolicyType The resource type.
type InlinedResponsePolicyType string

// InlinedView defines model for InlinedView.
type InlinedView struct {
	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the view.
	Name *string `json:"name,omitempty"`

	// Type The resource type.
	Type *InlinedViewType `json:"type,omitempty"`
}

// InlinedViewType The resource type.
type InlinedViewType string

// InlinedZoneTemplate defines model for InlinedZoneTemplate.
type InlinedZoneTemplate struct {
	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Type The resource type.
	Type *InlinedZoneTemplateType `json:"type,omitempty"`
}

// InlinedZoneTemplateType The resource type.
type InlinedZoneTemplateType string

// InternalRootZone defines model for InternalRootZone.
type InternalRootZone struct {
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`

	// DeploymentEnabled Indicates whether the root zone is deployable.
	DeploymentEnabled *bool `json:"deploymentEnabled,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Type The resource type.
	Type *InternalRootZoneType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`
	View              *View                              `json:"view,omitempty"`
}

// InternalRootZoneType The resource type.
type InternalRootZoneType string

// MXRecord defines model for MXRecord.
type MXRecord struct {
	// AbsoluteName The fully qualified domain name of the resource record.
	AbsoluteName *string `json:"absoluteName,omitempty"`

	// Comment The additional comments associated with the resource record.
	Comment       *string               `json:"comment,omitempty"`
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`

	// Dynamic Indicates whether the resource record is dynamic.
	Dynamic *bool `json:"dynamic,omitempty"`

	// Id The resource identifier.
	Id           *int64                 `json:"id,omitempty"`
	LinkedRecord *MXRecord_LinkedRecord `json:"linkedRecord,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Priority The priority assigned to the mail exchanger. A lower value indicates a higher priotiry.
	Priority *int32 `json:"priority,omitempty"`

	// RecordType The resource record type.
	RecordType *MXRecordRecordType `json:"recordType,omitempty"`

	// Ttl The overridden TTL value of the resource record, in seconds.
	Ttl *int64 `json:"ttl,omitempty"`

	// Type The resource type.
	Type *MXRecordType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`
}

// MXRecordLinkedRecord0 defines model for .
type MXRecordLinkedRecord0 = InlinedLinkableHostRecord

// MXRecordLinkedRecord1 defines model for .
type MXRecordLinkedRecord1 = InlinedLinkableHostRecord

// MXRecord_LinkedRecord defines model for MXRecord.LinkedRecord.
type MXRecord_LinkedRecord struct {
	union json.RawMessage
}

// MXRecordRecordType The resource record type.
type MXRecordRecordType string

// MXRecordType The resource type.
type MXRecordType string

// MXRecordPostRequestBody defines model for MXRecordPostRequestBody.
type MXRecordPostRequestBody = MXRecord

// NAPTRRecord defines model for NAPTRRecord.
type NAPTRRecord struct {
	// AbsoluteName The fully qualified domain name of the resource record.
	AbsoluteName *string `json:"absoluteName,omitempty"`

	// Comment The additional comments associated with the resource record.
	Comment       *string               `json:"comment,omitempty"`
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`

	// Dynamic Indicates whether the resource record is dynamic.
	Dynamic *bool `json:"dynamic,omitempty"`

	// Flags The control flags in the NAPTR record. Control flags influence how the replacement functions are performed when processing the record.
	Flags *string `json:"flags,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Order The order in which NAPTR records are to be processed.
	Order *int32 `json:"order,omitempty"`

	// Preference The preference assigned to the NAPTR record. The preference is referenced when NAPTR records have the same order.
	Preference *int32 `json:"preference,omitempty"`

	// RecordType The resource record type.
	RecordType *NAPTRRecordRecordType `json:"recordType,omitempty"`

	// RegularExpression The regular expression used to transform client data.
	RegularExpression *string `json:"regularExpression,omitempty"`

	// Replacement The replacement string used to replace client data.
	Replacement *string `json:"replacement,omitempty"`

	// Service The service or protocol to which the NAPTR record resolves.
	Service *string `json:"service,omitempty"`

	// Ttl The overridden TTL value of the resource record, in seconds.
	Ttl *int64 `json:"ttl,omitempty"`

	// Type The resource type.
	Type *NAPTRRecordType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`
}

// NAPTRRecordRecordType The resource record type.
type NAPTRRecordRecordType string

// NAPTRRecordType The resource type.
type NAPTRRecordType string

// NAPTRRecordPostRequestBody defines model for NAPTRRecordPostRequestBody.
type NAPTRRecordPostRequestBody = NAPTRRecord

// NetworkInterface The network interfaces of the xHA pair.
type NetworkInterface struct {
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`

	// HaBackboneAddress The IP address of the backbone connection if configured as a member of a high availability pair.
	HaBackboneAddress *string `json:"haBackboneAddress,omitempty"`

	// HaBackbonePrefixLength The subnet prefix length of the high availability backbone.
	HaBackbonePrefixLength *int32 `json:"haBackbonePrefixLength,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// ManagementAddress The IP address configured on the eth0 interface in the DNS/DHCP Administration Console. If dedicated management is enabled, The IP address for the dedicated management interface (eth2). On a multi-interface DNS/DHCP Server, the interface is used for all management traffic such as CS, PSM, SNMP, and SSH.
	ManagementAddress *string `json:"managementAddress,omitempty"`

	// ManagementAddressPrefixLength The prefix length for the management address interface.
	ManagementAddressPrefixLength *int32 `json:"managementAddressPrefixLength,omitempty"`

	// Name The fully qualified name assigned to the interface.
	Name *string `json:"name,omitempty"`

	// RedundancyEnabled Indicates whether redundancy is enabled through port bonding.
	RedundancyEnabled *bool `json:"redundancyEnabled,omitempty"`

	// RedundancyScenario The type of redundancy scenario configured.
	RedundancyScenario *NetworkInterfaceRedundancyScenario `json:"redundancyScenario,omitempty"`

	// SecondaryAddress The secondary IP address of the interface.
	SecondaryAddress *string         `json:"secondaryAddress,omitempty"`
	Server           *AbstractServer `json:"server,omitempty"`

	// ServicesIpv4Address The IPv4 address for the services interface. On a multi-interface DNS/DHCP Server, the interface is used for all service traffic such as DNS, DHCP, and TFTP services.
	ServicesIpv4Address *string `json:"servicesIpv4Address,omitempty"`

	// ServicesIpv4PrefixLength The IPv4 prefix length for the services interface.
	ServicesIpv4PrefixLength *int32 `json:"servicesIpv4PrefixLength,omitempty"`

	// ServicesIpv6Address The IPv6 address for the services interface.
	ServicesIpv6Address *string `json:"servicesIpv6Address,omitempty"`

	// ServicesIpv6PrefixLength The IPv6 prefix length for the services interface.
	ServicesIpv6PrefixLength *int32 `json:"servicesIpv6PrefixLength,omitempty"`

	// Type The resource type.
	Type *NetworkInterfaceType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`
}

// NetworkInterfaceRedundancyScenario The type of redundancy scenario configured.
type NetworkInterfaceRedundancyScenario string

// NetworkInterfaceType The resource type.
type NetworkInterfaceType string

// NotFoundError defines model for NotFoundError.
type NotFoundError struct {
	Code    *NotFoundErrorCode   `json:"code,omitempty"`
	Message *string              `json:"message,omitempty"`
	Reason  *NotFoundErrorReason `json:"reason,omitempty"`
	Status  *NotFoundErrorStatus `json:"status,omitempty"`
}

// NotFoundErrorCode defines model for NotFoundError.Code.
type NotFoundErrorCode string

// NotFoundErrorReason defines model for NotFoundError.Reason.
type NotFoundErrorReason string

// NotFoundErrorStatus defines model for NotFoundError.Status.
type NotFoundErrorStatus int32

// Prefix The list of IPv4 blocks and networks of which resources within this zone are restricted to.
type Prefix struct {
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Range The address range for the IP block or network.
	Range *string `json:"range,omitempty"`

	// Type The resource type.
	Type *string `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`
}

// QuickDeployment defines model for QuickDeployment.
type QuickDeployment struct {
	// CompletionDateTime The completion time for the deployment.
	CompletionDateTime *time.Time `json:"completionDateTime,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Message The expanded status message for the deployment.
	Message *string `json:"message,omitempty"`

	// Method The method that triggered the deployment.
	Method *string `json:"method,omitempty"`

	// PercentComplete A percentage value representing the current progress of the deployment.
	PercentComplete *int32 `json:"percentComplete,omitempty"`

	// StartDateTime The start time of the deployment.
	StartDateTime *time.Time `json:"startDateTime,omitempty"`

	// State The current state of the deployment.
	State *QuickDeploymentState `json:"state,omitempty"`

	// Status The current status of the deployment.
	Status *QuickDeploymentStatus `json:"status,omitempty"`

	// Type The resource type.
	Type *QuickDeploymentType `json:"type,omitempty"`
	User *User                `json:"user,omitempty"`
}

// QuickDeploymentState The current state of the deployment.
type QuickDeploymentState string

// QuickDeploymentStatus The current status of the deployment.
type QuickDeploymentStatus string

// QuickDeploymentType The resource type.
type QuickDeploymentType string

// QuickDeploymentPostRequestBody defines model for QuickDeploymentPostRequestBody.
type QuickDeploymentPostRequestBody = QuickDeployment

// QuickDeploymentResourceLinks defines model for QuickDeploymentResourceLinks.
type QuickDeploymentResourceLinks struct {
	Collection *struct {
		Href *string `json:"href,omitempty"`
	} `json:"collection,omitempty"`
	Self *struct {
		Href *string `json:"href,omitempty"`
	} `json:"self,omitempty"`
}

// ResourceRecord The source where the resource record is moved from.
type ResourceRecord struct {
	// AbsoluteName The fully qualified domain name of the resource record.
	AbsoluteName *string `json:"absoluteName,omitempty"`

	// Comment The additional comments associated with the resource record.
	Comment       *string               `json:"comment,omitempty"`
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`

	// Dynamic Indicates whether the resource record is dynamic.
	Dynamic *bool `json:"dynamic,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Ttl The overridden TTL value of the resource record, in seconds.
	Ttl *int64 `json:"ttl,omitempty"`

	// Type The resource type.
	Type *ResourceRecordType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`
}

// ResourceRecordType The resource type.
type ResourceRecordType string

// ResponsePolicyZone defines model for ResponsePolicyZone.
type ResponsePolicyZone struct {
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`

	// FeedCategories A list of BlueCat Security Feed categories that the response policy zone is subscribed to.
	FeedCategories *[]string `json:"feedCategories,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// OverridePolicyType The response policy type set for BlueCat Security Feed.
	OverridePolicyType *ResponsePolicyZoneOverridePolicyType `json:"overridePolicyType,omitempty"`

	// OverrideRefreshTime The custom refresh time interval set for BlueCat Security Feed, in seconds.
	OverrideRefreshTime *string `json:"overrideRefreshTime,omitempty"`

	// RedirectTarget The target FQDN to which all undesirable connection attemps are redirected.
	RedirectTarget *string                `json:"redirectTarget,omitempty"`
	ResponsePolicy *InlinedResponsePolicy `json:"responsePolicy,omitempty"`

	// ResponsePolicyZoneType The type of response policy zone.
	ResponsePolicyZoneType *ResponsePolicyZoneResponsePolicyZoneType `json:"responsePolicyZoneType,omitempty"`

	// Type The resource type.
	Type *ResponsePolicyZoneType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`
	View              *View                              `json:"view,omitempty"`
}

// ResponsePolicyZoneOverridePolicyType The response policy type set for BlueCat Security Feed.
type ResponsePolicyZoneOverridePolicyType string

// ResponsePolicyZoneResponsePolicyZoneType The type of response policy zone.
type ResponsePolicyZoneResponsePolicyZoneType string

// ResponsePolicyZoneType The resource type.
type ResponsePolicyZoneType string

// SNMP Defines the SNMP settings of the configuration.
type SNMP struct {
	// Enabled Indicates whether SNMP service is enabled.
	Enabled *bool `json:"enabled,omitempty"`

	// Port The SNMP port that is used to communicate with the router or switch.
	Port *int32 `json:"port,omitempty"`

	// Version The SNMP version for the router or switch.
	Version *SNMPVersion `json:"version,omitempty"`
}

// SNMPVersion The SNMP version for the router or switch.
type SNMPVersion string

// SRVRecord defines model for SRVRecord.
type SRVRecord struct {
	// AbsoluteName The fully qualified domain name of the resource record.
	AbsoluteName *string `json:"absoluteName,omitempty"`

	// Comment The additional comments associated with the resource record.
	Comment       *string               `json:"comment,omitempty"`
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`

	// Dynamic Indicates whether the resource record is dynamic.
	Dynamic *bool `json:"dynamic,omitempty"`

	// Id The resource identifier.
	Id           *int64                  `json:"id,omitempty"`
	LinkedRecord *SRVRecord_LinkedRecord `json:"linkedRecord,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Port The port on which the service is located.
	Port *int32 `json:"port,omitempty"`

	// Priority The priority assigned to the service. A lower value indicates higher priority.
	Priority *int32 `json:"priority,omitempty"`

	// RecordType The resource record type.
	RecordType *SRVRecordRecordType `json:"recordType,omitempty"`

	// Ttl The overridden TTL value of the resource record, in seconds.
	Ttl *int64 `json:"ttl,omitempty"`

	// Type The resource type.
	Type *SRVRecordType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`

	// Weight The weight assigned to the service. The weight is referenced when services have the same priority.
	Weight *int32 `json:"weight,omitempty"`
}

// SRVRecordLinkedRecord0 defines model for .
type SRVRecordLinkedRecord0 = InlinedLinkableHostRecord

// SRVRecordLinkedRecord1 defines model for .
type SRVRecordLinkedRecord1 = InlinedLinkableHostRecord

// SRVRecord_LinkedRecord defines model for SRVRecord.LinkedRecord.
type SRVRecord_LinkedRecord struct {
	union json.RawMessage
}

// SRVRecordRecordType The resource record type.
type SRVRecordRecordType string

// SRVRecordType The resource type.
type SRVRecordType string

// SRVRecordPostRequestBody defines model for SRVRecordPostRequestBody.
type SRVRecordPostRequestBody = SRVRecord

// SVCBRecord defines model for SVCBRecord.
type SVCBRecord struct {
	// AbsoluteName The fully qualified domain name of the resource record.
	AbsoluteName *string `json:"absoluteName,omitempty"`

	// Comment The additional comments associated with the resource record.
	Comment       *string               `json:"comment,omitempty"`
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`

	// Dynamic Indicates whether the resource record is dynamic.
	Dynamic *bool `json:"dynamic,omitempty"`

	// Id The resource identifier.
	Id           *int64                   `json:"id,omitempty"`
	LinkedRecord *SVCBRecord_LinkedRecord `json:"linkedRecord,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Priority The priority of the record relative to others. Set a value of zero to indicate AliasMode, or set a non-zero value to indicate ServiceMode. For service mode only: Configuring multiple HTTPS records with the same domain name and priority will trigger a simple load-distribution scheme inside the client. Using different values in the priority field will create a fallback configuration for the service that favours lower values first.
	Priority *int32 `json:"priority,omitempty"`

	// RecordType The resource record type.
	RecordType *SVCBRecordRecordType `json:"recordType,omitempty"`

	// ServiceParameters Service parameter key/value pairs describing the alternative endpoint. These parameters are optional and only for ServiceMode.
	ServiceParameters *SVCBServiceParameters `json:"serviceParameters,omitempty"`

	// Ttl The overridden TTL value of the resource record, in seconds.
	Ttl *int64 `json:"ttl,omitempty"`

	// Type The resource type.
	Type *SVCBRecordType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`
}

// SVCBRecordLinkedRecord0 defines model for .
type SVCBRecordLinkedRecord0 = InlinedLinkableHostRecord

// SVCBRecordLinkedRecord1 defines model for .
type SVCBRecordLinkedRecord1 = InlinedLinkableHostRecord

// SVCBRecord_LinkedRecord defines model for SVCBRecord.LinkedRecord.
type SVCBRecord_LinkedRecord struct {
	union json.RawMessage
}

// SVCBRecordRecordType The resource record type.
type SVCBRecordRecordType string

// SVCBRecordType The resource type.
type SVCBRecordType string

// SVCBRecordPostRequestBody defines model for SVCBRecordPostRequestBody.
type SVCBRecordPostRequestBody = SVCBRecord

// SVCBServiceParameters Service parameter key/value pairs describing the alternative endpoint. These parameters are optional and only for ServiceMode.
type SVCBServiceParameters struct {
	// AlpnIdentifiers A list of TLS Application-Layer Protocol Negotiation (ALPN) Protocol IDs indicating the application protocol and associated suite of protocols supported by the endpoint. Order determines importance with first listed taking priority.
	AlpnIdentifiers *[]string `json:"alpnIdentifiers,omitempty"`

	// DefaultAlpnIdentifierEnabled Indicates whether a client is allowed to attempt connection using its default ALPN protocol version, if it is unable to connect using the protocol versions listed in alpnIdentifiers. If enabled, clients will be allowed to attempt connection using default protocol versions. If this parameter is disabled, the alpnIdentifiers parameter must be included.
	DefaultAlpnIdentifierEnabled *bool `json:"defaultAlpnIdentifierEnabled,omitempty"`

	// EncryptedClientHello A base64 encoded ECH config list which includes the public key of the service endpoint, reserved for use with the experimental TLS Encrypted Client Hello.
	EncryptedClientHello *[][]byte `json:"encryptedClientHello,omitempty"`

	// Ipv4AddressHints A list of IPv4 addresses that the client can use to reach the service if no records are cached. If the client already has the info in its cache, the cache will be used before the hint.
	Ipv4AddressHints *[]string `json:"ipv4AddressHints,omitempty"`

	// Ipv6AddressHints A list of IPv6 addresses that the client can use to reach the service if no records are cached. If the client already has the info in its cache, the cache will be used before the hint.
	Ipv6AddressHints *[]string `json:"ipv6AddressHints,omitempty"`

	// MandatoryKeys A list of service parameter keys that are mandatory for the client.
	MandatoryKeys *[]string `json:"mandatoryKeys,omitempty"`

	// Port The TCP or UDP port that should be used to reach the alternative endpoint.
	Port *int32 `json:"port,omitempty"`

	// PrivateUseValues Service parameters reserved for private use.
	PrivateUseValues *map[string]string `json:"privateUseValues,omitempty"`
}

// ServerGroup defines model for ServerGroup.
type ServerGroup struct {
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// MultiPrimary Indicates whether the server group is a multi-primary server group.
	MultiPrimary *bool `json:"multiPrimary,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Servers A list of servers that are part of the server group.
	Servers *[]AbstractServer `json:"servers,omitempty"`

	// Type The server scope resource type.
	Type *ServerGroupType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`
}

// ServerGroupType The server scope resource type.
type ServerGroupType string

// ServerScope The list of servers or server groups for the deployment.
type ServerScope struct {
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Type The server scope resource type.
	Type *string `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`
}

// TXTRecord defines model for TXTRecord.
type TXTRecord struct {
	// AbsoluteName The fully qualified domain name of the resource record.
	AbsoluteName *string `json:"absoluteName,omitempty"`

	// Comment The additional comments associated with the resource record.
	Comment       *string               `json:"comment,omitempty"`
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`

	// Dynamic Indicates whether the resource record is dynamic.
	Dynamic *bool `json:"dynamic,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// RecordType The resource record type.
	RecordType *TXTRecordRecordType `json:"recordType,omitempty"`

	// Text The text data within the TXT resource record.
	Text *string `json:"text,omitempty"`

	// Ttl The overridden TTL value of the resource record, in seconds.
	Ttl *int64 `json:"ttl,omitempty"`

	// Type The resource type.
	Type *TXTRecordType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`
}

// TXTRecordRecordType The resource record type.
type TXTRecordRecordType string

// TXTRecordType The resource type.
type TXTRecordType string

// TXTRecordPostRequestBody defines model for TXTRecordPostRequestBody.
type TXTRecordPostRequestBody = TXTRecord

// Transaction The transaction information of the split operation.
type Transaction struct {
	// Comment The change control comment of the transaction.
	Comment *string `json:"comment,omitempty"`

	// CreationDateTime The date and time of the transaction.
	CreationDateTime *string `json:"creationDateTime,omitempty"`

	// Description The description of the operation performed.
	Description *string `json:"description,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Operation The operation performed.
	Operation            *TransactionOperation `json:"operation,omitempty"`
	RevertingTransaction *Transaction          `json:"revertingTransaction,omitempty"`

	// TransactionId The unique ID of the transaction performed.
	TransactionId *int64 `json:"transactionId,omitempty"`

	// TransactionType The type of transaction performed.
	TransactionType *TransactionTransactionType `json:"transactionType,omitempty"`

	// Type The resource type.
	Type *TransactionType `json:"type,omitempty"`

	// User The user who modified the workflow request. For example, the authorized user who approved the workflow request.
	User *User `json:"user,omitempty"`
}

// TransactionOperation The operation performed.
type TransactionOperation string

// TransactionTransactionType The type of transaction performed.
type TransactionTransactionType string

// TransactionType The resource type.
type TransactionType string

// UID The DHCP client identifier.
type UID struct {
	ClientIdentifier *string `json:"clientIdentifier,omitempty"`
}

// URIRecord defines model for URIRecord.
type URIRecord struct {
	// AbsoluteName The fully qualified domain name of the resource record.
	AbsoluteName *string `json:"absoluteName,omitempty"`

	// Comment The additional comments associated with the resource record.
	Comment       *string               `json:"comment,omitempty"`
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`

	// Dynamic Indicates whether the resource record is dynamic.
	Dynamic *bool `json:"dynamic,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// Priority The priority of the target URI in the resource record. A lower value indicates higher priority.
	Priority *int32 `json:"priority,omitempty"`

	// RecordType The resource record type.
	RecordType *URIRecordRecordType `json:"recordType,omitempty"`

	// Target The URI of the target. The format of the URI must conform to the specifications set in RFC3986.
	Target *string `json:"target,omitempty"`

	// Ttl The overridden TTL value of the resource record, in seconds.
	Ttl *int64 `json:"ttl,omitempty"`

	// Type The resource type.
	Type *URIRecordType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`

	// Weight The relative weight for entries with the same priority.
	Weight *int32 `json:"weight,omitempty"`
}

// URIRecordRecordType The resource record type.
type URIRecordRecordType string

// URIRecordType The resource type.
type URIRecordType string

// URIRecordPostRequestBody defines model for URIRecordPostRequestBody.
type URIRecordPostRequestBody = URIRecord

// UnauthorizedError defines model for UnauthorizedError.
type UnauthorizedError struct {
	Code    *UnauthorizedErrorCode   `json:"code,omitempty"`
	Message *string                  `json:"message,omitempty"`
	Reason  *UnauthorizedErrorReason `json:"reason,omitempty"`
	Status  *UnauthorizedErrorStatus `json:"status,omitempty"`
}

// UnauthorizedErrorCode defines model for UnauthorizedError.Code.
type UnauthorizedErrorCode string

// UnauthorizedErrorReason defines model for UnauthorizedError.Reason.
type UnauthorizedErrorReason string

// UnauthorizedErrorStatus defines model for UnauthorizedError.Status.
type UnauthorizedErrorStatus int32

// User The user who modified the workflow request. For example, the authorized user who approved the workflow request.
type User struct {
	// AccessType The access type of the user. The access type can be GUI, API, or both.
	AccessType *UserAccessType `json:"accessType,omitempty"`

	// AccountLocked Indicates whether the user account has been locked.
	AccountLocked *bool `json:"accountLocked,omitempty"`

	// AdministrativeAccessRights The administrative access right levels that the user has for the events list, log management, and reporting.
	AdministrativeAccessRights *[]AdministrativeResourceAccessRightBean `json:"administrativeAccessRights,omitempty"`
	Authenticator              *InlinedAuthenticator                    `json:"authenticator,omitempty"`

	// Email The email address of the user.
	Email *string `json:"email,omitempty"`

	// HistoryPrivilege The configured history privilege of the user.
	HistoryPrivilege *UserHistoryPrivilege `json:"historyPrivilege,omitempty"`

	// Id The user or user group resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the user.
	Name *string `json:"name,omitempty"`

	// Password The password of the user.
	Password *string `json:"password,omitempty"`

	// PasswordResetRequired Indicates whether the user must reset their password upon their initial log in to Address Manager.
	PasswordResetRequired *bool `json:"passwordResetRequired,omitempty"`

	// PhoneNumber The phone number of the user.
	PhoneNumber *string `json:"phoneNumber,omitempty"`

	// SecurityPrivilege The configured security privilege of the user.
	SecurityPrivilege *UserSecurityPrivilege `json:"securityPrivilege,omitempty"`

	// Type The user scope resource type.
	Type *UserType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`

	// X509Required Indicates whether the user must access Address Manager using X.509 authentication only.
	X509Required *bool `json:"x509Required,omitempty"`
}

// UserAccessType The access type of the user. The access type can be GUI, API, or both.
type UserAccessType string

// UserHistoryPrivilege The configured history privilege of the user.
type UserHistoryPrivilege string

// UserSecurityPrivilege The configured security privilege of the user.
type UserSecurityPrivilege string

// UserType The user scope resource type.
type UserType string

// UserSession defines model for UserSession.
type UserSession struct {
	// ApiToken The API token of the user session.
	ApiToken *string `json:"apiToken,omitempty"`

	// ApiTokenExpirationDateTime The timestamp of the API token expiration.
	ApiTokenExpirationDateTime *time.Time `json:"apiTokenExpirationDateTime,omitempty"`

	// Authenticator The authenticator that manages the user.
	Authenticator *Authenticator `json:"authenticator,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// LoginDateTime A timestamp of when the session was initiated.
	LoginDateTime *time.Time `json:"loginDateTime,omitempty"`

	// LogoutDateTime A timestamp of when the session was terminated.
	LogoutDateTime *time.Time `json:"logoutDateTime,omitempty"`

	// Password The associated password for the username used to initiate the session.
	Password *string `json:"password,omitempty"`

	// ReadOnly Indicates whether the initiated session is a read-only session. When database replication is configured between Address Manager servers, you can initiate a read-only session to call API methods with read-only support and retrieve information from the Secondary or Tertiary Address Manager server.
	ReadOnly *bool `json:"readOnly,omitempty"`

	// RemoteAddress The IP address of the device that initiated the user session.
	RemoteAddress *string `json:"remoteAddress,omitempty"`

	// Response The response from the authenticated user session.
	Response *string `json:"response,omitempty"`

	// State The state of the user session.
	State *UserSessionState `json:"state,omitempty"`

	// Type The resource type.
	Type *UserSessionType `json:"type,omitempty"`

	// User The user who modified the workflow request. For example, the authorized user who approved the workflow request.
	User *User `json:"user,omitempty"`

	// Username The username used to initiate the session.
	Username *string `json:"username,omitempty"`
}

// UserSessionState The state of the user session.
type UserSessionState string

// UserSessionType The resource type.
type UserSessionType string

// UserSessionCollectionHalLinks defines model for UserSessionCollectionHalLinks.
type UserSessionCollectionHalLinks struct {
	Next *struct {
		Href *string `json:"href,omitempty"`
	} `json:"next,omitempty"`
	Prev *struct {
		Href *string `json:"href,omitempty"`
	} `json:"prev,omitempty"`
}

// UserSessionResourceLinks defines model for UserSessionResourceLinks.
type UserSessionResourceLinks struct {
	Collection *struct {
		Href *string `json:"href,omitempty"`
	} `json:"collection,omitempty"`
	Self *struct {
		Href *string `json:"href,omitempty"`
	} `json:"self,omitempty"`
}

// View The view the resource belongs to.
type View struct {
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`

	// DeviceRegistrationEnabled Indicates whether DNS redirection has been enabled for use with the BlueCat Device Registration Portal.
	DeviceRegistrationEnabled *bool `json:"deviceRegistrationEnabled,omitempty"`

	// DeviceRegistrationPortalAddress The IPv4 address of the BlueCat Device Registration Portal.
	DeviceRegistrationPortalAddress *string `json:"deviceRegistrationPortalAddress,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the view.
	Name *string `json:"name,omitempty"`

	// RestrictedRanges The list of IPv4 blocks and networks of which resources within this zone are restricted to.
	RestrictedRanges *[]Prefix `json:"restrictedRanges,omitempty"`

	// Type The resource type.
	Type *ViewType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`
}

// ViewType The resource type.
type ViewType string

// WorkflowRequest defines model for WorkflowRequest.
type WorkflowRequest struct {
	// Comment The change control comment added during creation of the workflow request.
	Comment *string `json:"comment,omitempty"`

	// CreationDateTime The time the workflow request was created.
	CreationDateTime *time.Time       `json:"creationDateTime,omitempty"`
	Creator          *User            `json:"creator,omitempty"`
	DependentRequest *WorkflowRequest `json:"dependentRequest,omitempty"`

	// FieldUpdates A list of updated fields in the workflow request.
	FieldUpdates *[]FieldUpdateBean `json:"fieldUpdates,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// ModificationDateTime The time the workflow request was modified.
	ModificationDateTime *time.Time `json:"modificationDateTime,omitempty"`
	Modifier             *User      `json:"modifier,omitempty"`

	// Operation The requested operation for the workflow request.
	Operation *WorkflowRequestOperation `json:"operation,omitempty"`

	// ResourceId The ID of the resource that is being created, modified, or deleted in the workflow request.
	ResourceId *int64 `json:"resourceId,omitempty"`

	// ResourceType The type of resource that is being created, modified, or deleted in the workflow request.
	ResourceType *WorkflowRequestResourceType `json:"resourceType,omitempty"`

	// State The approval state of the workflow request. The state will be PENDING if the workflow request has not yet been processed by an authorized user.
	State *WorkflowRequestState `json:"state,omitempty"`

	// Type The resource type.
	Type *WorkflowRequestType `json:"type,omitempty"`
}

// WorkflowRequestOperation The requested operation for the workflow request.
type WorkflowRequestOperation string

// WorkflowRequestResourceType The type of resource that is being created, modified, or deleted in the workflow request.
type WorkflowRequestResourceType string

// WorkflowRequestState The approval state of the workflow request. The state will be PENDING if the workflow request has not yet been processed by an authorized user.
type WorkflowRequestState string

// WorkflowRequestType The resource type.
type WorkflowRequestType string

// Zone The default DNS zone associated with the IPv4 block.
type Zone struct {
	// AbsoluteName The fully qualified name of the zone.
	AbsoluteName  *string               `json:"absoluteName,omitempty"`
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`

	// DeploymentEnabled Indicates whether the zone is deployable.
	DeploymentEnabled *bool `json:"deploymentEnabled,omitempty"`

	// DynamicUpdateEnabled Indicates whether the dynamic update feature is enabled on the zone. When enabled, any resource records that are added, updated, or deleted within the zone will be automatically deployed to the primary DNS/DHCP Server of that zone using selective deployment.
	DynamicUpdateEnabled *bool `json:"dynamicUpdateEnabled,omitempty"`

	// Id The resource identifier.
	Id *int64 `json:"id,omitempty"`

	// Name The name of the resource.
	Name *string `json:"name,omitempty"`

	// RestrictedRanges The list of IPv4 blocks and networks of which resources within this view are restricted to.
	RestrictedRanges *[]Prefix `json:"restrictedRanges,omitempty"`

	// Signed Indicates if the zone is currently signed using a DNSSEC Signing Policy.
	Signed        *bool                       `json:"signed,omitempty"`
	SigningPolicy *InlinedDNSSECSigningPolicy `json:"signingPolicy,omitempty"`
	Template      *InlinedZoneTemplate        `json:"template,omitempty"`

	// Type The resource type.
	Type *ZoneType `json:"type,omitempty"`

	// UserDefinedFields User-defined fields set for the resource.
	UserDefinedFields *map[string]map[string]interface{} `json:"userDefinedFields,omitempty"`
	View              *View                              `json:"view,omitempty"`
}

// ZoneType The resource type.
type ZoneType string

// CollectionId defines model for collectionId.
type CollectionId = int64

// Fields defines model for fields.
type Fields = string

// Filter defines model for filter.
type Filter = string

// Id defines model for id.
type Id = int64

// Limit defines model for limit.
type Limit = int32

// Offset defines model for offset.
type Offset = int32

// OrderBy defines model for orderBy.
type OrderBy = string

// Total defines model for total.
type Total = bool

// XBcnChangeControlComment defines model for x-bcn-change-control-comment.
type XBcnChangeControlComment = string

// GetAddressesParams defines parameters for GetAddresses.
type GetAddressesParams struct {
	// Fields The subset of response resource field paths.
	Fields *Fields `form:"fields,omitempty" json:"fields,omitempty"`

	// Limit The maximum number of resources returned in the response.
	Limit *Limit `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset The offset of the first resource returned in the response.
	Offset *Offset `form:"offset,omitempty" json:"offset,omitempty"`

	// Filter The query filter string.
	Filter *Filter `form:"filter,omitempty" json:"filter,omitempty"`

	// OrderBy The field path to order the response resources by.
	OrderBy *OrderBy `form:"orderBy,omitempty" json:"orderBy,omitempty"`

	// Total Return the total number of resources matching the query.
	Total *Total `form:"total,omitempty" json:"total,omitempty"`
}

// GetResourceRecordsParams defines parameters for GetResourceRecords.
type GetResourceRecordsParams struct {
	// Fields The subset of response resource field paths.
	Fields *Fields `form:"fields,omitempty" json:"fields,omitempty"`

	// Limit The maximum number of resources returned in the response.
	Limit *Limit `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset The offset of the first resource returned in the response.
	Offset *Offset `form:"offset,omitempty" json:"offset,omitempty"`

	// Filter The query filter string.
	Filter *Filter `form:"filter,omitempty" json:"filter,omitempty"`

	// OrderBy The field path to order the response resources by.
	OrderBy *OrderBy `form:"orderBy,omitempty" json:"orderBy,omitempty"`

	// Total Return the total number of resources matching the query.
	Total *Total `form:"total,omitempty" json:"total,omitempty"`
}

// GetSessionsParams defines parameters for GetSessions.
type GetSessionsParams struct {
	// Fields The subset of response resource field paths.
	Fields *Fields `form:"fields,omitempty" json:"fields,omitempty"`

	// Limit The maximum number of resources returned in the response.
	Limit *Limit `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset The offset of the first resource returned in the response.
	Offset *Offset `form:"offset,omitempty" json:"offset,omitempty"`

	// Filter The query filter string.
	Filter *Filter `form:"filter,omitempty" json:"filter,omitempty"`

	// OrderBy The field path to order the response resources by.
	OrderBy *OrderBy `form:"orderBy,omitempty" json:"orderBy,omitempty"`

	// Total Return the total number of resources matching the query.
	Total *Total `form:"total,omitempty" json:"total,omitempty"`
}

// GetZonesParams defines parameters for GetZones.
type GetZonesParams struct {
	// Fields The subset of response resource field paths.
	Fields *Fields `form:"fields,omitempty" json:"fields,omitempty"`

	// Limit The maximum number of resources returned in the response.
	Limit *Limit `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset The offset of the first resource returned in the response.
	Offset *Offset `form:"offset,omitempty" json:"offset,omitempty"`

	// Filter The query filter string.
	Filter *Filter `form:"filter,omitempty" json:"filter,omitempty"`

	// OrderBy The field path to order the response resources by.
	OrderBy *OrderBy `form:"orderBy,omitempty" json:"orderBy,omitempty"`

	// Total Return the total number of resources matching the query.
	Total *Total `form:"total,omitempty" json:"total,omitempty"`
}

// PostZoneDeploymentParams defines parameters for PostZoneDeployment.
type PostZoneDeploymentParams struct {
	// XBcnChangeControlComment The change control comment.
	XBcnChangeControlComment *XBcnChangeControlComment `json:"x-bcn-change-control-comment,omitempty"`

	// XBcnForceZoneRetransfer Indicates whether to force a re-transfer of DNS zone data to a secondary DNS server where the primary DNS role belongs to an individual primary DNS server or servers in a multi-primary server group.
	XBcnForceZoneRetransfer *bool `json:"x-bcn-force-zone-retransfer,omitempty"`
}

// PostZoneResourceRecordApplicationHalPlusJSONBody defines parameters for PostZoneResourceRecord.
type PostZoneResourceRecordApplicationHalPlusJSONBody struct {
	union json.RawMessage
}

// PostZoneResourceRecordJSONBody defines parameters for PostZoneResourceRecord.
type PostZoneResourceRecordJSONBody struct {
	union json.RawMessage
}

// PostZoneResourceRecordParams defines parameters for PostZoneResourceRecord.
type PostZoneResourceRecordParams struct {
	// XBcnChangeControlComment The change control comment.
	XBcnChangeControlComment *XBcnChangeControlComment `json:"x-bcn-change-control-comment,omitempty"`

	// XBcnAllowAddressOverlap Indicates whether IP address overlap detection will be overridden for auto-created networks.
	XBcnAllowAddressOverlap *bool `json:"x-bcn-allow-address-overlap,omitempty"`

	// XBcnAutoCreateNetwork Indicates whether a network will be automatically created if a network containing the IP address or addresses specified in the resource record does not already exist.
	XBcnAutoCreateNetwork *bool `json:"x-bcn-auto-create-network,omitempty"`

	// XBcnOverrideNamingPolicy Indicates whether to override the naming policy for the view or zone when creating the record.
	XBcnOverrideNamingPolicy *bool `json:"x-bcn-override-naming-policy,omitempty"`

	// XBcnSameAsZone Indicates whether the zone name will be used for the resource record name.
	XBcnSameAsZone *bool `json:"x-bcn-same-as-zone,omitempty"`
}

// GetZoneParams defines parameters for GetZone.
type GetZoneParams struct {
	// Fields The subset of response resource field paths.
	Fields *Fields `form:"fields,omitempty" json:"fields,omitempty"`
}

// PostZoneDeploymentApplicationHalPlusJSONRequestBody defines body for PostZoneDeployment for application/hal+json ContentType.
type PostZoneDeploymentApplicationHalPlusJSONRequestBody = QuickDeploymentPostRequestBody

// PostZoneDeploymentJSONRequestBody defines body for PostZoneDeployment for application/json ContentType.
type PostZoneDeploymentJSONRequestBody = QuickDeploymentPostRequestBody

// PostZoneResourceRecordApplicationHalPlusJSONRequestBody defines body for PostZoneResourceRecord for application/hal+json ContentType.
type PostZoneResourceRecordApplicationHalPlusJSONRequestBody PostZoneResourceRecordApplicationHalPlusJSONBody

// PostZoneResourceRecordJSONRequestBody defines body for PostZoneResourceRecord for application/json ContentType.
type PostZoneResourceRecordJSONRequestBody PostZoneResourceRecordJSONBody

// AsAddressDevice0 returns the union data inside the Address_Device as a AddressDevice0
func (t Address_Device) AsAddressDevice0() (AddressDevice0, error) {
	var body AddressDevice0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAddressDevice0 overwrites any union data inside the Address_Device as the provided AddressDevice0
func (t *Address_Device) FromAddressDevice0(v AddressDevice0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAddressDevice0 performs a merge with any union data inside the Address_Device, using the provided AddressDevice0
func (t *Address_Device) MergeAddressDevice0(v AddressDevice0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsAddressDevice1 returns the union data inside the Address_Device as a AddressDevice1
func (t Address_Device) AsAddressDevice1() (AddressDevice1, error) {
	var body AddressDevice1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAddressDevice1 overwrites any union data inside the Address_Device as the provided AddressDevice1
func (t *Address_Device) FromAddressDevice1(v AddressDevice1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAddressDevice1 performs a merge with any union data inside the Address_Device, using the provided AddressDevice1
func (t *Address_Device) MergeAddressDevice1(v AddressDevice1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t Address_Device) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *Address_Device) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsAddressMacAddress0 returns the union data inside the Address_MacAddress as a AddressMacAddress0
func (t Address_MacAddress) AsAddressMacAddress0() (AddressMacAddress0, error) {
	var body AddressMacAddress0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAddressMacAddress0 overwrites any union data inside the Address_MacAddress as the provided AddressMacAddress0
func (t *Address_MacAddress) FromAddressMacAddress0(v AddressMacAddress0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAddressMacAddress0 performs a merge with any union data inside the Address_MacAddress, using the provided AddressMacAddress0
func (t *Address_MacAddress) MergeAddressMacAddress0(v AddressMacAddress0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsAddressMacAddress1 returns the union data inside the Address_MacAddress as a AddressMacAddress1
func (t Address_MacAddress) AsAddressMacAddress1() (AddressMacAddress1, error) {
	var body AddressMacAddress1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAddressMacAddress1 overwrites any union data inside the Address_MacAddress as the provided AddressMacAddress1
func (t *Address_MacAddress) FromAddressMacAddress1(v AddressMacAddress1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAddressMacAddress1 performs a merge with any union data inside the Address_MacAddress, using the provided AddressMacAddress1
func (t *Address_MacAddress) MergeAddressMacAddress1(v AddressMacAddress1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t Address_MacAddress) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *Address_MacAddress) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsAliasRecordLinkedRecord0 returns the union data inside the AliasRecord_LinkedRecord as a AliasRecordLinkedRecord0
func (t AliasRecord_LinkedRecord) AsAliasRecordLinkedRecord0() (AliasRecordLinkedRecord0, error) {
	var body AliasRecordLinkedRecord0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAliasRecordLinkedRecord0 overwrites any union data inside the AliasRecord_LinkedRecord as the provided AliasRecordLinkedRecord0
func (t *AliasRecord_LinkedRecord) FromAliasRecordLinkedRecord0(v AliasRecordLinkedRecord0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAliasRecordLinkedRecord0 performs a merge with any union data inside the AliasRecord_LinkedRecord, using the provided AliasRecordLinkedRecord0
func (t *AliasRecord_LinkedRecord) MergeAliasRecordLinkedRecord0(v AliasRecordLinkedRecord0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsAliasRecordLinkedRecord1 returns the union data inside the AliasRecord_LinkedRecord as a AliasRecordLinkedRecord1
func (t AliasRecord_LinkedRecord) AsAliasRecordLinkedRecord1() (AliasRecordLinkedRecord1, error) {
	var body AliasRecordLinkedRecord1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAliasRecordLinkedRecord1 overwrites any union data inside the AliasRecord_LinkedRecord as the provided AliasRecordLinkedRecord1
func (t *AliasRecord_LinkedRecord) FromAliasRecordLinkedRecord1(v AliasRecordLinkedRecord1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAliasRecordLinkedRecord1 performs a merge with any union data inside the AliasRecord_LinkedRecord, using the provided AliasRecordLinkedRecord1
func (t *AliasRecord_LinkedRecord) MergeAliasRecordLinkedRecord1(v AliasRecordLinkedRecord1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t AliasRecord_LinkedRecord) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *AliasRecord_LinkedRecord) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsHTTPSRecordLinkedRecord0 returns the union data inside the HTTPSRecord_LinkedRecord as a HTTPSRecordLinkedRecord0
func (t HTTPSRecord_LinkedRecord) AsHTTPSRecordLinkedRecord0() (HTTPSRecordLinkedRecord0, error) {
	var body HTTPSRecordLinkedRecord0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromHTTPSRecordLinkedRecord0 overwrites any union data inside the HTTPSRecord_LinkedRecord as the provided HTTPSRecordLinkedRecord0
func (t *HTTPSRecord_LinkedRecord) FromHTTPSRecordLinkedRecord0(v HTTPSRecordLinkedRecord0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeHTTPSRecordLinkedRecord0 performs a merge with any union data inside the HTTPSRecord_LinkedRecord, using the provided HTTPSRecordLinkedRecord0
func (t *HTTPSRecord_LinkedRecord) MergeHTTPSRecordLinkedRecord0(v HTTPSRecordLinkedRecord0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsHTTPSRecordLinkedRecord1 returns the union data inside the HTTPSRecord_LinkedRecord as a HTTPSRecordLinkedRecord1
func (t HTTPSRecord_LinkedRecord) AsHTTPSRecordLinkedRecord1() (HTTPSRecordLinkedRecord1, error) {
	var body HTTPSRecordLinkedRecord1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromHTTPSRecordLinkedRecord1 overwrites any union data inside the HTTPSRecord_LinkedRecord as the provided HTTPSRecordLinkedRecord1
func (t *HTTPSRecord_LinkedRecord) FromHTTPSRecordLinkedRecord1(v HTTPSRecordLinkedRecord1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeHTTPSRecordLinkedRecord1 performs a merge with any union data inside the HTTPSRecord_LinkedRecord, using the provided HTTPSRecordLinkedRecord1
func (t *HTTPSRecord_LinkedRecord) MergeHTTPSRecordLinkedRecord1(v HTTPSRecordLinkedRecord1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t HTTPSRecord_LinkedRecord) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *HTTPSRecord_LinkedRecord) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsHostRecordDependentRecords0 returns the union data inside the HostRecord_DependentRecords_Item as a HostRecordDependentRecords0
func (t HostRecord_DependentRecords_Item) AsHostRecordDependentRecords0() (HostRecordDependentRecords0, error) {
	var body HostRecordDependentRecords0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromHostRecordDependentRecords0 overwrites any union data inside the HostRecord_DependentRecords_Item as the provided HostRecordDependentRecords0
func (t *HostRecord_DependentRecords_Item) FromHostRecordDependentRecords0(v HostRecordDependentRecords0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeHostRecordDependentRecords0 performs a merge with any union data inside the HostRecord_DependentRecords_Item, using the provided HostRecordDependentRecords0
func (t *HostRecord_DependentRecords_Item) MergeHostRecordDependentRecords0(v HostRecordDependentRecords0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsHostRecordDependentRecords1 returns the union data inside the HostRecord_DependentRecords_Item as a HostRecordDependentRecords1
func (t HostRecord_DependentRecords_Item) AsHostRecordDependentRecords1() (HostRecordDependentRecords1, error) {
	var body HostRecordDependentRecords1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromHostRecordDependentRecords1 overwrites any union data inside the HostRecord_DependentRecords_Item as the provided HostRecordDependentRecords1
func (t *HostRecord_DependentRecords_Item) FromHostRecordDependentRecords1(v HostRecordDependentRecords1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeHostRecordDependentRecords1 performs a merge with any union data inside the HostRecord_DependentRecords_Item, using the provided HostRecordDependentRecords1
func (t *HostRecord_DependentRecords_Item) MergeHostRecordDependentRecords1(v HostRecordDependentRecords1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t HostRecord_DependentRecords_Item) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *HostRecord_DependentRecords_Item) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsIPv4AddressDevice0 returns the union data inside the IPv4Address_Device as a IPv4AddressDevice0
func (t IPv4Address_Device) AsIPv4AddressDevice0() (IPv4AddressDevice0, error) {
	var body IPv4AddressDevice0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromIPv4AddressDevice0 overwrites any union data inside the IPv4Address_Device as the provided IPv4AddressDevice0
func (t *IPv4Address_Device) FromIPv4AddressDevice0(v IPv4AddressDevice0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeIPv4AddressDevice0 performs a merge with any union data inside the IPv4Address_Device, using the provided IPv4AddressDevice0
func (t *IPv4Address_Device) MergeIPv4AddressDevice0(v IPv4AddressDevice0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsIPv4AddressDevice1 returns the union data inside the IPv4Address_Device as a IPv4AddressDevice1
func (t IPv4Address_Device) AsIPv4AddressDevice1() (IPv4AddressDevice1, error) {
	var body IPv4AddressDevice1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromIPv4AddressDevice1 overwrites any union data inside the IPv4Address_Device as the provided IPv4AddressDevice1
func (t *IPv4Address_Device) FromIPv4AddressDevice1(v IPv4AddressDevice1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeIPv4AddressDevice1 performs a merge with any union data inside the IPv4Address_Device, using the provided IPv4AddressDevice1
func (t *IPv4Address_Device) MergeIPv4AddressDevice1(v IPv4AddressDevice1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t IPv4Address_Device) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *IPv4Address_Device) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsIPv4AddressMacAddress0 returns the union data inside the IPv4Address_MacAddress as a IPv4AddressMacAddress0
func (t IPv4Address_MacAddress) AsIPv4AddressMacAddress0() (IPv4AddressMacAddress0, error) {
	var body IPv4AddressMacAddress0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromIPv4AddressMacAddress0 overwrites any union data inside the IPv4Address_MacAddress as the provided IPv4AddressMacAddress0
func (t *IPv4Address_MacAddress) FromIPv4AddressMacAddress0(v IPv4AddressMacAddress0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeIPv4AddressMacAddress0 performs a merge with any union data inside the IPv4Address_MacAddress, using the provided IPv4AddressMacAddress0
func (t *IPv4Address_MacAddress) MergeIPv4AddressMacAddress0(v IPv4AddressMacAddress0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsIPv4AddressMacAddress1 returns the union data inside the IPv4Address_MacAddress as a IPv4AddressMacAddress1
func (t IPv4Address_MacAddress) AsIPv4AddressMacAddress1() (IPv4AddressMacAddress1, error) {
	var body IPv4AddressMacAddress1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromIPv4AddressMacAddress1 overwrites any union data inside the IPv4Address_MacAddress as the provided IPv4AddressMacAddress1
func (t *IPv4Address_MacAddress) FromIPv4AddressMacAddress1(v IPv4AddressMacAddress1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeIPv4AddressMacAddress1 performs a merge with any union data inside the IPv4Address_MacAddress, using the provided IPv4AddressMacAddress1
func (t *IPv4Address_MacAddress) MergeIPv4AddressMacAddress1(v IPv4AddressMacAddress1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t IPv4Address_MacAddress) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *IPv4Address_MacAddress) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsIPv6AddressDevice0 returns the union data inside the IPv6Address_Device as a IPv6AddressDevice0
func (t IPv6Address_Device) AsIPv6AddressDevice0() (IPv6AddressDevice0, error) {
	var body IPv6AddressDevice0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromIPv6AddressDevice0 overwrites any union data inside the IPv6Address_Device as the provided IPv6AddressDevice0
func (t *IPv6Address_Device) FromIPv6AddressDevice0(v IPv6AddressDevice0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeIPv6AddressDevice0 performs a merge with any union data inside the IPv6Address_Device, using the provided IPv6AddressDevice0
func (t *IPv6Address_Device) MergeIPv6AddressDevice0(v IPv6AddressDevice0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsIPv6AddressDevice1 returns the union data inside the IPv6Address_Device as a IPv6AddressDevice1
func (t IPv6Address_Device) AsIPv6AddressDevice1() (IPv6AddressDevice1, error) {
	var body IPv6AddressDevice1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromIPv6AddressDevice1 overwrites any union data inside the IPv6Address_Device as the provided IPv6AddressDevice1
func (t *IPv6Address_Device) FromIPv6AddressDevice1(v IPv6AddressDevice1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeIPv6AddressDevice1 performs a merge with any union data inside the IPv6Address_Device, using the provided IPv6AddressDevice1
func (t *IPv6Address_Device) MergeIPv6AddressDevice1(v IPv6AddressDevice1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t IPv6Address_Device) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *IPv6Address_Device) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsIPv6AddressMacAddress0 returns the union data inside the IPv6Address_MacAddress as a IPv6AddressMacAddress0
func (t IPv6Address_MacAddress) AsIPv6AddressMacAddress0() (IPv6AddressMacAddress0, error) {
	var body IPv6AddressMacAddress0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromIPv6AddressMacAddress0 overwrites any union data inside the IPv6Address_MacAddress as the provided IPv6AddressMacAddress0
func (t *IPv6Address_MacAddress) FromIPv6AddressMacAddress0(v IPv6AddressMacAddress0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeIPv6AddressMacAddress0 performs a merge with any union data inside the IPv6Address_MacAddress, using the provided IPv6AddressMacAddress0
func (t *IPv6Address_MacAddress) MergeIPv6AddressMacAddress0(v IPv6AddressMacAddress0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsIPv6AddressMacAddress1 returns the union data inside the IPv6Address_MacAddress as a IPv6AddressMacAddress1
func (t IPv6Address_MacAddress) AsIPv6AddressMacAddress1() (IPv6AddressMacAddress1, error) {
	var body IPv6AddressMacAddress1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromIPv6AddressMacAddress1 overwrites any union data inside the IPv6Address_MacAddress as the provided IPv6AddressMacAddress1
func (t *IPv6Address_MacAddress) FromIPv6AddressMacAddress1(v IPv6AddressMacAddress1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeIPv6AddressMacAddress1 performs a merge with any union data inside the IPv6Address_MacAddress, using the provided IPv6AddressMacAddress1
func (t *IPv6Address_MacAddress) MergeIPv6AddressMacAddress1(v IPv6AddressMacAddress1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t IPv6Address_MacAddress) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *IPv6Address_MacAddress) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsMXRecordLinkedRecord0 returns the union data inside the MXRecord_LinkedRecord as a MXRecordLinkedRecord0
func (t MXRecord_LinkedRecord) AsMXRecordLinkedRecord0() (MXRecordLinkedRecord0, error) {
	var body MXRecordLinkedRecord0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMXRecordLinkedRecord0 overwrites any union data inside the MXRecord_LinkedRecord as the provided MXRecordLinkedRecord0
func (t *MXRecord_LinkedRecord) FromMXRecordLinkedRecord0(v MXRecordLinkedRecord0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMXRecordLinkedRecord0 performs a merge with any union data inside the MXRecord_LinkedRecord, using the provided MXRecordLinkedRecord0
func (t *MXRecord_LinkedRecord) MergeMXRecordLinkedRecord0(v MXRecordLinkedRecord0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMXRecordLinkedRecord1 returns the union data inside the MXRecord_LinkedRecord as a MXRecordLinkedRecord1
func (t MXRecord_LinkedRecord) AsMXRecordLinkedRecord1() (MXRecordLinkedRecord1, error) {
	var body MXRecordLinkedRecord1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMXRecordLinkedRecord1 overwrites any union data inside the MXRecord_LinkedRecord as the provided MXRecordLinkedRecord1
func (t *MXRecord_LinkedRecord) FromMXRecordLinkedRecord1(v MXRecordLinkedRecord1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMXRecordLinkedRecord1 performs a merge with any union data inside the MXRecord_LinkedRecord, using the provided MXRecordLinkedRecord1
func (t *MXRecord_LinkedRecord) MergeMXRecordLinkedRecord1(v MXRecordLinkedRecord1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t MXRecord_LinkedRecord) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *MXRecord_LinkedRecord) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsSRVRecordLinkedRecord0 returns the union data inside the SRVRecord_LinkedRecord as a SRVRecordLinkedRecord0
func (t SRVRecord_LinkedRecord) AsSRVRecordLinkedRecord0() (SRVRecordLinkedRecord0, error) {
	var body SRVRecordLinkedRecord0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSRVRecordLinkedRecord0 overwrites any union data inside the SRVRecord_LinkedRecord as the provided SRVRecordLinkedRecord0
func (t *SRVRecord_LinkedRecord) FromSRVRecordLinkedRecord0(v SRVRecordLinkedRecord0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSRVRecordLinkedRecord0 performs a merge with any union data inside the SRVRecord_LinkedRecord, using the provided SRVRecordLinkedRecord0
func (t *SRVRecord_LinkedRecord) MergeSRVRecordLinkedRecord0(v SRVRecordLinkedRecord0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSRVRecordLinkedRecord1 returns the union data inside the SRVRecord_LinkedRecord as a SRVRecordLinkedRecord1
func (t SRVRecord_LinkedRecord) AsSRVRecordLinkedRecord1() (SRVRecordLinkedRecord1, error) {
	var body SRVRecordLinkedRecord1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSRVRecordLinkedRecord1 overwrites any union data inside the SRVRecord_LinkedRecord as the provided SRVRecordLinkedRecord1
func (t *SRVRecord_LinkedRecord) FromSRVRecordLinkedRecord1(v SRVRecordLinkedRecord1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSRVRecordLinkedRecord1 performs a merge with any union data inside the SRVRecord_LinkedRecord, using the provided SRVRecordLinkedRecord1
func (t *SRVRecord_LinkedRecord) MergeSRVRecordLinkedRecord1(v SRVRecordLinkedRecord1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t SRVRecord_LinkedRecord) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *SRVRecord_LinkedRecord) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsSVCBRecordLinkedRecord0 returns the union data inside the SVCBRecord_LinkedRecord as a SVCBRecordLinkedRecord0
func (t SVCBRecord_LinkedRecord) AsSVCBRecordLinkedRecord0() (SVCBRecordLinkedRecord0, error) {
	var body SVCBRecordLinkedRecord0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSVCBRecordLinkedRecord0 overwrites any union data inside the SVCBRecord_LinkedRecord as the provided SVCBRecordLinkedRecord0
func (t *SVCBRecord_LinkedRecord) FromSVCBRecordLinkedRecord0(v SVCBRecordLinkedRecord0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSVCBRecordLinkedRecord0 performs a merge with any union data inside the SVCBRecord_LinkedRecord, using the provided SVCBRecordLinkedRecord0
func (t *SVCBRecord_LinkedRecord) MergeSVCBRecordLinkedRecord0(v SVCBRecordLinkedRecord0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSVCBRecordLinkedRecord1 returns the union data inside the SVCBRecord_LinkedRecord as a SVCBRecordLinkedRecord1
func (t SVCBRecord_LinkedRecord) AsSVCBRecordLinkedRecord1() (SVCBRecordLinkedRecord1, error) {
	var body SVCBRecordLinkedRecord1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSVCBRecordLinkedRecord1 overwrites any union data inside the SVCBRecord_LinkedRecord as the provided SVCBRecordLinkedRecord1
func (t *SVCBRecord_LinkedRecord) FromSVCBRecordLinkedRecord1(v SVCBRecordLinkedRecord1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSVCBRecordLinkedRecord1 performs a merge with any union data inside the SVCBRecord_LinkedRecord, using the provided SVCBRecordLinkedRecord1
func (t *SVCBRecord_LinkedRecord) MergeSVCBRecordLinkedRecord1(v SVCBRecordLinkedRecord1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t SVCBRecord_LinkedRecord) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *SVCBRecord_LinkedRecord) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}
