openapi: 3.0.1
info:
  title: BlueCat Address Manager RESTful v2 API
  description: |-
    The **BlueCat Address Manager RESTful v2 API** is a new RESTful API for Address Manager that presents Address Manager objects as resources. Each resource has a unique endpoint, and related resources are grouped in collections. To fetch an individual resource, a `GET` request is sent to the resource's endpoint. To fetch all resources in a collection, a `GET` request is sent to the collection's endpoint.

    The RESTful v2 API is [hypermedia driven](https://en.wikipedia.org/wiki/HATEOAS) and uses the [HAL](https://en.wikipedia.org/wiki/Hypertext_Application_Language) format for representing links. When navigating through the API, you can use those links to navigate to related resources or child resources of the requested endpoint. The API supports the following media types for most endpoints:  `application/hal+json`, `application/json`, and `text/csv`.  For authentication, the API supports both `Basic` and `Bearer` HTTP authentication schemes.

    To get started, create a session and receive credentials for `Basic` authentication by sending a `POST` request to the [/sessions](#/User%20and%20Group%20Resources/postSession) endpoint, with a message body containing the user's credentials:

    ```{"username":"apiuser", "password":"apipass"}```

    The response will contain an `apiToken` field that can be entered with the username in the Swagger UI **Authorize** dialog. The response will also contain a `basicAuthenticationCredentials` field containing a base64 encoding of the requester's username and API token delimited by a colon. This string can be injected directly into request `Authorization` headers in the following format:

    ```Authorization: Basic YXBpOlQ0OExOT3VIRGhDcnVBNEo1bGFES3JuS3hTZC9QK3pjczZXTzBJMDY=```

    For full details on API format and authentication methods, refer to the Address Manager RESTful v2 API Guide on the BlueCat Documentation Portal.
  termsOfService: https://docs.bluecatnetworks.com/r/Terms-and-Conditions/Terms-and-Conditions
  contact:
    name: BlueCat Customer Care
    url: https://care.bluecatnetworks.com/
  license:
    name: BlueCat License Agreements
    url: https://bluecatnetworks.com/license-agreements/
  version: 9.6.0
security:
  - basicAuthentication: []
  - bearerToken: []
tags:
  - name: Administrator Resources
    description: Operations for access rights, configurations, imports, password policies, server patches, services, settings,  user-defined field definitions, user-defined link definitions and workflow requests.
  - name: Authenticator Resources
    description: Operations for authenticators, Kerberos realms, service principals and key distribution centers.
  - name: Database Management and Replication Resources
    description: Operations for database replication, database backups and trust relationships.
  - name: Deployment Option Resources
    description: Operations for deployment options, deployment option definitions, access control lists and match elements.
  - name: Deployment Role Resources
    description: Operations for deployment roles.
  - name: Device Resources
    description: Operations for devices, device types and subtypes.
  - name: DHCP Resources
    description: Operations for DHCP client classes and subclasses, DHCP zone groups and zone declarations, DHCP deployment option definitions and  DHCP vendor profiles.
  - name: DNSSEC Resources
    description: Operations for DNSSEC signing policies and key management, and TSIG zone signing keys.
  - name: IPv4 and IPv6 Resources
    description: Operations for addresses, blocks, IP groups, leases, networks, DHCP ranges, IP reconciliation policies and discovered devices, and IP templates.
  - name: Location Resources
    description: Operations for locations and annotated resources
  - name: MAC Address and Client Identifier Resources
    description: Operations for DHCP client identifiers, DHCP unique identifiers, MAC addresses and MAC address pools.
  - name: Monitoring Resources
    description: Operations for events, logs, notification groups, reports and report schedules, transactions, and user sessions.
  - name: Resource Record Resources
    description: Operations for resource records.
  - name: Server Resources
    description: Operations for deployments and deployment schedules, interfaces, servers, server groups, server services.
  - name: Tag Resources
    description: Operations for tags, tag groups, and tagged resources.
  - name: TFTP Resources
    description: Operations for TFTP groups and files.
  - name: User and Group Resources
    description: Operations for users and groups, favorites and tasks.
  - name: View and Zone Resources
    description: Operations for resource record naming policies, DNS response policies, zones and zone templates, and views.
paths:
  /api/v2/accessControlLists:
    get:
      tags:
        - Deployment Option Resources
      summary: Retrieve a collection of access control lists
      description: Retrieve a collection of all DNS access control lists.
      operationId: getAccessControlLists
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of access control lists
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ACLCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ACL'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ACLResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/ACL'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/accessControlLists/{id}:
    get:
      tags:
        - Deployment Option Resources
      summary: Retrieve a single access control list
      description: Retrieve information about a DNS access control list.
      operationId: getAccessControlList
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: An access control list
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ACL'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ACLResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ACL'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Deployment Option Resources
      summary: Update an access control list
      description: Update an existing DNS access control list.
      operationId: putAccessControlList
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ACLPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ACLPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated access control list
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ACL'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ACLResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ACL'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - Deployment Option Resources
      summary: Delete an access control list
      description: Delete an existing DNS access control list.
      operationId: deleteAccessControlList
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/configurations/{collectionId}/accessControlLists:
    get:
      tags:
        - Deployment Option Resources
      summary: Retrieve a collection of access control lists
      description: Retrieve a collection of all DNS access control lists within a configuration.
      operationId: getConfigurationAccessControlLists
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of access control lists
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ACLCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ACL'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ACLResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/ACL'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Deployment Option Resources
      summary: Create a new access control list
      description: Create a new DNS access control list. Access control lists (ACLs) provide granular control over which hosts may perform certain operations on the name server. In particular, they're used for restricting zone transfers, notifications, and DDNS updates. Address Manager provides DNS ACL support by allowing you to create and manage ACLs in Address Manager. You can repurpose ACLs across multiple DNS Views.
      operationId: postConfigurationAccessControlList
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ACLPostRequestBody'
            examples:
              accessControlListExampleAllMatchElements:
                $ref: '#/components/examples/accessControlListExampleAllMatchElements'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ACLPostRequestBody'
            examples:
              accessControlListExampleAllMatchElements:
                $ref: '#/components/examples/accessControlListExampleAllMatchElements'
            encoding: {}
      responses:
        "201":
          description: The newly created access control list
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ACL'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ACLResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ACL'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/accessRights:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve a collection of access rights
      description: Retrieve the access rights of objects that are part of a collection.
      operationId: getAccessRights
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of access rights
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/AccessRightCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/AccessRight'
                            - $ref: '#/components/schemas/AdministrativeAccessRight'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/AccessRightResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/AccessRight'
                        - $ref: '#/components/schemas/AdministrativeAccessRight'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Administrator Resources
      summary: Create a new access right
      description: Add an access rights to a specific object.
      operationId: postAccessRight
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  AccessRight: '#/components/schemas/AccessRightPostRequestBody'
                  AdministrativeAccessRight: '#/components/schemas/AdministrativeAccessRightPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/AccessRightPostRequestBody'
                - $ref: '#/components/schemas/AdministrativeAccessRightPostRequestBody'
            examples:
              accessRightExampleDefault:
                $ref: '#/components/examples/accessRightExampleDefault'
              accessRightExampleWithOwner:
                $ref: '#/components/examples/accessRightExampleWithOwner'
              accessRightExampleAdministrativeAccessRight:
                $ref: '#/components/examples/accessRightExampleAdministrativeAccessRight'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  AccessRight: '#/components/schemas/AccessRightPostRequestBody'
                  AdministrativeAccessRight: '#/components/schemas/AdministrativeAccessRightPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/AccessRightPostRequestBody'
                - $ref: '#/components/schemas/AdministrativeAccessRightPostRequestBody'
            examples:
              accessRightExampleDefault:
                $ref: '#/components/examples/accessRightExampleDefault'
              accessRightExampleWithOwner:
                $ref: '#/components/examples/accessRightExampleWithOwner'
              accessRightExampleAdministrativeAccessRight:
                $ref: '#/components/examples/accessRightExampleAdministrativeAccessRight'
            encoding: {}
      responses:
        "201":
          description: The newly created access right.
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/AccessRight'
                      - $ref: '#/components/schemas/AdministrativeAccessRight'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/AccessRightResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AccessRight'
                  - $ref: '#/components/schemas/AdministrativeAccessRight'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/accessRights/{id}:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve a single access right
      description: Retrieve an access right for a specific object.
      operationId: getAccessRight
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: An access right
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/AccessRight'
                      - $ref: '#/components/schemas/AdministrativeAccessRight'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/AccessRightResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AccessRight'
                  - $ref: '#/components/schemas/AdministrativeAccessRight'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Administrator Resources
      summary: Update an access right
      description: Update access rights for a specified object.
      operationId: putAccessRight
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  AccessRight: '#/components/schemas/AccessRightPutRequestBody'
                  AdministrativeAccessRight: '#/components/schemas/AdministrativeAccessRightPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/AccessRightPutRequestBody'
                - $ref: '#/components/schemas/AdministrativeAccessRightPutRequestBody'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  AccessRight: '#/components/schemas/AccessRightPutRequestBody'
                  AdministrativeAccessRight: '#/components/schemas/AdministrativeAccessRightPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/AccessRightPutRequestBody'
                - $ref: '#/components/schemas/AdministrativeAccessRightPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated access right
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/AccessRight'
                      - $ref: '#/components/schemas/AdministrativeAccessRight'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/AccessRightResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AccessRight'
                  - $ref: '#/components/schemas/AdministrativeAccessRight'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - Administrator Resources
      summary: Delete an access right
      description: Delete access rights for a specified object.
      operationId: deleteAccessRight
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/{collection}/{collectionId}/accessRights:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve a collection of access rights
      description: Retrieve access rights applied to a resource.
      operationId: getCollectionAccessRights
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - name: collection
          in: path
          description: The name of the collection.
          required: true
          schema:
            type: string
            enum:
              - accessControlLists
              - addresses
              - blocks
              - configurations
              - deviceSubtypes
              - deviceTypes
              - devices
              - files
              - interfaces
              - ipGroups
              - keyDistributionCenters
              - macAddresses
              - macPools
              - networks
              - ranges
              - realms
              - resourceRecords
              - responsePolicies
              - schedules
              - serverGroups
              - servers
              - servicePrincipals
              - signingKeys
              - tagGroups
              - tags
              - templates
              - tftpGroups
              - views
              - zoneDeclarations
              - zoneGroups
              - zones
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of access rights
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/AccessRightCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/AccessRight'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/AccessRightResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/AccessRight'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/deployments/{collectionId}/addedResources:
    get:
      tags:
        - Resource Record Resources
      summary: Retrieve a collection of resources
      description: Retrieve a list of all resources added by a specified selective deployment.
      operationId: getDeploymentAddedResources
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/GenericRecordCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/GenericRecord'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/GenericRecordResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/GenericRecord'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/deployments/{collectionId}/addedResources/{id}:
    get:
      tags:
        - Resource Record Resources
      summary: Retrieve a single resource
      description: Retrieve a specific resource added by a deployment.
      operationId: getDeploymentAddedResource
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A resource
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/GenericRecord'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/GenericRecordResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericRecord'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/addresses:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of addresses
      description: Retrieve a collection of all assigned IPv4/IPv6 addresses for all networks and configurations.
      operationId: getAddresses
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of addresses
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4AddressCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4Address'
                            - $ref: '#/components/schemas/IPv6Address'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4AddressResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4Address'
                        - $ref: '#/components/schemas/IPv6Address'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/addresses/{id}:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a single address
      description: Retrieve a single IPv4/IPv6 address.
      operationId: getAddress
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: An address
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Address'
                      - $ref: '#/components/schemas/IPv6Address'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4AddressResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Address'
                  - $ref: '#/components/schemas/IPv6Address'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - IPv4 and IPv6 Resources
      summary: Update an address
      description: Update an IPv4/IPv6 address.
      operationId: putAddress
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Address: '#/components/schemas/IPv4AddressPutRequestBody'
                  IPv6Address: '#/components/schemas/IPv6AddressPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4AddressPutRequestBody'
                - $ref: '#/components/schemas/IPv6AddressPutRequestBody'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Address: '#/components/schemas/IPv4AddressPutRequestBody'
                  IPv6Address: '#/components/schemas/IPv6AddressPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4AddressPutRequestBody'
                - $ref: '#/components/schemas/IPv6AddressPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated address
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Address'
                      - $ref: '#/components/schemas/IPv6Address'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4AddressResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Address'
                  - $ref: '#/components/schemas/IPv6Address'
        "202":
          description: The workflow request for the address update
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Address'
                      - $ref: '#/components/schemas/IPv6Address'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4AddressResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Address'
                  - $ref: '#/components/schemas/IPv6Address'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - IPv4 and IPv6 Resources
      summary: Delete an address
      description: Delete an IPv4/IPv6 address.
      operationId: deleteAddress
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-delete-mac-address-from-pool
          in: header
          description: Indicates whether Address Manager automatically deletes any MAC address assigned to the IP address from its MAC pool.
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/id'
      responses:
        "202":
          description: The workflow request for the address deletion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowRequest'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WorkflowRequest'
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/clientIdentifiers/{collectionId}/addresses:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of linked addresses
      description: Retrieve a collection of all IPv4 and/or IPv6 addresses linked to a DHCP client identifier or DHCP unique identifier.
      operationId: getClientIdentifierAddresses
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of linked addresses
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4AddressCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4Address'
                            - $ref: '#/components/schemas/IPv6Address'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4AddressResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4Address'
                        - $ref: '#/components/schemas/IPv6Address'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/devices/{collectionId}/addresses:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of linked addresses
      description: Retrieve a collection of all IPv4 and/or IPv6 addresses linked to a device.
      operationId: getDeviceAddresses
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of linked addresses
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4AddressCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4Address'
                            - $ref: '#/components/schemas/IPv6Address'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4AddressResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4Address'
                        - $ref: '#/components/schemas/IPv6Address'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Link an address to a resource
      description: Link an IPv4/IPv6 address to a device.
      operationId: postDeviceAddress
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Address: '#/components/schemas/IPv4AddressPostRequestBody'
                  IPv6Address: '#/components/schemas/IPv6AddressPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4AddressPostRequestBody'
                - $ref: '#/components/schemas/IPv6AddressPostRequestBody'
            examples:
              addressExampleLinkDeviceAddress:
                $ref: '#/components/examples/addressExampleLinkDeviceAddress'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Address: '#/components/schemas/IPv4AddressPostRequestBody'
                  IPv6Address: '#/components/schemas/IPv6AddressPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4AddressPostRequestBody'
                - $ref: '#/components/schemas/IPv6AddressPostRequestBody'
            examples:
              addressExampleLinkDeviceAddress:
                $ref: '#/components/examples/addressExampleLinkDeviceAddress'
            encoding: {}
      responses:
        "201":
          description: The linked address
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Address'
                      - $ref: '#/components/schemas/IPv6Address'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4AddressResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Address'
                  - $ref: '#/components/schemas/IPv6Address'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/macAddresses/{collectionId}/addresses:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of linked addresses
      description: Retrieve a collection of all IPv4 and/or IPv6 addresses linked to a MAC address.
      operationId: getMacAddressAddresses
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of linked addresses
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4AddressCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4Address'
                            - $ref: '#/components/schemas/IPv6Address'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4AddressResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4Address'
                        - $ref: '#/components/schemas/IPv6Address'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Link an address to a resource
      description: Link an IPv4/IPv6 address to a MAC address.
      operationId: postMacAddressAddress
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Address: '#/components/schemas/IPv4AddressPostRequestBody'
                  IPv6Address: '#/components/schemas/IPv6AddressPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4AddressPostRequestBody'
                - $ref: '#/components/schemas/IPv6AddressPostRequestBody'
            examples:
              addressExampleLinkMacAddressAddress:
                $ref: '#/components/examples/addressExampleLinkMacAddressAddress'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Address: '#/components/schemas/IPv4AddressPostRequestBody'
                  IPv6Address: '#/components/schemas/IPv6AddressPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4AddressPostRequestBody'
                - $ref: '#/components/schemas/IPv6AddressPostRequestBody'
            examples:
              addressExampleLinkMacAddressAddress:
                $ref: '#/components/examples/addressExampleLinkMacAddressAddress'
            encoding: {}
      responses:
        "201":
          description: The linked address
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Address'
                      - $ref: '#/components/schemas/IPv6Address'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4AddressResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Address'
                  - $ref: '#/components/schemas/IPv6Address'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/networks/{collectionId}/addresses:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of addresses
      description: Retrieve a collection of all addresses (assigned and unassigned) for a network.
      operationId: getNetworkAddresses
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of addresses
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4AddressCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4Address'
                            - $ref: '#/components/schemas/IPv6Address'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4AddressResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4Address'
                        - $ref: '#/components/schemas/IPv6Address'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new address
      description: Assign an IPv4/IPv6 address in a network.
      operationId: postNetworkAddress
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-create-reverse-record
          in: header
          description: Indicates whether a reverse record should be created for the host.
          schema:
            type: boolean
            default: true
        - name: x-bcn-excluded-addresses
          in: header
          description: A comma-separated list of IPv4 addresses and/or IPv4 address ranges to skip when searching for the next available address.
          schema:
            type: string
            default: ""
        - name: x-bcn-override-naming-policy
          in: header
          description: Indicates whether to override the naming policy for the view or zone when creating the host record.
          schema:
            type: boolean
            default: false
        - name: x-bcn-allow-duplicate-hostnames
          in: header
          description: Indicates whether duplicate hostnames are allowed.This value overrides the value configured for network.
          schema:
            type: boolean
        - name: x-bcn-ping-before-assignment
          in: header
          description: If set to true, Address Manager will ping IP addresses before assigning them. If set to false, Address Manager will assign addresses without checking their availability.This value overrides the value configured for network.
          schema:
            type: boolean
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Address: '#/components/schemas/IPv4AddressPostRequestBody'
                  IPv6Address: '#/components/schemas/IPv6AddressPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4AddressPostRequestBody'
                - $ref: '#/components/schemas/IPv6AddressPostRequestBody'
            examples:
              addressExampleStaticIpv4:
                $ref: '#/components/examples/addressExampleStaticIpv4'
              addressExampleNextStaticIpv4:
                $ref: '#/components/examples/addressExampleNextStaticIpv4'
              addressExampleDhcpReservedIpv4:
                $ref: '#/components/examples/addressExampleDhcpReservedIpv4'
              addressExampleDhcpReservedIpv4WithMacPool:
                $ref: '#/components/examples/addressExampleDhcpReservedIpv4WithMacPool'
              addressExampleStaticIpv6:
                $ref: '#/components/examples/addressExampleStaticIpv6'
              addressExampleStaticIpv6FromMac:
                $ref: '#/components/examples/addressExampleStaticIpv6FromMac'
              addressExampleMacDhcpReservedIpv6:
                $ref: '#/components/examples/addressExampleMacDhcpReservedIpv6'
              addressExampleDuidDhcpReservedIpv6:
                $ref: '#/components/examples/addressExampleDuidDhcpReservedIpv6'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Address: '#/components/schemas/IPv4AddressPostRequestBody'
                  IPv6Address: '#/components/schemas/IPv6AddressPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4AddressPostRequestBody'
                - $ref: '#/components/schemas/IPv6AddressPostRequestBody'
            examples:
              addressExampleStaticIpv4:
                $ref: '#/components/examples/addressExampleStaticIpv4'
              addressExampleNextStaticIpv4:
                $ref: '#/components/examples/addressExampleNextStaticIpv4'
              addressExampleDhcpReservedIpv4:
                $ref: '#/components/examples/addressExampleDhcpReservedIpv4'
              addressExampleDhcpReservedIpv4WithMacPool:
                $ref: '#/components/examples/addressExampleDhcpReservedIpv4WithMacPool'
              addressExampleStaticIpv6:
                $ref: '#/components/examples/addressExampleStaticIpv6'
              addressExampleStaticIpv6FromMac:
                $ref: '#/components/examples/addressExampleStaticIpv6FromMac'
              addressExampleMacDhcpReservedIpv6:
                $ref: '#/components/examples/addressExampleMacDhcpReservedIpv6'
              addressExampleDuidDhcpReservedIpv6:
                $ref: '#/components/examples/addressExampleDuidDhcpReservedIpv6'
            encoding: {}
      responses:
        "201":
          description: The newly created address
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Address'
                      - $ref: '#/components/schemas/IPv6Address'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4AddressResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Address'
                  - $ref: '#/components/schemas/IPv6Address'
        "202":
          description: The workflow request for the address creation
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Address'
                      - $ref: '#/components/schemas/IPv6Address'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4AddressResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Address'
                  - $ref: '#/components/schemas/IPv6Address'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/resourceRecords/{collectionId}/addresses:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of linked addresses
      description: Retrieve a collection of all IPv4 and/or IPv6 addresses linked to a resource record.
      operationId: getResourceRecordAddresses
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of linked addresses
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4AddressCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4Address'
                            - $ref: '#/components/schemas/IPv6Address'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4AddressResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4Address'
                        - $ref: '#/components/schemas/IPv6Address'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Link an address to a resource
      description: Link an IPv4/IPv6 address to a resource record.
      operationId: postResourceRecordAddress
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Address: '#/components/schemas/IPv4AddressPostRequestBody'
                  IPv6Address: '#/components/schemas/IPv6AddressPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4AddressPostRequestBody'
                - $ref: '#/components/schemas/IPv6AddressPostRequestBody'
            examples:
              addressExampleLinkResourceRecordAssignedAddress:
                $ref: '#/components/examples/addressExampleLinkResourceRecordAssignedAddress'
              addressExampleLinkResourceRecordUnassignedAddress:
                $ref: '#/components/examples/addressExampleLinkResourceRecordUnassignedAddress'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Address: '#/components/schemas/IPv4AddressPostRequestBody'
                  IPv6Address: '#/components/schemas/IPv6AddressPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4AddressPostRequestBody'
                - $ref: '#/components/schemas/IPv6AddressPostRequestBody'
            examples:
              addressExampleLinkResourceRecordAssignedAddress:
                $ref: '#/components/examples/addressExampleLinkResourceRecordAssignedAddress'
              addressExampleLinkResourceRecordUnassignedAddress:
                $ref: '#/components/examples/addressExampleLinkResourceRecordUnassignedAddress'
            encoding: {}
      responses:
        "201":
          description: The linked address
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Address'
                      - $ref: '#/components/schemas/IPv6Address'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4AddressResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Address'
                  - $ref: '#/components/schemas/IPv6Address'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/clientIdentifiers/{collectionId}/addresses/{id}:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a single linked address
      description: Retrieve a single IPv4/IPv6 address linked to a DHCP client identifier or a DHCP unique identifier.
      operationId: getClientIdentifierAddress
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A linked address
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Address'
                      - $ref: '#/components/schemas/IPv6Address'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4AddressResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Address'
                  - $ref: '#/components/schemas/IPv6Address'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - IPv4 and IPv6 Resources
      summary: Unlink an address
      description: Unlink an IPv4/IPv6 address from a DHCP client identifier or DHCP unique identifier.
      operationId: deleteClientIdentifierAddress
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/devices/{collectionId}/addresses/{id}:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a single linked address
      description: Retrieve a single IPv4/IPv6 address linked to a device.
      operationId: getDeviceAddress
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A linked address
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Address'
                      - $ref: '#/components/schemas/IPv6Address'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4AddressResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Address'
                  - $ref: '#/components/schemas/IPv6Address'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - IPv4 and IPv6 Resources
      summary: Unlink an address
      description: Unlink an IPv4/IPv6 address from a device.
      operationId: deleteDeviceAddress
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/macAddresses/{collectionId}/addresses/{id}:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a single linked address
      description: Retrieve a single IPv4/IPv6 address linked to a MAC address.
      operationId: getMacAddressAddress
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A linked address
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Address'
                      - $ref: '#/components/schemas/IPv6Address'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4AddressResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Address'
                  - $ref: '#/components/schemas/IPv6Address'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - IPv4 and IPv6 Resources
      summary: Unlink an address
      description: Unlink an IPv4/IPv6 address from a MAC address.
      operationId: deleteMacAddressAddress
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/resourceRecords/{collectionId}/addresses/{id}:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a single linked address
      description: Retrieve a single IPv4/IPv6 address linked to a resource record.
      operationId: getResourceRecordAddress
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A linked address
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Address'
                      - $ref: '#/components/schemas/IPv6Address'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4AddressResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Address'
                  - $ref: '#/components/schemas/IPv6Address'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - IPv4 and IPv6 Resources
      summary: Unlink an address
      description: Unlink an IPv4/IPv6 address from a resource record.
      operationId: deleteResourceRecordAddress
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/locations/{collectionId}/annotatedResources:
    get:
      tags:
        - Location Resources
      summary: Retrieve a collection of location annotated resources
      description: Retrieve a collection of all resources that have been annotated with a location.
      operationId: getLocationAnnotatedResources
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of location annotated resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ResourceCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Resource'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ResourceResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Resource'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Location Resources
      summary: Annotate a resource with a location
      description: 'Annotate a resource with a location. IP blocks, networks, addresses, and server resources can be annotated with locations. You can annotate multiple objects with the same location. '
      operationId: postLocationAnnotatedResource
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ResourcePostRequestBody'
            examples:
              annotatedResourceExampleSetServerLocation:
                $ref: '#/components/examples/annotatedResourceExampleSetServerLocation'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePostRequestBody'
            examples:
              annotatedResourceExampleSetServerLocation:
                $ref: '#/components/examples/annotatedResourceExampleSetServerLocation'
            encoding: {}
      responses:
        "201":
          description: The newly annotated resources
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Resource'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ResourceResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/locations/{collectionId}/annotatedResources/{id}:
    get:
      tags:
        - Location Resources
      summary: Retrieve a location annotated resource
      description: Retrieve information about a resource that has been annotated with a location.
      operationId: getLocationAnnotatedResource
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: An annotated resource
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Resource'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ResourceResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - Location Resources
      summary: Remove a location annotation from a resource
      description: Remove a location annotation from a resource.
      operationId: deleteLocationAnnotatedResource
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/namingPolicies/{collectionId}/appliedResources:
    get:
      tags:
        - DNSSEC Resources
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Retrieve a collection of applied resources
      description: Retrieve a list of all resources that have a DNSSEC signing policy or DNS zone template applied.
      operationId: getNamingPolicyAppliedResources
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of applied resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ViewCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/View'
                            - $ref: '#/components/schemas/Zone'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ViewResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/View'
                        - $ref: '#/components/schemas/Zone'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/signingPolicies/{collectionId}/appliedResources:
    get:
      tags:
        - DNSSEC Resources
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Retrieve a collection of applied resources
      description: Retrieve a list of all resources that have a DNSSEC signing policy or DNS zone template applied.
      operationId: getSigningPolicyAppliedResources
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of applied resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4BlockCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4Block'
                            - $ref: '#/components/schemas/IPv4Network'
                            - $ref: '#/components/schemas/Zone'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4BlockResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4Block'
                        - $ref: '#/components/schemas/IPv4Network'
                        - $ref: '#/components/schemas/Zone'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - DNSSEC Resources
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Apply a template or policy to a resource
      description: Apply a specific DNSSEC signing policy to a resource.
      operationId: postSigningPolicyAppliedResource
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Block: '#/components/schemas/IPv4BlockPostRequestBody'
                  IPv4Network: '#/components/schemas/IPv4NetworkPostRequestBody'
                  Zone: '#/components/schemas/ZonePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4BlockPostRequestBody'
                - $ref: '#/components/schemas/IPv4NetworkPostRequestBody'
                - $ref: '#/components/schemas/ZonePostRequestBody'
            examples:
              appliedResourceExampleApplyPolicyToZone:
                $ref: '#/components/examples/appliedResourceExampleApplyPolicyToZone'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Block: '#/components/schemas/IPv4BlockPostRequestBody'
                  IPv4Network: '#/components/schemas/IPv4NetworkPostRequestBody'
                  Zone: '#/components/schemas/ZonePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4BlockPostRequestBody'
                - $ref: '#/components/schemas/IPv4NetworkPostRequestBody'
                - $ref: '#/components/schemas/ZonePostRequestBody'
            examples:
              appliedResourceExampleApplyPolicyToZone:
                $ref: '#/components/examples/appliedResourceExampleApplyPolicyToZone'
            encoding: {}
      responses:
        "201":
          description: The newly applied resource
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Block'
                      - $ref: '#/components/schemas/IPv4Network'
                      - $ref: '#/components/schemas/Zone'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4BlockResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Block'
                  - $ref: '#/components/schemas/IPv4Network'
                  - $ref: '#/components/schemas/Zone'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/templates/{collectionId}/appliedResources:
    get:
      tags:
        - DNSSEC Resources
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Retrieve a collection of applied resources
      description: Retrieve a list of all resources that have a DNSSEC signing policy or DNS zone template applied.
      operationId: getTemplateAppliedResources
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of applied resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4AddressCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4Address'
                            - $ref: '#/components/schemas/IPv4Block'
                            - $ref: '#/components/schemas/IPv4DHCPRange'
                            - $ref: '#/components/schemas/IPv4Network'
                            - $ref: '#/components/schemas/Zone'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4AddressResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4Address'
                        - $ref: '#/components/schemas/IPv4Block'
                        - $ref: '#/components/schemas/IPv4DHCPRange'
                        - $ref: '#/components/schemas/IPv4Network'
                        - $ref: '#/components/schemas/Zone'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/namingPolicies/{collectionId}/appliedResources/{id}:
    get:
      tags:
        - DNSSEC Resources
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Retrieve an applied resource
      description: Retrieve information about a resource that has a specific DNSSEC signing policy or DNS zone template applied.
      operationId: getNamingPolicyAppliedResource
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: An applied resource
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/View'
                      - $ref: '#/components/schemas/Zone'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ViewResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/View'
                  - $ref: '#/components/schemas/Zone'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/signingPolicies/{collectionId}/appliedResources/{id}:
    get:
      tags:
        - DNSSEC Resources
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Retrieve an applied resource
      description: Retrieve information about a resource that has a specific DNSSEC signing policy or DNS zone template applied.
      operationId: getSigningPolicyAppliedResource
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: An applied resource
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Block'
                      - $ref: '#/components/schemas/IPv4Network'
                      - $ref: '#/components/schemas/Zone'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4BlockResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Block'
                  - $ref: '#/components/schemas/IPv4Network'
                  - $ref: '#/components/schemas/Zone'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - DNSSEC Resources
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Remove a template or policy application from a resource
      description: Remove a specific DNSSEC signing policy or DNS zone template from a resource.
      operationId: deleteSigningPolicyAppliedResource
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/templates/{collectionId}/appliedResources/{id}:
    get:
      tags:
        - DNSSEC Resources
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Retrieve an applied resource
      description: Retrieve information about a resource that has a specific DNSSEC signing policy or DNS zone template applied.
      operationId: getTemplateAppliedResource
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: An applied resource
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Address'
                      - $ref: '#/components/schemas/IPv4Block'
                      - $ref: '#/components/schemas/IPv4DHCPRange'
                      - $ref: '#/components/schemas/IPv4Network'
                      - $ref: '#/components/schemas/Zone'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4AddressResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Address'
                  - $ref: '#/components/schemas/IPv4Block'
                  - $ref: '#/components/schemas/IPv4DHCPRange'
                  - $ref: '#/components/schemas/IPv4Network'
                  - $ref: '#/components/schemas/Zone'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/authenticators:
    get:
      tags:
        - Authenticator Resources
      summary: Retrieve a collection of authenticators
      description: Retrieve a list of authenticators configured with Address Manager.
      operationId: getAuthenticators
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of authenticators
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/AddressManagerAuthenticatorCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/AddressManagerAuthenticator'
                            - $ref: '#/components/schemas/KerberosAuthenticator'
                            - $ref: '#/components/schemas/LDAPAuthenticator'
                            - $ref: '#/components/schemas/OAuthAuthorizationServer'
                            - $ref: '#/components/schemas/RADIUSAuthenticator'
                            - $ref: '#/components/schemas/SAMLIdentityProvider'
                            - $ref: '#/components/schemas/TACACSPlusAuthenticator'
                            - $ref: '#/components/schemas/X509Authenticator'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/AddressManagerAuthenticatorResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/AddressManagerAuthenticator'
                        - $ref: '#/components/schemas/KerberosAuthenticator'
                        - $ref: '#/components/schemas/LDAPAuthenticator'
                        - $ref: '#/components/schemas/OAuthAuthorizationServer'
                        - $ref: '#/components/schemas/RADIUSAuthenticator'
                        - $ref: '#/components/schemas/SAMLIdentityProvider'
                        - $ref: '#/components/schemas/TACACSPlusAuthenticator'
                        - $ref: '#/components/schemas/X509Authenticator'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Authenticator Resources
      summary: Configure a new authenticator
      description: Configure an authenticator to authenticate sessions with Address Manager. Address Manager supports authentication through RADIUS, TACACS+, LDAP, Microsoft Active Directory, and Kerberos.
      operationId: postAuthenticator
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  KerberosAuthenticator: '#/components/schemas/KerberosAuthenticatorPostRequestBody'
                  LDAPAuthenticator: '#/components/schemas/LDAPAuthenticatorPostRequestBody'
                  OAuthAuthorizationServer: '#/components/schemas/OAuthAuthorizationServerPostRequestBody'
                  RADIUSAuthenticator: '#/components/schemas/RADIUSAuthenticatorPostRequestBody'
                  SAMLIdentityProvider: '#/components/schemas/SAMLIdentityProviderPostRequestBody'
                  TACACSPlusAuthenticator: '#/components/schemas/TACACSPlusAuthenticatorPostRequestBody'
                  X509Authenticator: '#/components/schemas/X509AuthenticatorPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/KerberosAuthenticatorPostRequestBody'
                - $ref: '#/components/schemas/LDAPAuthenticatorPostRequestBody'
                - $ref: '#/components/schemas/OAuthAuthorizationServerPostRequestBody'
                - $ref: '#/components/schemas/RADIUSAuthenticatorPostRequestBody'
                - $ref: '#/components/schemas/SAMLIdentityProviderPostRequestBody'
                - $ref: '#/components/schemas/TACACSPlusAuthenticatorPostRequestBody'
                - $ref: '#/components/schemas/X509AuthenticatorPostRequestBody'
            examples:
              authenticatorExampleKerberos:
                $ref: '#/components/examples/authenticatorExampleKerberos'
              authenticatorExampleLdap:
                $ref: '#/components/examples/authenticatorExampleLdap'
              authenticatorExampleOauth:
                $ref: '#/components/examples/authenticatorExampleOauth'
              authenticatorExampleRadius:
                $ref: '#/components/examples/authenticatorExampleRadius'
              authenticatorExampleSamlIdentityProvider:
                $ref: '#/components/examples/authenticatorExampleSamlIdentityProvider'
              authenticatorExampleTacacsPlus:
                $ref: '#/components/examples/authenticatorExampleTacacsPlus'
              authenticatorExampleX509:
                $ref: '#/components/examples/authenticatorExampleX509'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  KerberosAuthenticator: '#/components/schemas/KerberosAuthenticatorPostRequestBody'
                  LDAPAuthenticator: '#/components/schemas/LDAPAuthenticatorPostRequestBody'
                  OAuthAuthorizationServer: '#/components/schemas/OAuthAuthorizationServerPostRequestBody'
                  RADIUSAuthenticator: '#/components/schemas/RADIUSAuthenticatorPostRequestBody'
                  SAMLIdentityProvider: '#/components/schemas/SAMLIdentityProviderPostRequestBody'
                  TACACSPlusAuthenticator: '#/components/schemas/TACACSPlusAuthenticatorPostRequestBody'
                  X509Authenticator: '#/components/schemas/X509AuthenticatorPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/KerberosAuthenticatorPostRequestBody'
                - $ref: '#/components/schemas/LDAPAuthenticatorPostRequestBody'
                - $ref: '#/components/schemas/OAuthAuthorizationServerPostRequestBody'
                - $ref: '#/components/schemas/RADIUSAuthenticatorPostRequestBody'
                - $ref: '#/components/schemas/SAMLIdentityProviderPostRequestBody'
                - $ref: '#/components/schemas/TACACSPlusAuthenticatorPostRequestBody'
                - $ref: '#/components/schemas/X509AuthenticatorPostRequestBody'
            examples:
              authenticatorExampleKerberos:
                $ref: '#/components/examples/authenticatorExampleKerberos'
              authenticatorExampleLdap:
                $ref: '#/components/examples/authenticatorExampleLdap'
              authenticatorExampleOauth:
                $ref: '#/components/examples/authenticatorExampleOauth'
              authenticatorExampleRadius:
                $ref: '#/components/examples/authenticatorExampleRadius'
              authenticatorExampleSamlIdentityProvider:
                $ref: '#/components/examples/authenticatorExampleSamlIdentityProvider'
              authenticatorExampleTacacsPlus:
                $ref: '#/components/examples/authenticatorExampleTacacsPlus'
              authenticatorExampleX509:
                $ref: '#/components/examples/authenticatorExampleX509'
            encoding: {}
      responses:
        "201":
          description: The newly created authenticator
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/KerberosAuthenticator'
                      - $ref: '#/components/schemas/LDAPAuthenticator'
                      - $ref: '#/components/schemas/OAuthAuthorizationServer'
                      - $ref: '#/components/schemas/RADIUSAuthenticator'
                      - $ref: '#/components/schemas/SAMLIdentityProvider'
                      - $ref: '#/components/schemas/TACACSPlusAuthenticator'
                      - $ref: '#/components/schemas/X509Authenticator'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/KerberosAuthenticatorResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/KerberosAuthenticator'
                  - $ref: '#/components/schemas/LDAPAuthenticator'
                  - $ref: '#/components/schemas/OAuthAuthorizationServer'
                  - $ref: '#/components/schemas/RADIUSAuthenticator'
                  - $ref: '#/components/schemas/SAMLIdentityProvider'
                  - $ref: '#/components/schemas/TACACSPlusAuthenticator'
                  - $ref: '#/components/schemas/X509Authenticator'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/authenticators/{id}:
    get:
      tags:
        - Authenticator Resources
      summary: Retrieve a single authenticator
      description: Retrieve information about a single authenticator configured with Address Manager.
      operationId: getAuthenticator
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: An authenticator
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/AddressManagerAuthenticator'
                      - $ref: '#/components/schemas/KerberosAuthenticator'
                      - $ref: '#/components/schemas/LDAPAuthenticator'
                      - $ref: '#/components/schemas/OAuthAuthorizationServer'
                      - $ref: '#/components/schemas/RADIUSAuthenticator'
                      - $ref: '#/components/schemas/SAMLIdentityProvider'
                      - $ref: '#/components/schemas/TACACSPlusAuthenticator'
                      - $ref: '#/components/schemas/X509Authenticator'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/AddressManagerAuthenticatorResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AddressManagerAuthenticator'
                  - $ref: '#/components/schemas/KerberosAuthenticator'
                  - $ref: '#/components/schemas/LDAPAuthenticator'
                  - $ref: '#/components/schemas/OAuthAuthorizationServer'
                  - $ref: '#/components/schemas/RADIUSAuthenticator'
                  - $ref: '#/components/schemas/SAMLIdentityProvider'
                  - $ref: '#/components/schemas/TACACSPlusAuthenticator'
                  - $ref: '#/components/schemas/X509Authenticator'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Authenticator Resources
      summary: Update an authenticator
      description: Update an authenticator configured with Address Manager.
      operationId: putAuthenticator
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  KerberosAuthenticator: '#/components/schemas/KerberosAuthenticatorPutRequestBody'
                  LDAPAuthenticator: '#/components/schemas/LDAPAuthenticatorPutRequestBody'
                  OAuthAuthorizationServer: '#/components/schemas/OAuthAuthorizationServerPutRequestBody'
                  RADIUSAuthenticator: '#/components/schemas/RADIUSAuthenticatorPutRequestBody'
                  SAMLIdentityProvider: '#/components/schemas/SAMLIdentityProviderPutRequestBody'
                  TACACSPlusAuthenticator: '#/components/schemas/TACACSPlusAuthenticatorPutRequestBody'
                  X509Authenticator: '#/components/schemas/X509AuthenticatorPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/KerberosAuthenticatorPutRequestBody'
                - $ref: '#/components/schemas/LDAPAuthenticatorPutRequestBody'
                - $ref: '#/components/schemas/OAuthAuthorizationServerPutRequestBody'
                - $ref: '#/components/schemas/RADIUSAuthenticatorPutRequestBody'
                - $ref: '#/components/schemas/SAMLIdentityProviderPutRequestBody'
                - $ref: '#/components/schemas/TACACSPlusAuthenticatorPutRequestBody'
                - $ref: '#/components/schemas/X509AuthenticatorPutRequestBody'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  KerberosAuthenticator: '#/components/schemas/KerberosAuthenticatorPutRequestBody'
                  LDAPAuthenticator: '#/components/schemas/LDAPAuthenticatorPutRequestBody'
                  OAuthAuthorizationServer: '#/components/schemas/OAuthAuthorizationServerPutRequestBody'
                  RADIUSAuthenticator: '#/components/schemas/RADIUSAuthenticatorPutRequestBody'
                  SAMLIdentityProvider: '#/components/schemas/SAMLIdentityProviderPutRequestBody'
                  TACACSPlusAuthenticator: '#/components/schemas/TACACSPlusAuthenticatorPutRequestBody'
                  X509Authenticator: '#/components/schemas/X509AuthenticatorPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/KerberosAuthenticatorPutRequestBody'
                - $ref: '#/components/schemas/LDAPAuthenticatorPutRequestBody'
                - $ref: '#/components/schemas/OAuthAuthorizationServerPutRequestBody'
                - $ref: '#/components/schemas/RADIUSAuthenticatorPutRequestBody'
                - $ref: '#/components/schemas/SAMLIdentityProviderPutRequestBody'
                - $ref: '#/components/schemas/TACACSPlusAuthenticatorPutRequestBody'
                - $ref: '#/components/schemas/X509AuthenticatorPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated authenticator
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/KerberosAuthenticator'
                      - $ref: '#/components/schemas/LDAPAuthenticator'
                      - $ref: '#/components/schemas/OAuthAuthorizationServer'
                      - $ref: '#/components/schemas/RADIUSAuthenticator'
                      - $ref: '#/components/schemas/SAMLIdentityProvider'
                      - $ref: '#/components/schemas/TACACSPlusAuthenticator'
                      - $ref: '#/components/schemas/X509Authenticator'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/KerberosAuthenticatorResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/KerberosAuthenticator'
                  - $ref: '#/components/schemas/LDAPAuthenticator'
                  - $ref: '#/components/schemas/OAuthAuthorizationServer'
                  - $ref: '#/components/schemas/RADIUSAuthenticator'
                  - $ref: '#/components/schemas/SAMLIdentityProvider'
                  - $ref: '#/components/schemas/TACACSPlusAuthenticator'
                  - $ref: '#/components/schemas/X509Authenticator'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - Authenticator Resources
      summary: Delete an authenticator
      description: Delete an authenticator configured with Address Manager.
      operationId: deleteAuthenticator
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/databases/{collectionId}/backups:
    get:
      tags:
        - Database Management and Replication Resources
      summary: Retrieve a collection of database backups
      description: Retrieve a collection of all backups for an Address Manager database.
      operationId: getDatabaseBackups
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of backup resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DatabaseBackupFileCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/DatabaseBackupFile'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DatabaseBackupFileResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/DatabaseBackupFile'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Database Management and Replication Resources
      summary: Upload a database backup file
      description: Upload an Address Manager database backup file.
      operationId: postDatabaseBackup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DatabaseBackupFilePostRequestBody'
            encoding:
              fileInfo:
                contentType: application/json
      responses:
        "201":
          description: The newly created database backup file
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DatabaseBackupFile'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DatabaseBackupFileResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseBackupFile'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/databases/{collectionId}/backups/{id}:
    get:
      tags:
        - Database Management and Replication Resources
      summary: Retrieve a single database backup
      description: Retrieve information about an Address Manager database backup.
      operationId: getDatabaseBackup
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A backup resource
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DatabaseBackupFile'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DatabaseBackupFileResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseBackupFile'
            text/html:
              schema:
                type: string
            application/octet-stream:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - Database Management and Replication Resources
      summary: Delete a database backup
      description: Delete an Address Manager database backup.
      operationId: deleteDatabaseBackup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/blocks:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of blocks
      description: Retrieve a collection of all IPv4/IPv6 blocks and sub blocks for all configurations.
      operationId: getBlocks
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of blocks
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4BlockCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4Block'
                            - $ref: '#/components/schemas/IPv6Block'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4BlockResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4Block'
                        - $ref: '#/components/schemas/IPv6Block'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/blocks/{id}:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a single block
      description: Retrieve a single IPv4/IPv6 block.
      operationId: getBlock
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A block
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Block'
                      - $ref: '#/components/schemas/IPv6Block'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4BlockResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Block'
                  - $ref: '#/components/schemas/IPv6Block'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - IPv4 and IPv6 Resources
      summary: Update a block
      description: Update an IPv4/IPv6 block.
      operationId: putBlock
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Block: '#/components/schemas/IPv4BlockPutRequestBody'
                  IPv6Block: '#/components/schemas/IPv6BlockPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4BlockPutRequestBody'
                - $ref: '#/components/schemas/IPv6BlockPutRequestBody'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Block: '#/components/schemas/IPv4BlockPutRequestBody'
                  IPv6Block: '#/components/schemas/IPv6BlockPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4BlockPutRequestBody'
                - $ref: '#/components/schemas/IPv6BlockPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated block
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Block'
                      - $ref: '#/components/schemas/IPv6Block'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4BlockResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Block'
                  - $ref: '#/components/schemas/IPv6Block'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - IPv4 and IPv6 Resources
      summary: Delete a block
      description: Delete an IPv4/IPv6 block.
      operationId: deleteBlock
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/blocks/{collectionId}/blocks:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of blocks
      description: Retrieve a collection of all sub blocks for an IPv4/IPv6 block. Only immediate sub blocks are returned, sub blocks of sub blocks are not included in the response.
      operationId: getBlockBlocks
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of blocks
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4BlockCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4Block'
                            - $ref: '#/components/schemas/IPv6Block'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4BlockResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4Block'
                        - $ref: '#/components/schemas/IPv6Block'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new block
      description: Create a new IPv4/IPv6 sub block within a parent block.
      operationId: postBlockBlock
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-reuse-existing
          in: header
          description: Indicates whether preexisting empty ranges will be searched when using the `DEPTH_FIRST` or `BREADTH_FIRST` traversal methods to determine the starting address of the block.
          schema:
            type: boolean
            default: false
        - name: x-bcn-traversal-method
          in: header
          description: |-
            The algorithm used to determine the starting address of the block when only a size was provided for the `range` value. If no header value is supplied, `NO_TRAVERSAL` will be used by default.
            - `NO_TRAVERSAL`: Attempt to find the available space directly under the specified parent block.
            - `DEPTH_FIRST`: Attempt to find the available space by recursively searching the parent block's children.
            - `BREADTH_FIRST`: Attempt to find the available space by iteratively searching each level of the block's children
          schema:
            type: string
            default: NO_TRAVERSAL
            enum:
              - NO_TRAVERSAL
              - DEPTH_FIRST
              - BREADTH_FIRST
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Block: '#/components/schemas/IPv4BlockPostRequestBody'
                  IPv6Block: '#/components/schemas/IPv6BlockPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4BlockPostRequestBody'
                - $ref: '#/components/schemas/IPv6BlockPostRequestBody'
            examples:
              blockExampleIpv4Cidr:
                $ref: '#/components/examples/blockExampleIpv4Cidr'
              blockExampleIpv4StartAddressAndNetmask:
                $ref: '#/components/examples/blockExampleIpv4StartAddressAndNetmask'
              blockExampleIpv4StartAndEndAddress:
                $ref: '#/components/examples/blockExampleIpv4StartAndEndAddress'
              blockExampleIpv4NextAvailable:
                $ref: '#/components/examples/blockExampleIpv4NextAvailable'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Block: '#/components/schemas/IPv4BlockPostRequestBody'
                  IPv6Block: '#/components/schemas/IPv6BlockPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4BlockPostRequestBody'
                - $ref: '#/components/schemas/IPv6BlockPostRequestBody'
            examples:
              blockExampleIpv4Cidr:
                $ref: '#/components/examples/blockExampleIpv4Cidr'
              blockExampleIpv4StartAddressAndNetmask:
                $ref: '#/components/examples/blockExampleIpv4StartAddressAndNetmask'
              blockExampleIpv4StartAndEndAddress:
                $ref: '#/components/examples/blockExampleIpv4StartAndEndAddress'
              blockExampleIpv4NextAvailable:
                $ref: '#/components/examples/blockExampleIpv4NextAvailable'
            encoding: {}
      responses:
        "201":
          description: The newly created block
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Block'
                      - $ref: '#/components/schemas/IPv6Block'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4BlockResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Block'
                  - $ref: '#/components/schemas/IPv6Block'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/configurations/{collectionId}/blocks:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of blocks
      description: Retrieve a collection of all top-level IPv4/IPv6 blocks for a configuration. Sub blocks are not included in the response.
      operationId: getConfigurationBlocks
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of blocks
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4BlockCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4Block'
                            - $ref: '#/components/schemas/IPv6Block'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4BlockResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4Block'
                        - $ref: '#/components/schemas/IPv6Block'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new block
      description: Create a new top-level IPv4 block for a configuration.
      operationId: postConfigurationBlock
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/IPv4BlockPostRequestBody'
            examples:
              blockExampleIpv4Cidr:
                $ref: '#/components/examples/blockExampleIpv4Cidr'
              blockExampleIpv4StartAddressAndNetmask:
                $ref: '#/components/examples/blockExampleIpv4StartAddressAndNetmask'
              blockExampleIpv4StartAndEndAddress:
                $ref: '#/components/examples/blockExampleIpv4StartAndEndAddress'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/IPv4BlockPostRequestBody'
            examples:
              blockExampleIpv4Cidr:
                $ref: '#/components/examples/blockExampleIpv4Cidr'
              blockExampleIpv4StartAddressAndNetmask:
                $ref: '#/components/examples/blockExampleIpv4StartAddressAndNetmask'
              blockExampleIpv4StartAndEndAddress:
                $ref: '#/components/examples/blockExampleIpv4StartAndEndAddress'
            encoding: {}
      responses:
        "201":
          description: The newly created block
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/IPv4Block'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4BlockResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/IPv4Block'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/merges/{collectionId}/blocks:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of merged block
      description: Retrieve a collection of merged IPv4 blocks.
      operationId: getMergeBlocks
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of merged blocks
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4BlockCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/IPv4Block'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4BlockResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/IPv4Block'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/splits/{collectionId}/blocks:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of block partitions
      description: Retrieve a collection of IPv4 or IPv6 block partitions.
      operationId: getSplitBlocks
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of block partitions
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4BlockCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/IPv4Block'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4BlockResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/IPv4Block'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/merges/{collectionId}/blocks/{id}:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a single merged block
      description: Retrieve a merged IPv4 block.
      operationId: getMergeBlock
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A merged block
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/IPv4Block'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4BlockResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/IPv4Block'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/splits/{collectionId}/blocks/{id}:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a single block partition
      description: Retrieve an IPv4 or IPv6 block split.
      operationId: getSplitBlock
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A block partition
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/IPv4Block'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4BlockResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/IPv4Block'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/clientClasses:
    get:
      tags:
        - DHCP Resources
      summary: Retrieve a collection of client classes
      description: Retrieve a collection of all DHCP client classes for all configurations.
      operationId: getClientClasses
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of client classes
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPv4ClientClassCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/DHCPv4ClientClass'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPv4ClientClassResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/DHCPv4ClientClass'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/clientClasses/{id}:
    get:
      tags:
        - DHCP Resources
      summary: Retrieve a single client class
      description: Retrieve a single DHCP client class.
      operationId: getClientClass
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A client class
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DHCPv4ClientClass'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPv4ClientClassResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DHCPv4ClientClass'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - DHCP Resources
      summary: Update a client class
      description: Update a DHCP client class.
      operationId: putClientClass
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DHCPv4ClientClassPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/DHCPv4ClientClassPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated client class
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DHCPv4ClientClass'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPv4ClientClassResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DHCPv4ClientClass'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - DHCP Resources
      summary: Delete a client class
      description: Delete a DHCP client class.
      operationId: deleteClientClass
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/configurations/{collectionId}/clientClasses:
    get:
      tags:
        - DHCP Resources
      summary: Retrieve a collection of client classes
      description: Retrieve a collection of all DHCP client classes for a configuration.
      operationId: getConfigurationClientClasses
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of client classes
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPv4ClientClassCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/DHCPv4ClientClass'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPv4ClientClassResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/DHCPv4ClientClass'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - DHCP Resources
      summary: Create a new client class
      description: Create a new DHCP client class for a configuration.
      operationId: postConfigurationClientClass
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DHCPv4ClientClassPostRequestBody'
            examples:
              clientClassExampleHardware:
                $ref: '#/components/examples/clientClassExampleHardware'
              clientClassExampleClientIdentifier:
                $ref: '#/components/examples/clientClassExampleClientIdentifier'
              clientClassExampleVendorClassIdentifier:
                $ref: '#/components/examples/clientClassExampleVendorClassIdentifier'
              clientClassExampleRemoteId:
                $ref: '#/components/examples/clientClassExampleRemoteId'
              clientClassExampleCustomMatch:
                $ref: '#/components/examples/clientClassExampleCustomMatch'
              clientClassExampleCustomMatchIf:
                $ref: '#/components/examples/clientClassExampleCustomMatchIf'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/DHCPv4ClientClassPostRequestBody'
            examples:
              clientClassExampleHardware:
                $ref: '#/components/examples/clientClassExampleHardware'
              clientClassExampleClientIdentifier:
                $ref: '#/components/examples/clientClassExampleClientIdentifier'
              clientClassExampleVendorClassIdentifier:
                $ref: '#/components/examples/clientClassExampleVendorClassIdentifier'
              clientClassExampleRemoteId:
                $ref: '#/components/examples/clientClassExampleRemoteId'
              clientClassExampleCustomMatch:
                $ref: '#/components/examples/clientClassExampleCustomMatch'
              clientClassExampleCustomMatchIf:
                $ref: '#/components/examples/clientClassExampleCustomMatchIf'
            encoding: {}
      responses:
        "201":
          description: The newly created client class
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DHCPv4ClientClass'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPv4ClientClassResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DHCPv4ClientClass'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/clientIdentifiers:
    get:
      tags:
        - MAC Address and Client Identifier Resources
      summary: Retrieve a collection of client identifiers
      description: Retrieve a collection of all DHCP client and unique identifiers.
      operationId: getClientIdentifiers
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of client identifiers
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPClientIdentifierCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPClientIdentifier'
                            - $ref: '#/components/schemas/DHCPUniqueIdentifier'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPClientIdentifierResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPClientIdentifier'
                        - $ref: '#/components/schemas/DHCPUniqueIdentifier'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/clientIdentifiers/{id}:
    get:
      tags:
        - MAC Address and Client Identifier Resources
      summary: Retrieve a single client identifier
      description: Retrieve information about a DHCP client or unique identifier.
      operationId: getClientIdentifier
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A client identifier
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPClientIdentifier'
                      - $ref: '#/components/schemas/DHCPUniqueIdentifier'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPClientIdentifierResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPClientIdentifier'
                  - $ref: '#/components/schemas/DHCPUniqueIdentifier'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/configurations/{collectionId}/clientIdentifiers:
    get:
      tags:
        - MAC Address and Client Identifier Resources
      summary: Retrieve a collection of client identifiers
      description: Retrieve a list of DHCP client and unique identifiers within a configuration.
      operationId: getConfigurationClientIdentifiers
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of client identifiers
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPClientIdentifierCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPClientIdentifier'
                            - $ref: '#/components/schemas/DHCPUniqueIdentifier'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPClientIdentifierResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPClientIdentifier'
                        - $ref: '#/components/schemas/DHCPUniqueIdentifier'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/configurations:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve a collection of configurations
      description: Retrieve information about a collection of configurations.
      operationId: getConfigurations
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of configurations
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ConfigurationCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Configuration'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ConfigurationResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Configuration'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Administrator Resources
      summary: Create a new configuration
      description: Create a new Address Manager configuration.
      operationId: postConfiguration
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ConfigurationPostRequestBody'
            examples:
              configurationExampleRequiredFields:
                $ref: '#/components/examples/configurationExampleRequiredFields'
              configurationExampleOptionalFields:
                $ref: '#/components/examples/configurationExampleOptionalFields'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationPostRequestBody'
            examples:
              configurationExampleRequiredFields:
                $ref: '#/components/examples/configurationExampleRequiredFields'
              configurationExampleOptionalFields:
                $ref: '#/components/examples/configurationExampleOptionalFields'
            encoding: {}
      responses:
        "201":
          description: The newly created configuration
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Configuration'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ConfigurationResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/configurations/{id}:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve a single configuration
      description: Retrieve information about a configuration.
      operationId: getConfiguration
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A configuration
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Configuration'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ConfigurationResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Administrator Resources
      summary: Update a configuration
      description: Update information of an existing configuration including the name, description, configuration group, and associated shared network tag group.
      operationId: putConfiguration
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ConfigurationPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated configuration
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Configuration'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ConfigurationResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - Administrator Resources
      summary: Delete a configuration
      description: Delete an existing configuration.
      operationId: deleteConfiguration
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/templates/{collectionId}/conflictingResources:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of conflicting resources
      description: Retrieve a collection of all resources that conflict with the template.
      operationId: getTemplateConflictingResources
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of conflicting resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ResourceCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Resource'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ResourceResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Resource'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/templates/{collectionId}/conflictingResources/{id}:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a conflicting resource
      description: Retrieve information about the resource that conflicts with the template.
      operationId: getTemplateConflictingResource
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: An conflicting resource
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Resource'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ResourceResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/databases:
    get:
      tags:
        - Database Management and Replication Resources
      summary: Retrieve a collection of database resources
      description: Retrieve information about the Address Manager database.
      operationId: getDatabases
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: A collection of database resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/AddressManagerDatabaseCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/AddressManagerDatabase'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/AddressManagerDatabaseResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/AddressManagerDatabase'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/databases/{id}:
    get:
      tags:
        - Database Management and Replication Resources
      summary: Retrieve a single database resource
      description: Retrieve information about the Address Manager database.
      operationId: getDatabase
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A database resource
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/AddressManagerDatabase'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/AddressManagerDatabaseResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/AddressManagerDatabase'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Database Management and Replication Resources
      summary: Updates a database resource
      description: Update the Address Manager database, including configuring database replication.
      operationId: putDatabase
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AddressManagerDatabasePutRequestBody'
            examples:
              databaseExampleCreateReplicationCluster:
                $ref: '#/components/examples/databaseExampleCreateReplicationCluster'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/AddressManagerDatabasePutRequestBody'
            examples:
              databaseExampleCreateReplicationCluster:
                $ref: '#/components/examples/databaseExampleCreateReplicationCluster'
            encoding: {}
      responses:
        "200":
          description: The updated database resource
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/AddressManagerDatabase'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/AddressManagerDatabaseResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/AddressManagerDatabase'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    patch:
      tags:
        - Database Management and Replication Resources
      summary: Partially update an Address Manager database
      description: Update the configuration of an Address Manager database.
      operationId: patchDatabase
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: The current replication state of the Address Manager database.
                  enum:
                    - STANDALONE
                    - REPLICATED
                    - BREAK
                    - REINDEX
            examples:
              databaseExampleBreakReplicationCluster:
                $ref: '#/components/examples/databaseExampleBreakReplicationCluster'
            encoding: {}
      responses:
        "200":
          description: The updated database
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/AddressManagerDatabase'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/AddressManagerDatabaseResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/AddressManagerDatabase'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/blocks/{collectionId}/defaultZones:
    get:
      tags:
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Retrieve a collection of default zones
      description: Retrieve a list of default DNS zones that are set on an IPv4 block.
      operationId: getBlockDefaultZones
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of default zones
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ZoneCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Zone'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ZoneResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Zone'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Create a new default zone
      description: Set a default DNS zone on an IPv4 block. Default DNS zones are used when assigning IP addresses to reduce the change of error when entering a fully qualified domain namefor a host.
      operationId: postBlockDefaultZone
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ZonePostRequestBody'
            examples:
              defaultZoneExampleAddBlockDefaultZone:
                $ref: '#/components/examples/defaultZoneExampleAddBlockDefaultZone'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ZonePostRequestBody'
            examples:
              defaultZoneExampleAddBlockDefaultZone:
                $ref: '#/components/examples/defaultZoneExampleAddBlockDefaultZone'
            encoding: {}
      responses:
        "201":
          description: The newly created default zone
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Zone'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ZoneResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/networks/{collectionId}/defaultZones:
    get:
      tags:
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Retrieve a collection of default zones
      description: Retrieve a list of default DNS zones that are set on an IPv4 network.
      operationId: getNetworkDefaultZones
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of default zones
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ZoneCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Zone'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ZoneResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Zone'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Create a new default zone
      description: Set a default DNS zone on an IPv4 network. Default DNS zones are used when assigning IP addresses to reduce the change of error when entering a fully qualified domain namefor a host.
      operationId: postNetworkDefaultZone
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ZonePostRequestBody'
            examples:
              defaultZoneExampleAddNetworkDefaultZone:
                $ref: '#/components/examples/defaultZoneExampleAddNetworkDefaultZone'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ZonePostRequestBody'
            examples:
              defaultZoneExampleAddNetworkDefaultZone:
                $ref: '#/components/examples/defaultZoneExampleAddNetworkDefaultZone'
            encoding: {}
      responses:
        "201":
          description: The newly created default zone
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Zone'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ZoneResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/blocks/{collectionId}/defaultZones/{id}:
    delete:
      tags:
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Delete a default zone
      description: Delete a default DNS zone from an IPv4 block.
      operationId: deleteBlockDefaultZone
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/networks/{collectionId}/defaultZones/{id}:
    delete:
      tags:
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Delete a default zone
      description: Delete a default DNS zone from an IPv4 network.
      operationId: deleteNetworkDefaultZone
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/deployments/{collectionId}/deletedResources:
    get:
      tags:
        - Resource Record Resources
      summary: Retrieve a collection of resources
      description: Retrieve a list of all deleted resources for a specified selective deployment.
      operationId: getDeploymentDeletedResources
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/GenericRecordCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/GenericRecord'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/GenericRecordResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/GenericRecord'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/deployments/{collectionId}/deletedResources/{id}:
    get:
      tags:
        - Resource Record Resources
      summary: Retrieve a single resource
      description: Retrieve a deleted resource for a specified selective deployment.
      operationId: getDeploymentDeletedResource
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A resource
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/GenericRecord'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/GenericRecordResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericRecord'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/resourceRecords/{collectionId}/dependentRecords:
    get:
      tags:
        - Resource Record Resources
      summary: Retrieve a collection of dependent records
      description: Retrieve all resource records dependent on another resource record
      operationId: getResourceRecordDependentRecords
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of dependent records
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/AliasRecordCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/AliasRecord'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/AliasRecordResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/AliasRecord'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/resourceRecords/{collectionId}/dependentRecords/{id}:
    get:
      tags:
        - Resource Record Resources
      summary: Retrieve a single dependent resource record
      description: Retrieve a specific resource record that is dependent on another resource record.
      operationId: getResourceRecordDependentRecord
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A dependent record
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/AliasRecord'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/AliasRecordResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/AliasRecord'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/deploymentOptionDefinitions:
    get:
      tags:
        - Deployment Option Resources
        - DHCP Resources
      summary: Retrieve a collection of deployment option definitions
      description: Retrieve a collection of all configurable deployment option definitions including custom option definitions, DHCPv4 client option definitions DHCPv4 service option definitions, DHCPv6 client option definitions DHCPv6 service option definitions, DNS option definitions, Start of Authority definitions, and vendor option definitions.
      operationId: getDeploymentOptionDefinitions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of deployment option definitions
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinitionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinition'
                            - $ref: '#/components/schemas/DHCPv4ClientOptionDefinition'
                            - $ref: '#/components/schemas/DHCPv4ServiceOptionDefinition'
                            - $ref: '#/components/schemas/DHCPv6ClientOptionDefinition'
                            - $ref: '#/components/schemas/DHCPv6ServiceOptionDefinition'
                            - $ref: '#/components/schemas/DNSOptionDefinition'
                            - $ref: '#/components/schemas/StartOfAuthorityDefinition'
                            - $ref: '#/components/schemas/DHCPVendorOptionDefinition'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinitionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinition'
                        - $ref: '#/components/schemas/DHCPv4ClientOptionDefinition'
                        - $ref: '#/components/schemas/DHCPv4ServiceOptionDefinition'
                        - $ref: '#/components/schemas/DHCPv6ClientOptionDefinition'
                        - $ref: '#/components/schemas/DHCPv6ServiceOptionDefinition'
                        - $ref: '#/components/schemas/DNSOptionDefinition'
                        - $ref: '#/components/schemas/StartOfAuthorityDefinition'
                        - $ref: '#/components/schemas/DHCPVendorOptionDefinition'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/deploymentOptionDefinitions/{id}:
    get:
      tags:
        - Deployment Option Resources
        - DHCP Resources
      summary: Retrieve a single deployment option definition
      description: Retrieve information about a single deployment option definitions.
      operationId: getDeploymentOptionDefinition
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A deployment option definition
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinition'
                      - $ref: '#/components/schemas/DHCPv4ClientOptionDefinition'
                      - $ref: '#/components/schemas/DHCPv4ServiceOptionDefinition'
                      - $ref: '#/components/schemas/DHCPv6ClientOptionDefinition'
                      - $ref: '#/components/schemas/DHCPv6ServiceOptionDefinition'
                      - $ref: '#/components/schemas/DNSOptionDefinition'
                      - $ref: '#/components/schemas/StartOfAuthorityDefinition'
                      - $ref: '#/components/schemas/DHCPVendorOptionDefinition'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinitionResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinition'
                  - $ref: '#/components/schemas/DHCPv4ClientOptionDefinition'
                  - $ref: '#/components/schemas/DHCPv4ServiceOptionDefinition'
                  - $ref: '#/components/schemas/DHCPv6ClientOptionDefinition'
                  - $ref: '#/components/schemas/DHCPv6ServiceOptionDefinition'
                  - $ref: '#/components/schemas/DNSOptionDefinition'
                  - $ref: '#/components/schemas/StartOfAuthorityDefinition'
                  - $ref: '#/components/schemas/DHCPVendorOptionDefinition'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Deployment Option Resources
        - DHCP Resources
      summary: Update a deployment option definition
      description: Update a specific deployment option definition.
      operationId: putDeploymentOptionDefinition
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4CustomClientOptionDefinition: '#/components/schemas/DHCPv4CustomClientOptionDefinitionPutRequestBody'
                  DHCPVendorOptionDefinition: '#/components/schemas/DHCPVendorOptionDefinitionPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinitionPutRequestBody'
                - $ref: '#/components/schemas/DHCPVendorOptionDefinitionPutRequestBody'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4CustomClientOptionDefinition: '#/components/schemas/DHCPv4CustomClientOptionDefinitionPutRequestBody'
                  DHCPVendorOptionDefinition: '#/components/schemas/DHCPVendorOptionDefinitionPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinitionPutRequestBody'
                - $ref: '#/components/schemas/DHCPVendorOptionDefinitionPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated deployment option definition
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinition'
                      - $ref: '#/components/schemas/DHCPVendorOptionDefinition'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinitionResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinition'
                  - $ref: '#/components/schemas/DHCPVendorOptionDefinition'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - Deployment Option Resources
        - DHCP Resources
      summary: Delete a deployment option definition
      description: Delete a specific deployment option definition.
      operationId: deleteDeploymentOptionDefinition
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/configurations/{collectionId}/deploymentOptionDefinitions:
    get:
      tags:
        - Deployment Option Resources
        - DHCP Resources
      summary: Retrieve a collection of deployment option definitions
      description: Retrieve information about a specific deployment option definition.
      operationId: getConfigurationDeploymentOptionDefinitions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployment option definitions
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinitionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinition'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinitionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinition'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Deployment Option Resources
        - DHCP Resources
      summary: Create a new deployment option definition
      description: Create a new custom option definition.
      operationId: postConfigurationDeploymentOptionDefinition
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinitionPostRequestBody'
            examples:
              deploymentOptionDefinitionExampleAddCustomOptionDefinition:
                $ref: '#/components/examples/deploymentOptionDefinitionExampleAddCustomOptionDefinition'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinitionPostRequestBody'
            examples:
              deploymentOptionDefinitionExampleAddCustomOptionDefinition:
                $ref: '#/components/examples/deploymentOptionDefinitionExampleAddCustomOptionDefinition'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment option definition
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinition'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinitionResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinition'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/vendorProfiles/{collectionId}/deploymentOptionDefinitions:
    get:
      tags:
        - Deployment Option Resources
        - DHCP Resources
      summary: Retrieve a collection of deployment option definitions
      description: Retrieve information about a specific deployment option definition.
      operationId: getVendorProfileDeploymentOptionDefinitions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployment option definitions
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPVendorOptionDefinitionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/DHCPVendorOptionDefinition'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPVendorOptionDefinitionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/DHCPVendorOptionDefinition'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Deployment Option Resources
        - DHCP Resources
      summary: Create a new deployment option definition
      description: Create a new custom option definition.
      operationId: postVendorProfileDeploymentOptionDefinition
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DHCPVendorOptionDefinitionPostRequestBody'
            examples:
              deploymentOptionDefinitionExampleAddVendorOptionDefinition:
                $ref: '#/components/examples/deploymentOptionDefinitionExampleAddVendorOptionDefinition'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/DHCPVendorOptionDefinitionPostRequestBody'
            examples:
              deploymentOptionDefinitionExampleAddVendorOptionDefinition:
                $ref: '#/components/examples/deploymentOptionDefinitionExampleAddVendorOptionDefinition'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment option definition
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DHCPVendorOptionDefinition'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPVendorOptionDefinitionResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DHCPVendorOptionDefinition'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/deploymentOptions:
    get:
      tags:
        - Deployment Option Resources
      summary: Retrieve a collection of deployment options
      description: Retrieve deployment options for Address Manager DNS and DHCP services.
      operationId: getDeploymentOptions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of deployment options
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPv4ClientOptionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPv4ClientOption'
                            - $ref: '#/components/schemas/DHCPv4RawOption'
                            - $ref: '#/components/schemas/DHCPv4ServiceOption'
                            - $ref: '#/components/schemas/DHCPv6ClientOption'
                            - $ref: '#/components/schemas/DHCPv6RawOption'
                            - $ref: '#/components/schemas/DHCPv6ServiceOption'
                            - $ref: '#/components/schemas/DNSOption'
                            - $ref: '#/components/schemas/DNSRawOption'
                            - $ref: '#/components/schemas/StartOfAuthority'
                            - $ref: '#/components/schemas/DHCPVendorOption'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPv4ClientOptionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPv4ClientOption'
                        - $ref: '#/components/schemas/DHCPv4RawOption'
                        - $ref: '#/components/schemas/DHCPv4ServiceOption'
                        - $ref: '#/components/schemas/DHCPv6ClientOption'
                        - $ref: '#/components/schemas/DHCPv6RawOption'
                        - $ref: '#/components/schemas/DHCPv6ServiceOption'
                        - $ref: '#/components/schemas/DNSOption'
                        - $ref: '#/components/schemas/DNSRawOption'
                        - $ref: '#/components/schemas/StartOfAuthority'
                        - $ref: '#/components/schemas/DHCPVendorOption'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/deploymentOptions/{id}:
    get:
      tags:
        - Deployment Option Resources
      summary: Retrieve a single deployment option
      description: Retrieve a single DNS or DHCP deployment option.
      operationId: getDeploymentOption
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A deployment option
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPv4ClientOption'
                      - $ref: '#/components/schemas/DHCPv4RawOption'
                      - $ref: '#/components/schemas/DHCPv4ServiceOption'
                      - $ref: '#/components/schemas/DHCPv6ClientOption'
                      - $ref: '#/components/schemas/DHCPv6RawOption'
                      - $ref: '#/components/schemas/DHCPv6ServiceOption'
                      - $ref: '#/components/schemas/DNSOption'
                      - $ref: '#/components/schemas/DNSRawOption'
                      - $ref: '#/components/schemas/StartOfAuthority'
                      - $ref: '#/components/schemas/DHCPVendorOption'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPv4ClientOptionResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPv4ClientOption'
                  - $ref: '#/components/schemas/DHCPv4RawOption'
                  - $ref: '#/components/schemas/DHCPv4ServiceOption'
                  - $ref: '#/components/schemas/DHCPv6ClientOption'
                  - $ref: '#/components/schemas/DHCPv6RawOption'
                  - $ref: '#/components/schemas/DHCPv6ServiceOption'
                  - $ref: '#/components/schemas/DNSOption'
                  - $ref: '#/components/schemas/DNSRawOption'
                  - $ref: '#/components/schemas/StartOfAuthority'
                  - $ref: '#/components/schemas/DHCPVendorOption'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Deployment Option Resources
      summary: Update a deployment option
      description: Update an existing DNS or DHCP deployment option.
      operationId: putDeploymentOption
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPutRequestBody'
                  DHCPv4RawOption: '#/components/schemas/DHCPv4RawOptionPutRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPutRequestBody'
                  DHCPv6ClientOption: '#/components/schemas/DHCPv6ClientOptionPutRequestBody'
                  DHCPv6RawOption: '#/components/schemas/DHCPv6RawOptionPutRequestBody'
                  DHCPv6ServiceOption: '#/components/schemas/DHCPv6ServiceOptionPutRequestBody'
                  DNSOption: '#/components/schemas/DNSOptionPutRequestBody'
                  DNSRawOption: '#/components/schemas/DNSRawOptionPutRequestBody'
                  StartOfAuthority: '#/components/schemas/StartOfAuthorityPutRequestBody'
                  DHCPVendorOption: '#/components/schemas/DHCPVendorOptionPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4ClientOptionPutRequestBody'
                - $ref: '#/components/schemas/DHCPv4RawOptionPutRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPutRequestBody'
                - $ref: '#/components/schemas/DHCPv6ClientOptionPutRequestBody'
                - $ref: '#/components/schemas/DHCPv6RawOptionPutRequestBody'
                - $ref: '#/components/schemas/DHCPv6ServiceOptionPutRequestBody'
                - $ref: '#/components/schemas/DNSOptionPutRequestBody'
                - $ref: '#/components/schemas/DNSRawOptionPutRequestBody'
                - $ref: '#/components/schemas/StartOfAuthorityPutRequestBody'
                - $ref: '#/components/schemas/DHCPVendorOptionPutRequestBody'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPutRequestBody'
                  DHCPv4RawOption: '#/components/schemas/DHCPv4RawOptionPutRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPutRequestBody'
                  DHCPv6ClientOption: '#/components/schemas/DHCPv6ClientOptionPutRequestBody'
                  DHCPv6RawOption: '#/components/schemas/DHCPv6RawOptionPutRequestBody'
                  DHCPv6ServiceOption: '#/components/schemas/DHCPv6ServiceOptionPutRequestBody'
                  DNSOption: '#/components/schemas/DNSOptionPutRequestBody'
                  DNSRawOption: '#/components/schemas/DNSRawOptionPutRequestBody'
                  StartOfAuthority: '#/components/schemas/StartOfAuthorityPutRequestBody'
                  DHCPVendorOption: '#/components/schemas/DHCPVendorOptionPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4ClientOptionPutRequestBody'
                - $ref: '#/components/schemas/DHCPv4RawOptionPutRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPutRequestBody'
                - $ref: '#/components/schemas/DHCPv6ClientOptionPutRequestBody'
                - $ref: '#/components/schemas/DHCPv6RawOptionPutRequestBody'
                - $ref: '#/components/schemas/DHCPv6ServiceOptionPutRequestBody'
                - $ref: '#/components/schemas/DNSOptionPutRequestBody'
                - $ref: '#/components/schemas/DNSRawOptionPutRequestBody'
                - $ref: '#/components/schemas/StartOfAuthorityPutRequestBody'
                - $ref: '#/components/schemas/DHCPVendorOptionPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated deployment option
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPv4ClientOption'
                      - $ref: '#/components/schemas/DHCPv4RawOption'
                      - $ref: '#/components/schemas/DHCPv4ServiceOption'
                      - $ref: '#/components/schemas/DHCPv6ClientOption'
                      - $ref: '#/components/schemas/DHCPv6RawOption'
                      - $ref: '#/components/schemas/DHCPv6ServiceOption'
                      - $ref: '#/components/schemas/DNSOption'
                      - $ref: '#/components/schemas/DNSRawOption'
                      - $ref: '#/components/schemas/StartOfAuthority'
                      - $ref: '#/components/schemas/DHCPVendorOption'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPv4ClientOptionResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPv4ClientOption'
                  - $ref: '#/components/schemas/DHCPv4RawOption'
                  - $ref: '#/components/schemas/DHCPv4ServiceOption'
                  - $ref: '#/components/schemas/DHCPv6ClientOption'
                  - $ref: '#/components/schemas/DHCPv6RawOption'
                  - $ref: '#/components/schemas/DHCPv6ServiceOption'
                  - $ref: '#/components/schemas/DNSOption'
                  - $ref: '#/components/schemas/DNSRawOption'
                  - $ref: '#/components/schemas/StartOfAuthority'
                  - $ref: '#/components/schemas/DHCPVendorOption'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - Deployment Option Resources
      summary: Delete a deployment option
      description: Delete an existing DNS or DHCP deployment option.
      operationId: deleteDeploymentOption
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/addresses/{collectionId}/deploymentOptions:
    get:
      tags:
        - Deployment Option Resources
      summary: Retrieve a collection of deployment options
      description: Retrieve a collection of all deployment options configured for a resource.
      operationId: getAddressDeploymentOptions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployment options
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPv4ClientOptionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPv4ClientOption'
                            - $ref: '#/components/schemas/DHCPv4RawOption'
                            - $ref: '#/components/schemas/DHCPv4ServiceOption'
                            - $ref: '#/components/schemas/DHCPv6ClientOption'
                            - $ref: '#/components/schemas/DHCPv6RawOption'
                            - $ref: '#/components/schemas/DHCPv6ServiceOption'
                            - $ref: '#/components/schemas/DHCPVendorOption'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPv4ClientOptionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPv4ClientOption'
                        - $ref: '#/components/schemas/DHCPv4RawOption'
                        - $ref: '#/components/schemas/DHCPv4ServiceOption'
                        - $ref: '#/components/schemas/DHCPv6ClientOption'
                        - $ref: '#/components/schemas/DHCPv6RawOption'
                        - $ref: '#/components/schemas/DHCPv6ServiceOption'
                        - $ref: '#/components/schemas/DHCPVendorOption'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Deployment Option Resources
      summary: Create a new deployment option
      description: Create a new DNS or DHCP deployment option.
      operationId: postAddressDeploymentOption
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                  DHCPv4RawOption: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                  DHCPv6ClientOption: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                  DHCPv6RawOption: '#/components/schemas/DHCPv6RawOptionPostRequestBody'
                  DHCPv6ServiceOption: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                  DHCPVendorOption: '#/components/schemas/DHCPVendorOptionPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPVendorOptionPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                  DHCPv4RawOption: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                  DHCPv6ClientOption: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                  DHCPv6RawOption: '#/components/schemas/DHCPv6RawOptionPostRequestBody'
                  DHCPv6ServiceOption: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                  DHCPVendorOption: '#/components/schemas/DHCPVendorOptionPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPVendorOptionPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment option
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPv4ClientOption'
                      - $ref: '#/components/schemas/DHCPv4RawOption'
                      - $ref: '#/components/schemas/DHCPv4ServiceOption'
                      - $ref: '#/components/schemas/DHCPv6ClientOption'
                      - $ref: '#/components/schemas/DHCPv6RawOption'
                      - $ref: '#/components/schemas/DHCPv6ServiceOption'
                      - $ref: '#/components/schemas/DHCPVendorOption'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPv4ClientOptionResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPv4ClientOption'
                  - $ref: '#/components/schemas/DHCPv4RawOption'
                  - $ref: '#/components/schemas/DHCPv4ServiceOption'
                  - $ref: '#/components/schemas/DHCPv6ClientOption'
                  - $ref: '#/components/schemas/DHCPv6RawOption'
                  - $ref: '#/components/schemas/DHCPv6ServiceOption'
                  - $ref: '#/components/schemas/DHCPVendorOption'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/blocks/{collectionId}/deploymentOptions:
    get:
      tags:
        - Deployment Option Resources
      summary: Retrieve a collection of deployment options
      description: Retrieve a collection of all deployment options configured for a resource.
      operationId: getBlockDeploymentOptions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployment options
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPv4ClientOptionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPv4ClientOption'
                            - $ref: '#/components/schemas/DHCPv4ServiceOption'
                            - $ref: '#/components/schemas/DHCPv6ClientOption'
                            - $ref: '#/components/schemas/DHCPv6ServiceOption'
                            - $ref: '#/components/schemas/DNSOption'
                            - $ref: '#/components/schemas/DNSRawOption'
                            - $ref: '#/components/schemas/StartOfAuthority'
                            - $ref: '#/components/schemas/DHCPVendorOption'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPv4ClientOptionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPv4ClientOption'
                        - $ref: '#/components/schemas/DHCPv4ServiceOption'
                        - $ref: '#/components/schemas/DHCPv6ClientOption'
                        - $ref: '#/components/schemas/DHCPv6ServiceOption'
                        - $ref: '#/components/schemas/DNSOption'
                        - $ref: '#/components/schemas/DNSRawOption'
                        - $ref: '#/components/schemas/StartOfAuthority'
                        - $ref: '#/components/schemas/DHCPVendorOption'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Deployment Option Resources
      summary: Create a new deployment option
      description: Create a new DNS or DHCP deployment option.
      operationId: postBlockDeploymentOption
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                  DHCPv6ClientOption: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                  DHCPv6ServiceOption: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                  DNSOption: '#/components/schemas/DNSOptionPostRequestBody'
                  DNSRawOption: '#/components/schemas/DNSRawOptionPostRequestBody'
                  StartOfAuthority: '#/components/schemas/StartOfAuthorityPostRequestBody'
                  DHCPVendorOption: '#/components/schemas/DHCPVendorOptionPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSRawOptionPostRequestBody'
                - $ref: '#/components/schemas/StartOfAuthorityPostRequestBody'
                - $ref: '#/components/schemas/DHCPVendorOptionPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                  DHCPv6ClientOption: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                  DHCPv6ServiceOption: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                  DNSOption: '#/components/schemas/DNSOptionPostRequestBody'
                  DNSRawOption: '#/components/schemas/DNSRawOptionPostRequestBody'
                  StartOfAuthority: '#/components/schemas/StartOfAuthorityPostRequestBody'
                  DHCPVendorOption: '#/components/schemas/DHCPVendorOptionPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSRawOptionPostRequestBody'
                - $ref: '#/components/schemas/StartOfAuthorityPostRequestBody'
                - $ref: '#/components/schemas/DHCPVendorOptionPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment option
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPv4ClientOption'
                      - $ref: '#/components/schemas/DHCPv4ServiceOption'
                      - $ref: '#/components/schemas/DHCPv6ClientOption'
                      - $ref: '#/components/schemas/DHCPv6ServiceOption'
                      - $ref: '#/components/schemas/DNSOption'
                      - $ref: '#/components/schemas/DNSRawOption'
                      - $ref: '#/components/schemas/StartOfAuthority'
                      - $ref: '#/components/schemas/DHCPVendorOption'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPv4ClientOptionResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPv4ClientOption'
                  - $ref: '#/components/schemas/DHCPv4ServiceOption'
                  - $ref: '#/components/schemas/DHCPv6ClientOption'
                  - $ref: '#/components/schemas/DHCPv6ServiceOption'
                  - $ref: '#/components/schemas/DNSOption'
                  - $ref: '#/components/schemas/DNSRawOption'
                  - $ref: '#/components/schemas/StartOfAuthority'
                  - $ref: '#/components/schemas/DHCPVendorOption'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/clientClasses/{collectionId}/deploymentOptions:
    get:
      tags:
        - Deployment Option Resources
      summary: Retrieve a collection of deployment options
      description: Retrieve a collection of all deployment options configured for a resource.
      operationId: getClientClassDeploymentOptions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployment options
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPv4ClientOptionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPv4ClientOption'
                            - $ref: '#/components/schemas/DHCPv4RawOption'
                            - $ref: '#/components/schemas/DHCPv4ServiceOption'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPv4ClientOptionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPv4ClientOption'
                        - $ref: '#/components/schemas/DHCPv4RawOption'
                        - $ref: '#/components/schemas/DHCPv4ServiceOption'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Deployment Option Resources
      summary: Create a new deployment option
      description: Create a new DNS or DHCP deployment option.
      operationId: postClientClassDeploymentOption
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                  DHCPv4RawOption: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                  DHCPv4RawOption: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment option
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPv4ClientOption'
                      - $ref: '#/components/schemas/DHCPv4RawOption'
                      - $ref: '#/components/schemas/DHCPv4ServiceOption'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPv4ClientOptionResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPv4ClientOption'
                  - $ref: '#/components/schemas/DHCPv4RawOption'
                  - $ref: '#/components/schemas/DHCPv4ServiceOption'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/configurations/{collectionId}/deploymentOptions:
    get:
      tags:
        - Deployment Option Resources
      summary: Retrieve a collection of deployment options
      description: Retrieve a collection of all deployment options configured for a resource.
      operationId: getConfigurationDeploymentOptions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployment options
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPv4ClientOptionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPv4ClientOption'
                            - $ref: '#/components/schemas/DHCPv4ServiceOption'
                            - $ref: '#/components/schemas/DHCPv6ClientOption'
                            - $ref: '#/components/schemas/DHCPv6ServiceOption'
                            - $ref: '#/components/schemas/DNSOption'
                            - $ref: '#/components/schemas/StartOfAuthority'
                            - $ref: '#/components/schemas/DHCPVendorOption'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPv4ClientOptionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPv4ClientOption'
                        - $ref: '#/components/schemas/DHCPv4ServiceOption'
                        - $ref: '#/components/schemas/DHCPv6ClientOption'
                        - $ref: '#/components/schemas/DHCPv6ServiceOption'
                        - $ref: '#/components/schemas/DNSOption'
                        - $ref: '#/components/schemas/StartOfAuthority'
                        - $ref: '#/components/schemas/DHCPVendorOption'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Deployment Option Resources
      summary: Create a new deployment option
      description: Create a new DNS or DHCP deployment option.
      operationId: postConfigurationDeploymentOption
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                  DHCPv6ClientOption: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                  DHCPv6ServiceOption: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                  DNSOption: '#/components/schemas/DNSOptionPostRequestBody'
                  StartOfAuthority: '#/components/schemas/StartOfAuthorityPostRequestBody'
                  DHCPVendorOption: '#/components/schemas/DHCPVendorOptionPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSOptionPostRequestBody'
                - $ref: '#/components/schemas/StartOfAuthorityPostRequestBody'
                - $ref: '#/components/schemas/DHCPVendorOptionPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                  DHCPv6ClientOption: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                  DHCPv6ServiceOption: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                  DNSOption: '#/components/schemas/DNSOptionPostRequestBody'
                  StartOfAuthority: '#/components/schemas/StartOfAuthorityPostRequestBody'
                  DHCPVendorOption: '#/components/schemas/DHCPVendorOptionPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSOptionPostRequestBody'
                - $ref: '#/components/schemas/StartOfAuthorityPostRequestBody'
                - $ref: '#/components/schemas/DHCPVendorOptionPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment option
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPv4ClientOption'
                      - $ref: '#/components/schemas/DHCPv4ServiceOption'
                      - $ref: '#/components/schemas/DHCPv6ClientOption'
                      - $ref: '#/components/schemas/DHCPv6ServiceOption'
                      - $ref: '#/components/schemas/DNSOption'
                      - $ref: '#/components/schemas/StartOfAuthority'
                      - $ref: '#/components/schemas/DHCPVendorOption'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPv4ClientOptionResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPv4ClientOption'
                  - $ref: '#/components/schemas/DHCPv4ServiceOption'
                  - $ref: '#/components/schemas/DHCPv6ClientOption'
                  - $ref: '#/components/schemas/DHCPv6ServiceOption'
                  - $ref: '#/components/schemas/DNSOption'
                  - $ref: '#/components/schemas/StartOfAuthority'
                  - $ref: '#/components/schemas/DHCPVendorOption'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/macAddresses/{collectionId}/deploymentOptions:
    get:
      tags:
        - Deployment Option Resources
      summary: Retrieve a collection of deployment options
      description: Retrieve a collection of all deployment options configured for a resource.
      operationId: getMacAddressDeploymentOptions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployment options
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPv4ClientOptionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPv4ClientOption'
                            - $ref: '#/components/schemas/DHCPv4RawOption'
                            - $ref: '#/components/schemas/DHCPv4ServiceOption'
                            - $ref: '#/components/schemas/DHCPVendorOption'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPv4ClientOptionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPv4ClientOption'
                        - $ref: '#/components/schemas/DHCPv4RawOption'
                        - $ref: '#/components/schemas/DHCPv4ServiceOption'
                        - $ref: '#/components/schemas/DHCPVendorOption'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Deployment Option Resources
      summary: Create a new deployment option
      description: Create a new DNS or DHCP deployment option.
      operationId: postMacAddressDeploymentOption
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                  DHCPv4RawOption: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                  DHCPVendorOption: '#/components/schemas/DHCPVendorOptionPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPVendorOptionPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                  DHCPv4RawOption: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                  DHCPVendorOption: '#/components/schemas/DHCPVendorOptionPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPVendorOptionPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment option
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPv4ClientOption'
                      - $ref: '#/components/schemas/DHCPv4RawOption'
                      - $ref: '#/components/schemas/DHCPv4ServiceOption'
                      - $ref: '#/components/schemas/DHCPVendorOption'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPv4ClientOptionResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPv4ClientOption'
                  - $ref: '#/components/schemas/DHCPv4RawOption'
                  - $ref: '#/components/schemas/DHCPv4ServiceOption'
                  - $ref: '#/components/schemas/DHCPVendorOption'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/macPools/{collectionId}/deploymentOptions:
    get:
      tags:
        - Deployment Option Resources
      summary: Retrieve a collection of deployment options
      description: Retrieve a collection of all deployment options configured for a resource.
      operationId: getMacPoolDeploymentOptions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployment options
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPv4ClientOptionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPv4ClientOption'
                            - $ref: '#/components/schemas/DHCPv4RawOption'
                            - $ref: '#/components/schemas/DHCPv4ServiceOption'
                            - $ref: '#/components/schemas/DHCPVendorOption'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPv4ClientOptionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPv4ClientOption'
                        - $ref: '#/components/schemas/DHCPv4RawOption'
                        - $ref: '#/components/schemas/DHCPv4ServiceOption'
                        - $ref: '#/components/schemas/DHCPVendorOption'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Deployment Option Resources
      summary: Create a new deployment option
      description: Create a new DNS or DHCP deployment option.
      operationId: postMacPoolDeploymentOption
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                  DHCPv4RawOption: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                  DHCPVendorOption: '#/components/schemas/DHCPVendorOptionPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPVendorOptionPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                  DHCPv4RawOption: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                  DHCPVendorOption: '#/components/schemas/DHCPVendorOptionPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPVendorOptionPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment option
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPv4ClientOption'
                      - $ref: '#/components/schemas/DHCPv4RawOption'
                      - $ref: '#/components/schemas/DHCPv4ServiceOption'
                      - $ref: '#/components/schemas/DHCPVendorOption'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPv4ClientOptionResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPv4ClientOption'
                  - $ref: '#/components/schemas/DHCPv4RawOption'
                  - $ref: '#/components/schemas/DHCPv4ServiceOption'
                  - $ref: '#/components/schemas/DHCPVendorOption'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/networks/{collectionId}/deploymentOptions:
    get:
      tags:
        - Deployment Option Resources
      summary: Retrieve a collection of deployment options
      description: Retrieve a collection of all deployment options configured for a resource.
      operationId: getNetworkDeploymentOptions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployment options
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPv4ClientOptionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPv4ClientOption'
                            - $ref: '#/components/schemas/DHCPv4RawOption'
                            - $ref: '#/components/schemas/DHCPv4ServiceOption'
                            - $ref: '#/components/schemas/DHCPv6ClientOption'
                            - $ref: '#/components/schemas/DHCPv6RawOption'
                            - $ref: '#/components/schemas/DHCPv6ServiceOption'
                            - $ref: '#/components/schemas/DNSOption'
                            - $ref: '#/components/schemas/DNSRawOption'
                            - $ref: '#/components/schemas/StartOfAuthority'
                            - $ref: '#/components/schemas/DHCPVendorOption'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPv4ClientOptionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPv4ClientOption'
                        - $ref: '#/components/schemas/DHCPv4RawOption'
                        - $ref: '#/components/schemas/DHCPv4ServiceOption'
                        - $ref: '#/components/schemas/DHCPv6ClientOption'
                        - $ref: '#/components/schemas/DHCPv6RawOption'
                        - $ref: '#/components/schemas/DHCPv6ServiceOption'
                        - $ref: '#/components/schemas/DNSOption'
                        - $ref: '#/components/schemas/DNSRawOption'
                        - $ref: '#/components/schemas/StartOfAuthority'
                        - $ref: '#/components/schemas/DHCPVendorOption'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Deployment Option Resources
      summary: Create a new deployment option
      description: Create a new DNS or DHCP deployment option.
      operationId: postNetworkDeploymentOption
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                  DHCPv4RawOption: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                  DHCPv6ClientOption: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                  DHCPv6RawOption: '#/components/schemas/DHCPv6RawOptionPostRequestBody'
                  DHCPv6ServiceOption: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                  DNSOption: '#/components/schemas/DNSOptionPostRequestBody'
                  DNSRawOption: '#/components/schemas/DNSRawOptionPostRequestBody'
                  StartOfAuthority: '#/components/schemas/StartOfAuthorityPostRequestBody'
                  DHCPVendorOption: '#/components/schemas/DHCPVendorOptionPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSRawOptionPostRequestBody'
                - $ref: '#/components/schemas/StartOfAuthorityPostRequestBody'
                - $ref: '#/components/schemas/DHCPVendorOptionPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                  DHCPv4RawOption: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                  DHCPv6ClientOption: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                  DHCPv6RawOption: '#/components/schemas/DHCPv6RawOptionPostRequestBody'
                  DHCPv6ServiceOption: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                  DNSOption: '#/components/schemas/DNSOptionPostRequestBody'
                  DNSRawOption: '#/components/schemas/DNSRawOptionPostRequestBody'
                  StartOfAuthority: '#/components/schemas/StartOfAuthorityPostRequestBody'
                  DHCPVendorOption: '#/components/schemas/DHCPVendorOptionPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSRawOptionPostRequestBody'
                - $ref: '#/components/schemas/StartOfAuthorityPostRequestBody'
                - $ref: '#/components/schemas/DHCPVendorOptionPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment option
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPv4ClientOption'
                      - $ref: '#/components/schemas/DHCPv4RawOption'
                      - $ref: '#/components/schemas/DHCPv4ServiceOption'
                      - $ref: '#/components/schemas/DHCPv6ClientOption'
                      - $ref: '#/components/schemas/DHCPv6RawOption'
                      - $ref: '#/components/schemas/DHCPv6ServiceOption'
                      - $ref: '#/components/schemas/DNSOption'
                      - $ref: '#/components/schemas/DNSRawOption'
                      - $ref: '#/components/schemas/StartOfAuthority'
                      - $ref: '#/components/schemas/DHCPVendorOption'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPv4ClientOptionResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPv4ClientOption'
                  - $ref: '#/components/schemas/DHCPv4RawOption'
                  - $ref: '#/components/schemas/DHCPv4ServiceOption'
                  - $ref: '#/components/schemas/DHCPv6ClientOption'
                  - $ref: '#/components/schemas/DHCPv6RawOption'
                  - $ref: '#/components/schemas/DHCPv6ServiceOption'
                  - $ref: '#/components/schemas/DNSOption'
                  - $ref: '#/components/schemas/DNSRawOption'
                  - $ref: '#/components/schemas/StartOfAuthority'
                  - $ref: '#/components/schemas/DHCPVendorOption'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/ranges/{collectionId}/deploymentOptions:
    get:
      tags:
        - Deployment Option Resources
      summary: Retrieve a collection of deployment options
      description: Retrieve a collection of all deployment options configured for a resource.
      operationId: getRangeDeploymentOptions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployment options
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPv4ClientOptionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPv4ClientOption'
                            - $ref: '#/components/schemas/DHCPv4RawOption'
                            - $ref: '#/components/schemas/DHCPv4ServiceOption'
                            - $ref: '#/components/schemas/DHCPv6ClientOption'
                            - $ref: '#/components/schemas/DHCPv6RawOption'
                            - $ref: '#/components/schemas/DHCPv6ServiceOption'
                            - $ref: '#/components/schemas/DHCPVendorOption'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPv4ClientOptionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPv4ClientOption'
                        - $ref: '#/components/schemas/DHCPv4RawOption'
                        - $ref: '#/components/schemas/DHCPv4ServiceOption'
                        - $ref: '#/components/schemas/DHCPv6ClientOption'
                        - $ref: '#/components/schemas/DHCPv6RawOption'
                        - $ref: '#/components/schemas/DHCPv6ServiceOption'
                        - $ref: '#/components/schemas/DHCPVendorOption'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Deployment Option Resources
      summary: Create a new deployment option
      description: Create a new DNS or DHCP deployment option.
      operationId: postRangeDeploymentOption
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                  DHCPv4RawOption: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                  DHCPv6ClientOption: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                  DHCPv6RawOption: '#/components/schemas/DHCPv6RawOptionPostRequestBody'
                  DHCPv6ServiceOption: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                  DHCPVendorOption: '#/components/schemas/DHCPVendorOptionPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPVendorOptionPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                  DHCPv4RawOption: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                  DHCPv6ClientOption: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                  DHCPv6RawOption: '#/components/schemas/DHCPv6RawOptionPostRequestBody'
                  DHCPv6ServiceOption: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                  DHCPVendorOption: '#/components/schemas/DHCPVendorOptionPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPVendorOptionPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment option
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPv4ClientOption'
                      - $ref: '#/components/schemas/DHCPv4RawOption'
                      - $ref: '#/components/schemas/DHCPv4ServiceOption'
                      - $ref: '#/components/schemas/DHCPv6ClientOption'
                      - $ref: '#/components/schemas/DHCPv6RawOption'
                      - $ref: '#/components/schemas/DHCPv6ServiceOption'
                      - $ref: '#/components/schemas/DHCPVendorOption'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPv4ClientOptionResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPv4ClientOption'
                  - $ref: '#/components/schemas/DHCPv4RawOption'
                  - $ref: '#/components/schemas/DHCPv4ServiceOption'
                  - $ref: '#/components/schemas/DHCPv6ClientOption'
                  - $ref: '#/components/schemas/DHCPv6RawOption'
                  - $ref: '#/components/schemas/DHCPv6ServiceOption'
                  - $ref: '#/components/schemas/DHCPVendorOption'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/serverGroups/{collectionId}/deploymentOptions:
    get:
      tags:
        - Deployment Option Resources
      summary: Retrieve a collection of deployment options
      description: Retrieve a collection of all deployment options configured for a resource.
      operationId: getServerGroupDeploymentOptions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployment options
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPv4ClientOptionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPv4ClientOption'
                            - $ref: '#/components/schemas/DHCPv4RawOption'
                            - $ref: '#/components/schemas/DHCPv4ServiceOption'
                            - $ref: '#/components/schemas/DHCPv6ClientOption'
                            - $ref: '#/components/schemas/DHCPv6RawOption'
                            - $ref: '#/components/schemas/DHCPv6ServiceOption'
                            - $ref: '#/components/schemas/DNSOption'
                            - $ref: '#/components/schemas/DNSRawOption'
                            - $ref: '#/components/schemas/StartOfAuthority'
                            - $ref: '#/components/schemas/DHCPVendorOption'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPv4ClientOptionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPv4ClientOption'
                        - $ref: '#/components/schemas/DHCPv4RawOption'
                        - $ref: '#/components/schemas/DHCPv4ServiceOption'
                        - $ref: '#/components/schemas/DHCPv6ClientOption'
                        - $ref: '#/components/schemas/DHCPv6RawOption'
                        - $ref: '#/components/schemas/DHCPv6ServiceOption'
                        - $ref: '#/components/schemas/DNSOption'
                        - $ref: '#/components/schemas/DNSRawOption'
                        - $ref: '#/components/schemas/StartOfAuthority'
                        - $ref: '#/components/schemas/DHCPVendorOption'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Deployment Option Resources
      summary: Create a new deployment option
      description: Create a new DNS or DHCP deployment option.
      operationId: postServerGroupDeploymentOption
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                  DHCPv4RawOption: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                  DHCPv6ClientOption: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                  DHCPv6RawOption: '#/components/schemas/DHCPv6RawOptionPostRequestBody'
                  DHCPv6ServiceOption: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                  DNSOption: '#/components/schemas/DNSOptionPostRequestBody'
                  DNSRawOption: '#/components/schemas/DNSRawOptionPostRequestBody'
                  StartOfAuthority: '#/components/schemas/StartOfAuthorityPostRequestBody'
                  DHCPVendorOption: '#/components/schemas/DHCPVendorOptionPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSRawOptionPostRequestBody'
                - $ref: '#/components/schemas/StartOfAuthorityPostRequestBody'
                - $ref: '#/components/schemas/DHCPVendorOptionPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                  DHCPv4RawOption: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                  DHCPv6ClientOption: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                  DHCPv6RawOption: '#/components/schemas/DHCPv6RawOptionPostRequestBody'
                  DHCPv6ServiceOption: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                  DNSOption: '#/components/schemas/DNSOptionPostRequestBody'
                  DNSRawOption: '#/components/schemas/DNSRawOptionPostRequestBody'
                  StartOfAuthority: '#/components/schemas/StartOfAuthorityPostRequestBody'
                  DHCPVendorOption: '#/components/schemas/DHCPVendorOptionPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSRawOptionPostRequestBody'
                - $ref: '#/components/schemas/StartOfAuthorityPostRequestBody'
                - $ref: '#/components/schemas/DHCPVendorOptionPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment option
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPv4ClientOption'
                      - $ref: '#/components/schemas/DHCPv4RawOption'
                      - $ref: '#/components/schemas/DHCPv4ServiceOption'
                      - $ref: '#/components/schemas/DHCPv6ClientOption'
                      - $ref: '#/components/schemas/DHCPv6RawOption'
                      - $ref: '#/components/schemas/DHCPv6ServiceOption'
                      - $ref: '#/components/schemas/DNSOption'
                      - $ref: '#/components/schemas/DNSRawOption'
                      - $ref: '#/components/schemas/StartOfAuthority'
                      - $ref: '#/components/schemas/DHCPVendorOption'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPv4ClientOptionResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPv4ClientOption'
                  - $ref: '#/components/schemas/DHCPv4RawOption'
                  - $ref: '#/components/schemas/DHCPv4ServiceOption'
                  - $ref: '#/components/schemas/DHCPv6ClientOption'
                  - $ref: '#/components/schemas/DHCPv6RawOption'
                  - $ref: '#/components/schemas/DHCPv6ServiceOption'
                  - $ref: '#/components/schemas/DNSOption'
                  - $ref: '#/components/schemas/DNSRawOption'
                  - $ref: '#/components/schemas/StartOfAuthority'
                  - $ref: '#/components/schemas/DHCPVendorOption'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/servers/{collectionId}/deploymentOptions:
    get:
      tags:
        - Deployment Option Resources
      summary: Retrieve a collection of deployment options
      description: Retrieve a collection of all deployment options configured for a resource.
      operationId: getServerDeploymentOptions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployment options
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPv4ClientOptionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPv4ClientOption'
                            - $ref: '#/components/schemas/DHCPv4RawOption'
                            - $ref: '#/components/schemas/DHCPv4ServiceOption'
                            - $ref: '#/components/schemas/DHCPv6ClientOption'
                            - $ref: '#/components/schemas/DHCPv6RawOption'
                            - $ref: '#/components/schemas/DHCPv6ServiceOption'
                            - $ref: '#/components/schemas/DNSOption'
                            - $ref: '#/components/schemas/DNSRawOption'
                            - $ref: '#/components/schemas/StartOfAuthority'
                            - $ref: '#/components/schemas/DHCPVendorOption'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPv4ClientOptionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPv4ClientOption'
                        - $ref: '#/components/schemas/DHCPv4RawOption'
                        - $ref: '#/components/schemas/DHCPv4ServiceOption'
                        - $ref: '#/components/schemas/DHCPv6ClientOption'
                        - $ref: '#/components/schemas/DHCPv6RawOption'
                        - $ref: '#/components/schemas/DHCPv6ServiceOption'
                        - $ref: '#/components/schemas/DNSOption'
                        - $ref: '#/components/schemas/DNSRawOption'
                        - $ref: '#/components/schemas/StartOfAuthority'
                        - $ref: '#/components/schemas/DHCPVendorOption'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Deployment Option Resources
      summary: Create a new deployment option
      description: Create a new DNS or DHCP deployment option.
      operationId: postServerDeploymentOption
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                  DHCPv4RawOption: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                  DHCPv6ClientOption: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                  DHCPv6RawOption: '#/components/schemas/DHCPv6RawOptionPostRequestBody'
                  DHCPv6ServiceOption: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                  DNSOption: '#/components/schemas/DNSOptionPostRequestBody'
                  DNSRawOption: '#/components/schemas/DNSRawOptionPostRequestBody'
                  StartOfAuthority: '#/components/schemas/StartOfAuthorityPostRequestBody'
                  DHCPVendorOption: '#/components/schemas/DHCPVendorOptionPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSRawOptionPostRequestBody'
                - $ref: '#/components/schemas/StartOfAuthorityPostRequestBody'
                - $ref: '#/components/schemas/DHCPVendorOptionPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                  DHCPv4RawOption: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                  DHCPv6ClientOption: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                  DHCPv6RawOption: '#/components/schemas/DHCPv6RawOptionPostRequestBody'
                  DHCPv6ServiceOption: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                  DNSOption: '#/components/schemas/DNSOptionPostRequestBody'
                  DNSRawOption: '#/components/schemas/DNSRawOptionPostRequestBody'
                  StartOfAuthority: '#/components/schemas/StartOfAuthorityPostRequestBody'
                  DHCPVendorOption: '#/components/schemas/DHCPVendorOptionPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSRawOptionPostRequestBody'
                - $ref: '#/components/schemas/StartOfAuthorityPostRequestBody'
                - $ref: '#/components/schemas/DHCPVendorOptionPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment option
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPv4ClientOption'
                      - $ref: '#/components/schemas/DHCPv4RawOption'
                      - $ref: '#/components/schemas/DHCPv4ServiceOption'
                      - $ref: '#/components/schemas/DHCPv6ClientOption'
                      - $ref: '#/components/schemas/DHCPv6RawOption'
                      - $ref: '#/components/schemas/DHCPv6ServiceOption'
                      - $ref: '#/components/schemas/DNSOption'
                      - $ref: '#/components/schemas/DNSRawOption'
                      - $ref: '#/components/schemas/StartOfAuthority'
                      - $ref: '#/components/schemas/DHCPVendorOption'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPv4ClientOptionResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPv4ClientOption'
                  - $ref: '#/components/schemas/DHCPv4RawOption'
                  - $ref: '#/components/schemas/DHCPv4ServiceOption'
                  - $ref: '#/components/schemas/DHCPv6ClientOption'
                  - $ref: '#/components/schemas/DHCPv6RawOption'
                  - $ref: '#/components/schemas/DHCPv6ServiceOption'
                  - $ref: '#/components/schemas/DNSOption'
                  - $ref: '#/components/schemas/DNSRawOption'
                  - $ref: '#/components/schemas/StartOfAuthority'
                  - $ref: '#/components/schemas/DHCPVendorOption'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/subclasses/{collectionId}/deploymentOptions:
    get:
      tags:
        - Deployment Option Resources
      summary: Retrieve a collection of deployment options
      description: Retrieve a collection of all deployment options configured for a resource.
      operationId: getSubclassDeploymentOptions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployment options
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPv4ClientOptionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPv4ClientOption'
                            - $ref: '#/components/schemas/DHCPv4RawOption'
                            - $ref: '#/components/schemas/DHCPv4ServiceOption'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPv4ClientOptionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPv4ClientOption'
                        - $ref: '#/components/schemas/DHCPv4RawOption'
                        - $ref: '#/components/schemas/DHCPv4ServiceOption'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Deployment Option Resources
      summary: Create a new deployment option
      description: Create a new DNS or DHCP deployment option.
      operationId: postSubclassDeploymentOption
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                  DHCPv4RawOption: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                  DHCPv4RawOption: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment option
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPv4ClientOption'
                      - $ref: '#/components/schemas/DHCPv4RawOption'
                      - $ref: '#/components/schemas/DHCPv4ServiceOption'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPv4ClientOptionResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPv4ClientOption'
                  - $ref: '#/components/schemas/DHCPv4RawOption'
                  - $ref: '#/components/schemas/DHCPv4ServiceOption'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/templates/{collectionId}/deploymentOptions:
    get:
      tags:
        - Deployment Option Resources
      summary: Retrieve a collection of deployment options
      description: Retrieve a collection of all deployment options configured for a resource.
      operationId: getTemplateDeploymentOptions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployment options
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPVendorOptionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPVendorOption'
                            - $ref: '#/components/schemas/DHCPv4ClientOption'
                            - $ref: '#/components/schemas/DHCPv4RawOption'
                            - $ref: '#/components/schemas/DHCPv4ServiceOption'
                            - $ref: '#/components/schemas/DNSOption'
                            - $ref: '#/components/schemas/DNSRawOption'
                            - $ref: '#/components/schemas/StartOfAuthority'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPVendorOptionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPVendorOption'
                        - $ref: '#/components/schemas/DHCPv4ClientOption'
                        - $ref: '#/components/schemas/DHCPv4RawOption'
                        - $ref: '#/components/schemas/DHCPv4ServiceOption'
                        - $ref: '#/components/schemas/DNSOption'
                        - $ref: '#/components/schemas/DNSRawOption'
                        - $ref: '#/components/schemas/StartOfAuthority'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Deployment Option Resources
      summary: Create a new deployment option
      description: Create a new DNS or DHCP deployment option.
      operationId: postTemplateDeploymentOption
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPVendorOption: '#/components/schemas/DHCPVendorOptionPostRequestBody'
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                  DHCPv4RawOption: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                  DNSOption: '#/components/schemas/DNSOptionPostRequestBody'
                  DNSRawOption: '#/components/schemas/DNSRawOptionPostRequestBody'
                  StartOfAuthority: '#/components/schemas/StartOfAuthorityPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPVendorOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSRawOptionPostRequestBody'
                - $ref: '#/components/schemas/StartOfAuthorityPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPVendorOption: '#/components/schemas/DHCPVendorOptionPostRequestBody'
                  DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                  DHCPv4RawOption: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                  DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                  DNSOption: '#/components/schemas/DNSOptionPostRequestBody'
                  DNSRawOption: '#/components/schemas/DNSRawOptionPostRequestBody'
                  StartOfAuthority: '#/components/schemas/StartOfAuthorityPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPVendorOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
                - $ref: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSRawOptionPostRequestBody'
                - $ref: '#/components/schemas/StartOfAuthorityPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment option
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPVendorOption'
                      - $ref: '#/components/schemas/DHCPv4ClientOption'
                      - $ref: '#/components/schemas/DHCPv4RawOption'
                      - $ref: '#/components/schemas/DHCPv4ServiceOption'
                      - $ref: '#/components/schemas/DNSOption'
                      - $ref: '#/components/schemas/DNSRawOption'
                      - $ref: '#/components/schemas/StartOfAuthority'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPVendorOptionResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPVendorOption'
                  - $ref: '#/components/schemas/DHCPv4ClientOption'
                  - $ref: '#/components/schemas/DHCPv4RawOption'
                  - $ref: '#/components/schemas/DHCPv4ServiceOption'
                  - $ref: '#/components/schemas/DNSOption'
                  - $ref: '#/components/schemas/DNSRawOption'
                  - $ref: '#/components/schemas/StartOfAuthority'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/views/{collectionId}/deploymentOptions:
    get:
      tags:
        - Deployment Option Resources
      summary: Retrieve a collection of deployment options
      description: Retrieve a collection of all deployment options configured for a resource.
      operationId: getViewDeploymentOptions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployment options
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DNSOptionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DNSOption'
                            - $ref: '#/components/schemas/DNSRawOption'
                            - $ref: '#/components/schemas/StartOfAuthority'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DNSOptionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DNSOption'
                        - $ref: '#/components/schemas/DNSRawOption'
                        - $ref: '#/components/schemas/StartOfAuthority'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Deployment Option Resources
      summary: Create a new deployment option
      description: Create a new DNS or DHCP deployment option.
      operationId: postViewDeploymentOption
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DNSOption: '#/components/schemas/DNSOptionPostRequestBody'
                  DNSRawOption: '#/components/schemas/DNSRawOptionPostRequestBody'
                  StartOfAuthority: '#/components/schemas/StartOfAuthorityPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DNSOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSRawOptionPostRequestBody'
                - $ref: '#/components/schemas/StartOfAuthorityPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DNSOption: '#/components/schemas/DNSOptionPostRequestBody'
                  DNSRawOption: '#/components/schemas/DNSRawOptionPostRequestBody'
                  StartOfAuthority: '#/components/schemas/StartOfAuthorityPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DNSOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSRawOptionPostRequestBody'
                - $ref: '#/components/schemas/StartOfAuthorityPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment option
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DNSOption'
                      - $ref: '#/components/schemas/DNSRawOption'
                      - $ref: '#/components/schemas/StartOfAuthority'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DNSOptionResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DNSOption'
                  - $ref: '#/components/schemas/DNSRawOption'
                  - $ref: '#/components/schemas/StartOfAuthority'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/zones/{collectionId}/deploymentOptions:
    get:
      tags:
        - Deployment Option Resources
      summary: Retrieve a collection of deployment options
      description: Retrieve a collection of all deployment options configured for a resource.
      operationId: getZoneDeploymentOptions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployment options
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DNSOptionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DNSOption'
                            - $ref: '#/components/schemas/DNSRawOption'
                            - $ref: '#/components/schemas/StartOfAuthority'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DNSOptionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DNSOption'
                        - $ref: '#/components/schemas/DNSRawOption'
                        - $ref: '#/components/schemas/StartOfAuthority'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Deployment Option Resources
      summary: Create a new deployment option
      description: Create a new DNS or DHCP deployment option.
      operationId: postZoneDeploymentOption
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DNSOption: '#/components/schemas/DNSOptionPostRequestBody'
                  DNSRawOption: '#/components/schemas/DNSRawOptionPostRequestBody'
                  StartOfAuthority: '#/components/schemas/StartOfAuthorityPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DNSOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSRawOptionPostRequestBody'
                - $ref: '#/components/schemas/StartOfAuthorityPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DNSOption: '#/components/schemas/DNSOptionPostRequestBody'
                  DNSRawOption: '#/components/schemas/DNSRawOptionPostRequestBody'
                  StartOfAuthority: '#/components/schemas/StartOfAuthorityPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DNSOptionPostRequestBody'
                - $ref: '#/components/schemas/DNSRawOptionPostRequestBody'
                - $ref: '#/components/schemas/StartOfAuthorityPostRequestBody'
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment option
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DNSOption'
                      - $ref: '#/components/schemas/DNSRawOption'
                      - $ref: '#/components/schemas/StartOfAuthority'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DNSOptionResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DNSOption'
                  - $ref: '#/components/schemas/DNSRawOption'
                  - $ref: '#/components/schemas/StartOfAuthority'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/deploymentRoles:
    get:
      tags:
        - Deployment Role Resources
      summary: Retrieve a collection of deployment roles
      description: Retrieve a collection of all DNS and DHCP deployment roles for all configurations.
      operationId: getDeploymentRoles
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of deployment roles
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPDeploymentRoleCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPDeploymentRole'
                            - $ref: '#/components/schemas/DNSDeploymentRole'
                            - $ref: '#/components/schemas/TFTPDeploymentRole'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPDeploymentRoleResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPDeploymentRole'
                        - $ref: '#/components/schemas/DNSDeploymentRole'
                        - $ref: '#/components/schemas/TFTPDeploymentRole'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/deploymentRoles/{id}:
    get:
      tags:
        - Deployment Role Resources
      summary: Retrieve a single deployment role
      description: Retrieve a single DNS or DHCP deployment role.
      operationId: getDeploymentRole
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A deployment role
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPDeploymentRole'
                      - $ref: '#/components/schemas/DNSDeploymentRole'
                      - $ref: '#/components/schemas/TFTPDeploymentRole'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPDeploymentRoleResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPDeploymentRole'
                  - $ref: '#/components/schemas/DNSDeploymentRole'
                  - $ref: '#/components/schemas/TFTPDeploymentRole'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Deployment Role Resources
      summary: Update a deployment role
      description: Update a deployment role.
      operationId: putDeploymentRole
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPDeploymentRole: '#/components/schemas/DHCPDeploymentRolePutRequestBody'
                  DNSDeploymentRole: '#/components/schemas/DNSDeploymentRolePutRequestBody'
                  TFTPDeploymentRole: '#/components/schemas/TFTPDeploymentRolePutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPDeploymentRolePutRequestBody'
                - $ref: '#/components/schemas/DNSDeploymentRolePutRequestBody'
                - $ref: '#/components/schemas/TFTPDeploymentRolePutRequestBody'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPDeploymentRole: '#/components/schemas/DHCPDeploymentRolePutRequestBody'
                  DNSDeploymentRole: '#/components/schemas/DNSDeploymentRolePutRequestBody'
                  TFTPDeploymentRole: '#/components/schemas/TFTPDeploymentRolePutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPDeploymentRolePutRequestBody'
                - $ref: '#/components/schemas/DNSDeploymentRolePutRequestBody'
                - $ref: '#/components/schemas/TFTPDeploymentRolePutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated deployment role
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPDeploymentRole'
                      - $ref: '#/components/schemas/DNSDeploymentRole'
                      - $ref: '#/components/schemas/TFTPDeploymentRole'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPDeploymentRoleResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPDeploymentRole'
                  - $ref: '#/components/schemas/DNSDeploymentRole'
                  - $ref: '#/components/schemas/TFTPDeploymentRole'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - Deployment Role Resources
      summary: Delete a deployment role
      description: Delete a deployment role.
      operationId: deleteDeploymentRole
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/blocks/{collectionId}/deploymentRoles:
    get:
      tags:
        - Deployment Role Resources
      summary: Retrieve a collection of deployment roles
      description: Retrieve a collection of all DNS and DHCP deployment roles configured for a resource.
      operationId: getBlockDeploymentRoles
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployment roles
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPDeploymentRoleCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPDeploymentRole'
                            - $ref: '#/components/schemas/DNSDeploymentRole'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPDeploymentRoleResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPDeploymentRole'
                        - $ref: '#/components/schemas/DNSDeploymentRole'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Deployment Role Resources
      summary: Create a new deployment role
      description: Assign a new deployment role to a resource.
      operationId: postBlockDeploymentRole
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPDeploymentRole: '#/components/schemas/DHCPDeploymentRolePostRequestBody'
                  DNSDeploymentRole: '#/components/schemas/DNSDeploymentRolePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPDeploymentRolePostRequestBody'
                - $ref: '#/components/schemas/DNSDeploymentRolePostRequestBody'
            examples:
              deploymentRoleExamplePrimaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExamplePrimaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer'
              deploymentRoleExampleDhcpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRole'
              deploymentRoleExampleDhcpDeploymentRoleInFailover:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRoleInFailover'
              deploymentRoleExampleTftpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleTftpDeploymentRole'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPDeploymentRole: '#/components/schemas/DHCPDeploymentRolePostRequestBody'
                  DNSDeploymentRole: '#/components/schemas/DNSDeploymentRolePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPDeploymentRolePostRequestBody'
                - $ref: '#/components/schemas/DNSDeploymentRolePostRequestBody'
            examples:
              deploymentRoleExamplePrimaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExamplePrimaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer'
              deploymentRoleExampleDhcpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRole'
              deploymentRoleExampleDhcpDeploymentRoleInFailover:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRoleInFailover'
              deploymentRoleExampleTftpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleTftpDeploymentRole'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment role
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPDeploymentRole'
                      - $ref: '#/components/schemas/DNSDeploymentRole'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPDeploymentRoleResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPDeploymentRole'
                  - $ref: '#/components/schemas/DNSDeploymentRole'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/clientClasses/{collectionId}/deploymentRoles:
    get:
      tags:
        - Deployment Role Resources
      summary: Retrieve a collection of deployment roles
      description: Retrieve a collection of all DNS and DHCP deployment roles configured for a resource.
      operationId: getClientClassDeploymentRoles
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployment roles
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPDeploymentRoleCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/DHCPDeploymentRole'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPDeploymentRoleResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/DHCPDeploymentRole'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Deployment Role Resources
      summary: Create a new deployment role
      description: Assign a new deployment role to a resource.
      operationId: postClientClassDeploymentRole
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DHCPDeploymentRolePostRequestBody'
            examples:
              deploymentRoleExamplePrimaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExamplePrimaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer'
              deploymentRoleExampleDhcpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRole'
              deploymentRoleExampleDhcpDeploymentRoleInFailover:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRoleInFailover'
              deploymentRoleExampleTftpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleTftpDeploymentRole'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/DHCPDeploymentRolePostRequestBody'
            examples:
              deploymentRoleExamplePrimaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExamplePrimaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer'
              deploymentRoleExampleDhcpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRole'
              deploymentRoleExampleDhcpDeploymentRoleInFailover:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRoleInFailover'
              deploymentRoleExampleTftpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleTftpDeploymentRole'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment role
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DHCPDeploymentRole'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPDeploymentRoleResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DHCPDeploymentRole'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/macPools/{collectionId}/deploymentRoles:
    get:
      tags:
        - Deployment Role Resources
      summary: Retrieve a collection of deployment roles
      description: Retrieve a collection of all DNS and DHCP deployment roles configured for a resource.
      operationId: getMacPoolDeploymentRoles
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployment roles
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPDeploymentRoleCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/DHCPDeploymentRole'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPDeploymentRoleResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/DHCPDeploymentRole'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Deployment Role Resources
      summary: Create a new deployment role
      description: Assign a new deployment role to a resource.
      operationId: postMacPoolDeploymentRole
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DHCPDeploymentRolePostRequestBody'
            examples:
              deploymentRoleExamplePrimaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExamplePrimaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer'
              deploymentRoleExampleDhcpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRole'
              deploymentRoleExampleDhcpDeploymentRoleInFailover:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRoleInFailover'
              deploymentRoleExampleTftpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleTftpDeploymentRole'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/DHCPDeploymentRolePostRequestBody'
            examples:
              deploymentRoleExamplePrimaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExamplePrimaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer'
              deploymentRoleExampleDhcpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRole'
              deploymentRoleExampleDhcpDeploymentRoleInFailover:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRoleInFailover'
              deploymentRoleExampleTftpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleTftpDeploymentRole'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment role
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DHCPDeploymentRole'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPDeploymentRoleResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DHCPDeploymentRole'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/networks/{collectionId}/deploymentRoles:
    get:
      tags:
        - Deployment Role Resources
      summary: Retrieve a collection of deployment roles
      description: Retrieve a collection of all DNS and DHCP deployment roles configured for a resource.
      operationId: getNetworkDeploymentRoles
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployment roles
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPDeploymentRoleCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPDeploymentRole'
                            - $ref: '#/components/schemas/DNSDeploymentRole'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPDeploymentRoleResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPDeploymentRole'
                        - $ref: '#/components/schemas/DNSDeploymentRole'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Deployment Role Resources
      summary: Create a new deployment role
      description: Assign a new deployment role to a resource.
      operationId: postNetworkDeploymentRole
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPDeploymentRole: '#/components/schemas/DHCPDeploymentRolePostRequestBody'
                  DNSDeploymentRole: '#/components/schemas/DNSDeploymentRolePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPDeploymentRolePostRequestBody'
                - $ref: '#/components/schemas/DNSDeploymentRolePostRequestBody'
            examples:
              deploymentRoleExamplePrimaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExamplePrimaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer'
              deploymentRoleExampleDhcpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRole'
              deploymentRoleExampleDhcpDeploymentRoleInFailover:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRoleInFailover'
              deploymentRoleExampleTftpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleTftpDeploymentRole'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPDeploymentRole: '#/components/schemas/DHCPDeploymentRolePostRequestBody'
                  DNSDeploymentRole: '#/components/schemas/DNSDeploymentRolePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPDeploymentRolePostRequestBody'
                - $ref: '#/components/schemas/DNSDeploymentRolePostRequestBody'
            examples:
              deploymentRoleExamplePrimaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExamplePrimaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer'
              deploymentRoleExampleDhcpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRole'
              deploymentRoleExampleDhcpDeploymentRoleInFailover:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRoleInFailover'
              deploymentRoleExampleTftpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleTftpDeploymentRole'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment role
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPDeploymentRole'
                      - $ref: '#/components/schemas/DNSDeploymentRole'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPDeploymentRoleResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPDeploymentRole'
                  - $ref: '#/components/schemas/DNSDeploymentRole'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/serverGroups/{collectionId}/deploymentRoles:
    get:
      tags:
        - Deployment Role Resources
      summary: Retrieve a collection of linked deployment roles
      description: Retrieve a collection of all DNS deployment roles linked to a server group.
      operationId: getServerGroupDeploymentRoles
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of linked deployment roles
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DNSDeploymentRoleCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/DNSDeploymentRole'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DNSDeploymentRoleResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/DNSDeploymentRole'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/servers/{collectionId}/deploymentRoles:
    get:
      tags:
        - Deployment Role Resources
      summary: Retrieve a collection of linked deployment roles
      description: Retrieve a collection of all DNS and DHCP deployment roles linked to a server.
      operationId: getServerDeploymentRoles
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of linked deployment roles
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPDeploymentRoleCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPDeploymentRole'
                            - $ref: '#/components/schemas/DNSDeploymentRole'
                            - $ref: '#/components/schemas/TFTPDeploymentRole'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPDeploymentRoleResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPDeploymentRole'
                        - $ref: '#/components/schemas/DNSDeploymentRole'
                        - $ref: '#/components/schemas/TFTPDeploymentRole'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/tftpGroups/{collectionId}/deploymentRoles:
    get:
      tags:
        - Deployment Role Resources
      summary: Retrieve a collection of deployment roles
      description: Retrieve a collection of all DNS and DHCP deployment roles configured for a resource.
      operationId: getTftpGroupDeploymentRoles
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployment roles
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/TFTPDeploymentRoleCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/TFTPDeploymentRole'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/TFTPDeploymentRoleResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/TFTPDeploymentRole'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Deployment Role Resources
      summary: Create a new deployment role
      description: Assign a new deployment role to a resource.
      operationId: postTftpGroupDeploymentRole
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TFTPDeploymentRolePostRequestBody'
            examples:
              deploymentRoleExamplePrimaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExamplePrimaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer'
              deploymentRoleExampleDhcpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRole'
              deploymentRoleExampleDhcpDeploymentRoleInFailover:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRoleInFailover'
              deploymentRoleExampleTftpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleTftpDeploymentRole'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/TFTPDeploymentRolePostRequestBody'
            examples:
              deploymentRoleExamplePrimaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExamplePrimaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer'
              deploymentRoleExampleDhcpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRole'
              deploymentRoleExampleDhcpDeploymentRoleInFailover:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRoleInFailover'
              deploymentRoleExampleTftpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleTftpDeploymentRole'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment role
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/TFTPDeploymentRole'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TFTPDeploymentRoleResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/TFTPDeploymentRole'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/views/{collectionId}/deploymentRoles:
    get:
      tags:
        - Deployment Role Resources
      summary: Retrieve a collection of deployment roles
      description: Retrieve a collection of all DNS and DHCP deployment roles configured for a resource.
      operationId: getViewDeploymentRoles
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployment roles
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DNSDeploymentRoleCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/DNSDeploymentRole'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DNSDeploymentRoleResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/DNSDeploymentRole'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Deployment Role Resources
      summary: Create a new deployment role
      description: Assign a new deployment role to a resource.
      operationId: postViewDeploymentRole
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DNSDeploymentRolePostRequestBody'
            examples:
              deploymentRoleExamplePrimaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExamplePrimaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer'
              deploymentRoleExampleDhcpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRole'
              deploymentRoleExampleDhcpDeploymentRoleInFailover:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRoleInFailover'
              deploymentRoleExampleTftpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleTftpDeploymentRole'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/DNSDeploymentRolePostRequestBody'
            examples:
              deploymentRoleExamplePrimaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExamplePrimaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer'
              deploymentRoleExampleDhcpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRole'
              deploymentRoleExampleDhcpDeploymentRoleInFailover:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRoleInFailover'
              deploymentRoleExampleTftpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleTftpDeploymentRole'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment role
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DNSDeploymentRole'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DNSDeploymentRoleResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DNSDeploymentRole'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/zones/{collectionId}/deploymentRoles:
    get:
      tags:
        - Deployment Role Resources
      summary: Retrieve a collection of deployment roles
      description: Retrieve a collection of all DNS and DHCP deployment roles configured for a resource.
      operationId: getZoneDeploymentRoles
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployment roles
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DNSDeploymentRoleCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/DNSDeploymentRole'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DNSDeploymentRoleResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/DNSDeploymentRole'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Deployment Role Resources
      summary: Create a new deployment role
      description: Assign a new deployment role to a resource.
      operationId: postZoneDeploymentRole
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DNSDeploymentRolePostRequestBody'
            examples:
              deploymentRoleExamplePrimaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExamplePrimaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer'
              deploymentRoleExampleDhcpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRole'
              deploymentRoleExampleDhcpDeploymentRoleInFailover:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRoleInFailover'
              deploymentRoleExampleTftpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleTftpDeploymentRole'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/DNSDeploymentRolePostRequestBody'
            examples:
              deploymentRoleExamplePrimaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExamplePrimaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer'
              deploymentRoleExampleDhcpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRole'
              deploymentRoleExampleDhcpDeploymentRoleInFailover:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRoleInFailover'
              deploymentRoleExampleTftpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleTftpDeploymentRole'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment role
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DNSDeploymentRole'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DNSDeploymentRoleResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DNSDeploymentRole'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/serverGroups/{collectionId}/deploymentRoles/{id}:
    get:
      tags:
        - Deployment Role Resources
      summary: Retrieve a single linked deployment role
      description: Retrieve a single DNS deployment role assigned to a server group.
      operationId: getServerGroupDeploymentRole
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A linked deployment role
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DNSDeploymentRole'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DNSDeploymentRoleResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DNSDeploymentRole'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/servers/{collectionId}/deploymentRoles/{id}:
    get:
      tags:
        - Deployment Role Resources
      summary: Retrieve a single linked deployment role
      description: Retrieve a single DNS or DHCP deployment role assigned to a server.
      operationId: getServerDeploymentRole
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A linked deployment role
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPDeploymentRole'
                      - $ref: '#/components/schemas/DNSDeploymentRole'
                      - $ref: '#/components/schemas/TFTPDeploymentRole'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPDeploymentRoleResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPDeploymentRole'
                  - $ref: '#/components/schemas/DNSDeploymentRole'
                  - $ref: '#/components/schemas/TFTPDeploymentRole'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/deployments:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of deployments
      description: Retrieve information about all deployments.
      operationId: getDeployments
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of deployments
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/FullDeploymentCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/FullDeployment'
                            - $ref: '#/components/schemas/DifferentialDeployment'
                            - $ref: '#/components/schemas/QuickDeployment'
                            - $ref: '#/components/schemas/SelectiveDeployment'
                            - $ref: '#/components/schemas/ValidationDeployment'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/FullDeploymentResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/FullDeployment'
                        - $ref: '#/components/schemas/DifferentialDeployment'
                        - $ref: '#/components/schemas/QuickDeployment'
                        - $ref: '#/components/schemas/SelectiveDeployment'
                        - $ref: '#/components/schemas/ValidationDeployment'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Server Resources
      summary: Create a new deployment
      description: Perform a new selective deployment of specific DNS entities. Selective deployments create a differential deployment task to deploy changes made to specific DNS entities, such as resource records to a managed DNS/DHCP Server.
      operationId: postDeployment
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-force-zone-retransfer
          in: header
          description: Indicates whether to force a re-transfer of DNS zone data to a secondary DNS server where the primary DNS role belongs to an individual primary DNS server or servers in a multi-primary server group.
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/SelectiveDeploymentPostRequestBody'
            examples:
              deploymentExampleSelectiveDeployment:
                $ref: '#/components/examples/deploymentExampleSelectiveDeployment'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/SelectiveDeploymentPostRequestBody'
            examples:
              deploymentExampleSelectiveDeployment:
                $ref: '#/components/examples/deploymentExampleSelectiveDeployment'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SelectiveDeployment'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/SelectiveDeploymentResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/SelectiveDeployment'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/deployments/{id}:
    get:
      tags:
        - Server Resources
      summary: Retrieve a single deployment
      description: Retrieve information about a specific deployment.
      operationId: getDeployment
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A deployment
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/FullDeployment'
                      - $ref: '#/components/schemas/DifferentialDeployment'
                      - $ref: '#/components/schemas/QuickDeployment'
                      - $ref: '#/components/schemas/SelectiveDeployment'
                      - $ref: '#/components/schemas/ValidationDeployment'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/FullDeploymentResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/FullDeployment'
                  - $ref: '#/components/schemas/DifferentialDeployment'
                  - $ref: '#/components/schemas/QuickDeployment'
                  - $ref: '#/components/schemas/SelectiveDeployment'
                  - $ref: '#/components/schemas/ValidationDeployment'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/deployments/{collectionId}/deployments:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of deployments to servers in a server group
      description: Retrieve a list of server deployments that have been performed via server group.
      operationId: getDeploymentDeployments
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployments
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/FullDeploymentCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/FullDeployment'
                            - $ref: '#/components/schemas/DifferentialDeployment'
                            - $ref: '#/components/schemas/QuickDeployment'
                            - $ref: '#/components/schemas/SelectiveDeployment'
                            - $ref: '#/components/schemas/ValidationDeployment'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/FullDeploymentResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/FullDeployment'
                        - $ref: '#/components/schemas/DifferentialDeployment'
                        - $ref: '#/components/schemas/QuickDeployment'
                        - $ref: '#/components/schemas/SelectiveDeployment'
                        - $ref: '#/components/schemas/ValidationDeployment'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/networks/{collectionId}/deployments:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of deployments
      description: Retrieve a list of deployments that have been performed to a specific server or DNS zone.
      operationId: getNetworkDeployments
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployments
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/QuickDeploymentCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/QuickDeployment'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/QuickDeploymentResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/QuickDeployment'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Server Resources
      summary: Create a new deployment
      description: Perform a full, differential, or quick deployment to a specific server or DNS zone, or perform a pre-deployment validation.
      operationId: postNetworkDeployment
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-force-zone-retransfer
          in: header
          description: Indicates whether to force a re-transfer of DNS zone data to a secondary DNS server where the primary DNS role belongs to an individual primary DNS server or servers in a multi-primary server group.
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/QuickDeploymentPostRequestBody'
            examples:
              deploymentExampleQuickDeployment:
                $ref: '#/components/examples/deploymentExampleQuickDeployment'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/QuickDeploymentPostRequestBody'
            examples:
              deploymentExampleQuickDeployment:
                $ref: '#/components/examples/deploymentExampleQuickDeployment'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/QuickDeployment'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/QuickDeploymentResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/QuickDeployment'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/serverGroups/{collectionId}/deployments:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of deployments
      description: Retrieve a list of deployments that have been performed to a specific server group.
      operationId: getServerGroupDeployments
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployments
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/FullDeploymentCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/FullDeployment'
                            - $ref: '#/components/schemas/DifferentialDeployment'
                            - $ref: '#/components/schemas/ValidationDeployment'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/FullDeploymentResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/FullDeployment'
                        - $ref: '#/components/schemas/DifferentialDeployment'
                        - $ref: '#/components/schemas/ValidationDeployment'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Server Resources
      summary: Create a new deployment
      description: Perform a full, differential, or quick deployment to a specific server group, or perform a pre-deployment validation.
      operationId: postServerGroupDeployment
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  FullDeployment: '#/components/schemas/FullDeploymentPostRequestBody'
                  DifferentialDeployment: '#/components/schemas/DifferentialDeploymentPostRequestBody'
                  ValidationDeployment: '#/components/schemas/ValidationDeploymentPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/FullDeploymentPostRequestBody'
                - $ref: '#/components/schemas/DifferentialDeploymentPostRequestBody'
                - $ref: '#/components/schemas/ValidationDeploymentPostRequestBody'
            examples:
              deploymentExampleFullDnsDeployment:
                $ref: '#/components/examples/deploymentExampleFullDnsDeployment'
              deploymentExampleDifferentialDnsDeployment:
                $ref: '#/components/examples/deploymentExampleDifferentialDnsDeployment'
              deploymentExampleFullDhcpv4Deployment:
                $ref: '#/components/examples/deploymentExampleFullDhcpv4Deployment'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  FullDeployment: '#/components/schemas/FullDeploymentPostRequestBody'
                  DifferentialDeployment: '#/components/schemas/DifferentialDeploymentPostRequestBody'
                  ValidationDeployment: '#/components/schemas/ValidationDeploymentPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/FullDeploymentPostRequestBody'
                - $ref: '#/components/schemas/DifferentialDeploymentPostRequestBody'
                - $ref: '#/components/schemas/ValidationDeploymentPostRequestBody'
            examples:
              deploymentExampleFullDnsDeployment:
                $ref: '#/components/examples/deploymentExampleFullDnsDeployment'
              deploymentExampleDifferentialDnsDeployment:
                $ref: '#/components/examples/deploymentExampleDifferentialDnsDeployment'
              deploymentExampleFullDhcpv4Deployment:
                $ref: '#/components/examples/deploymentExampleFullDhcpv4Deployment'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/FullDeployment'
                      - $ref: '#/components/schemas/DifferentialDeployment'
                      - $ref: '#/components/schemas/ValidationDeployment'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/FullDeploymentResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/FullDeployment'
                  - $ref: '#/components/schemas/DifferentialDeployment'
                  - $ref: '#/components/schemas/ValidationDeployment'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/servers/{collectionId}/deployments:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of deployments
      description: Retrieve a list of deployments that have been performed to a specific server or DNS zone.
      operationId: getServerDeployments
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployments
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/FullDeploymentCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/FullDeployment'
                            - $ref: '#/components/schemas/DifferentialDeployment'
                            - $ref: '#/components/schemas/ValidationDeployment'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/FullDeploymentResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/FullDeployment'
                        - $ref: '#/components/schemas/DifferentialDeployment'
                        - $ref: '#/components/schemas/ValidationDeployment'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Server Resources
      summary: Create a new deployment
      description: Perform a full, differential, or quick deployment to a specific server or DNS zone, or perform a pre-deployment validation.
      operationId: postServerDeployment
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-force-zone-retransfer
          in: header
          description: Indicates whether to force a re-transfer of DNS zone data to a secondary DNS server where the primary DNS role belongs to an individual primary DNS server or servers in a multi-primary server group.
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  FullDeployment: '#/components/schemas/FullDeploymentPostRequestBody'
                  DifferentialDeployment: '#/components/schemas/DifferentialDeploymentPostRequestBody'
                  ValidationDeployment: '#/components/schemas/ValidationDeploymentPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/FullDeploymentPostRequestBody'
                - $ref: '#/components/schemas/DifferentialDeploymentPostRequestBody'
                - $ref: '#/components/schemas/ValidationDeploymentPostRequestBody'
            examples:
              deploymentExampleFullDnsDeployment:
                $ref: '#/components/examples/deploymentExampleFullDnsDeployment'
              deploymentExampleDifferentialDnsDeployment:
                $ref: '#/components/examples/deploymentExampleDifferentialDnsDeployment'
              deploymentExampleFullDhcpv4Deployment:
                $ref: '#/components/examples/deploymentExampleFullDhcpv4Deployment'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  FullDeployment: '#/components/schemas/FullDeploymentPostRequestBody'
                  DifferentialDeployment: '#/components/schemas/DifferentialDeploymentPostRequestBody'
                  ValidationDeployment: '#/components/schemas/ValidationDeploymentPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/FullDeploymentPostRequestBody'
                - $ref: '#/components/schemas/DifferentialDeploymentPostRequestBody'
                - $ref: '#/components/schemas/ValidationDeploymentPostRequestBody'
            examples:
              deploymentExampleFullDnsDeployment:
                $ref: '#/components/examples/deploymentExampleFullDnsDeployment'
              deploymentExampleDifferentialDnsDeployment:
                $ref: '#/components/examples/deploymentExampleDifferentialDnsDeployment'
              deploymentExampleFullDhcpv4Deployment:
                $ref: '#/components/examples/deploymentExampleFullDhcpv4Deployment'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/FullDeployment'
                      - $ref: '#/components/schemas/DifferentialDeployment'
                      - $ref: '#/components/schemas/ValidationDeployment'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/FullDeploymentResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/FullDeployment'
                  - $ref: '#/components/schemas/DifferentialDeployment'
                  - $ref: '#/components/schemas/ValidationDeployment'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/zones/{collectionId}/deployments:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of deployments
      description: Retrieve a list of deployments that have been performed to a specific server or DNS zone.
      operationId: getZoneDeployments
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployments
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/QuickDeploymentCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/QuickDeployment'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/QuickDeploymentResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/QuickDeployment'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Server Resources
      summary: Create a new deployment
      description: Perform a full, differential, or quick deployment to a specific server or DNS zone, or perform a pre-deployment validation.
      operationId: postZoneDeployment
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-force-zone-retransfer
          in: header
          description: Indicates whether to force a re-transfer of DNS zone data to a secondary DNS server where the primary DNS role belongs to an individual primary DNS server or servers in a multi-primary server group.
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/QuickDeploymentPostRequestBody'
            examples:
              deploymentExampleQuickDeployment:
                $ref: '#/components/examples/deploymentExampleQuickDeployment'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/QuickDeploymentPostRequestBody'
            examples:
              deploymentExampleQuickDeployment:
                $ref: '#/components/examples/deploymentExampleQuickDeployment'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/QuickDeployment'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/QuickDeploymentResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/QuickDeployment'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/deviceSubtypes:
    get:
      tags:
        - Device Resources
      summary: Retrieve a collection of device subtypes
      description: Retrieve a collection of all device subtypes.
      operationId: getDeviceSubtypes
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of device subtypes
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DeviceSubtypeCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/DeviceSubtype'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DeviceSubtypeResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/DeviceSubtype'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/deviceSubtypes/{id}:
    get:
      tags:
        - Device Resources
      summary: Retrieve a single device subtype
      description: Retrieve information about a device subtype.
      operationId: getDeviceSubtype
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A device subtype
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DeviceSubtype'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DeviceSubtypeResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceSubtype'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Device Resources
      summary: Update a device subtype
      description: Update an existing device subtype.
      operationId: putDeviceSubtype
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceSubtypePutRequestBody'
            encoding: {}
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DeviceSubtypePutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated device subtype
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DeviceSubtype'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DeviceSubtypeResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceSubtype'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - Device Resources
      summary: Delete a device subtype
      description: Delete an existing device subtype.
      operationId: deleteDeviceSubtype
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/deviceTypes/{collectionId}/deviceSubtypes:
    get:
      tags:
        - Device Resources
      summary: Retrieve a collection of device subtypes
      description: Retrieve a collection of device subtypes within a device type.
      operationId: getDeviceTypeDeviceSubtypes
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of device subtypes
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DeviceSubtypeCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/DeviceSubtype'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DeviceSubtypeResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/DeviceSubtype'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Device Resources
      summary: Create a new device subtype
      description: Create a new device subtype. Device subtypes are specialized tags that identify hardware components in your network. Use Address Manager to help you organize and track network devices in your network environment, in particular multi-homed devices such as routers, or systems that use multiple virtual IP addresses. A device subtype is a more specific device, such as a particular model of router.
      operationId: postDeviceTypeDeviceSubtype
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceSubtypePostRequestBody'
            examples:
              deviceSubtypeExampleRequiredFields:
                $ref: '#/components/examples/deviceSubtypeExampleRequiredFields'
            encoding: {}
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DeviceSubtypePostRequestBody'
            examples:
              deviceSubtypeExampleRequiredFields:
                $ref: '#/components/examples/deviceSubtypeExampleRequiredFields'
            encoding: {}
      responses:
        "201":
          description: The newly created device subtype
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DeviceSubtype'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DeviceSubtypeResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceSubtype'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/deviceTypes:
    get:
      tags:
        - Device Resources
      summary: Retrieve a collection of device types
      description: Retrieve a collection of all device types.
      operationId: getDeviceTypes
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of device types
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DeviceTypeCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/DeviceType'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DeviceTypeResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/DeviceType'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Device Resources
      summary: Create a new device type
      description: Create a new device type. Device types are specialized tags that identify hardware components in your network. Use Address Manager to help you organize and track network devices in your network environment, in particular multi-homed devices such as routers, or systems that use multiple virtual IP addresses. A device type is a general category of device, such as a router or switch.
      operationId: postDeviceType
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceTypePostRequestBody'
            examples:
              deviceTypeExampleRequiredFields:
                $ref: '#/components/examples/deviceTypeExampleRequiredFields'
            encoding: {}
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DeviceTypePostRequestBody'
            examples:
              deviceTypeExampleRequiredFields:
                $ref: '#/components/examples/deviceTypeExampleRequiredFields'
            encoding: {}
      responses:
        "201":
          description: The newly created device type
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DeviceType'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DeviceTypeResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceType'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/deviceTypes/{id}:
    get:
      tags:
        - Device Resources
      summary: Retrieve a single device type
      description: Retrieve information about a device type.
      operationId: getDeviceType
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A device type
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DeviceType'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DeviceTypeResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceType'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Device Resources
      summary: Update a device type
      description: Update an existing device type.
      operationId: putDeviceType
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceTypePutRequestBody'
            encoding: {}
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DeviceTypePutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated device type
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DeviceType'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DeviceTypeResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceType'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - Device Resources
      summary: Delete a device type
      description: Delete an existing device type.
      operationId: deleteDeviceType
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/devices:
    get:
      tags:
        - Device Resources
      summary: Retrieve a collection of devices
      description: Retrieve a collection of devices.
      operationId: getDevices
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of devices
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DeviceCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Device'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DeviceResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Device'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/devices/{id}:
    get:
      tags:
        - Device Resources
      summary: Retrieve a single device
      description: Retrieve information about a device.
      operationId: getDevice
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A device
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Device'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DeviceResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Device Resources
      summary: Update a device
      description: Update an existing device.
      operationId: putDevice
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevicePutRequestBody'
            encoding: {}
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DevicePutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated device
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Device'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DeviceResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - Device Resources
      summary: Delete a device
      description: Delete an existing device.
      operationId: deleteDevice
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/configurations/{collectionId}/devices:
    get:
      tags:
        - Device Resources
      summary: Retrieve a collection of devices
      description: Retrieve a collection of devices within a configuration.
      operationId: getConfigurationDevices
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of devices
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DeviceCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Device'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DeviceResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Device'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Device Resources
      summary: Create a new device
      description: Create a new device. Devices can be assigned to one or more IP addresses. Using a specific type of tag similar to object tags, you can then group the devices into categories and subcategories, and track them in Address Manager.
      operationId: postConfigurationDevice
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevicePostRequestBody'
            examples:
              deviceExampleWithoutTypeOrSubtype:
                $ref: '#/components/examples/deviceExampleWithoutTypeOrSubtype'
              deviceExampleWithType:
                $ref: '#/components/examples/deviceExampleWithType'
              deviceExampleWithSubtype:
                $ref: '#/components/examples/deviceExampleWithSubtype'
              deviceExampleWithAddress:
                $ref: '#/components/examples/deviceExampleWithAddress'
            encoding: {}
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DevicePostRequestBody'
            examples:
              deviceExampleWithoutTypeOrSubtype:
                $ref: '#/components/examples/deviceExampleWithoutTypeOrSubtype'
              deviceExampleWithType:
                $ref: '#/components/examples/deviceExampleWithType'
              deviceExampleWithSubtype:
                $ref: '#/components/examples/deviceExampleWithSubtype'
              deviceExampleWithAddress:
                $ref: '#/components/examples/deviceExampleWithAddress'
            encoding: {}
      responses:
        "201":
          description: The newly created device
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Device'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DeviceResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/deviceSubtypes/{collectionId}/devices:
    get:
      tags:
        - Device Resources
      summary: Retrieve a collection of linked devices
      description: Retrieve a collection of all devices linked to a device subtype.
      operationId: getDeviceSubtypeDevices
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of linked devices
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DeviceCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Device'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DeviceResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Device'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/deviceTypes/{collectionId}/devices:
    get:
      tags:
        - Device Resources
      summary: Retrieve a collection of linked devices
      description: Retrieve a collection of all devices linked to a device type.
      operationId: getDeviceTypeDevices
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of linked devices
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DeviceCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Device'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DeviceResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Device'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/deviceSubtypes/{collectionId}/devices/{id}:
    get:
      tags:
        - Device Resources
      summary: Retrieve a single linked device
      description: Retrieve a single device linked to a device subtype.
      operationId: getDeviceSubtypeDevice
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A linked device
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Device'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DeviceResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/deviceTypes/{collectionId}/devices/{id}:
    get:
      tags:
        - Device Resources
      summary: Retrieve a single linked device
      description: Retrieve a single device linked to a device type.
      operationId: getDeviceTypeDevice
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A linked device
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Device'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DeviceResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/reconciliationPolicies/{collectionId}/discoveredDevices:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of discovered devices
      description: Retrieve a collection of resources representing devices discovered by a reconciliation policy.
      operationId: getReconciliationPolicyDiscoveredDevices
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of discovered devices
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DiscoveredARPEntryCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DiscoveredARPEntry'
                            - $ref: '#/components/schemas/DiscoveredHost'
                            - $ref: '#/components/schemas/DiscoveredInterface'
                            - $ref: '#/components/schemas/DiscoveredMACAddress'
                            - $ref: '#/components/schemas/DiscoveredNetwork'
                            - $ref: '#/components/schemas/DiscoveredRouter'
                            - $ref: '#/components/schemas/DiscoveredSwitch'
                            - $ref: '#/components/schemas/DiscoveredVLAN'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DiscoveredARPEntryResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DiscoveredARPEntry'
                        - $ref: '#/components/schemas/DiscoveredHost'
                        - $ref: '#/components/schemas/DiscoveredInterface'
                        - $ref: '#/components/schemas/DiscoveredMACAddress'
                        - $ref: '#/components/schemas/DiscoveredNetwork'
                        - $ref: '#/components/schemas/DiscoveredRouter'
                        - $ref: '#/components/schemas/DiscoveredSwitch'
                        - $ref: '#/components/schemas/DiscoveredVLAN'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/reconciliationPolicies/{collectionId}/discoveredDevices/{id}:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a single discovered device
      description: Retrieve a resource representing a device discovered by a reconciliation policy.
      operationId: getReconciliationPolicyDiscoveredDevice
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A discovered device
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DiscoveredARPEntry'
                      - $ref: '#/components/schemas/DiscoveredHost'
                      - $ref: '#/components/schemas/DiscoveredInterface'
                      - $ref: '#/components/schemas/DiscoveredMACAddress'
                      - $ref: '#/components/schemas/DiscoveredNetwork'
                      - $ref: '#/components/schemas/DiscoveredRouter'
                      - $ref: '#/components/schemas/DiscoveredSwitch'
                      - $ref: '#/components/schemas/DiscoveredVLAN'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DiscoveredARPEntryResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DiscoveredARPEntry'
                  - $ref: '#/components/schemas/DiscoveredHost'
                  - $ref: '#/components/schemas/DiscoveredInterface'
                  - $ref: '#/components/schemas/DiscoveredMACAddress'
                  - $ref: '#/components/schemas/DiscoveredNetwork'
                  - $ref: '#/components/schemas/DiscoveredRouter'
                  - $ref: '#/components/schemas/DiscoveredSwitch'
                  - $ref: '#/components/schemas/DiscoveredVLAN'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/events:
    get:
      tags:
        - Monitoring Resources
      summary: Retrieve a collection of events
      description: Retrieve information about all system events.
      operationId: getEvents
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of events
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/EventCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Event'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/EventResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Event'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/events/{id}:
    get:
      tags:
        - Monitoring Resources
      summary: Retrieve a single event
      description: Retrieve information about a single system event.
      operationId: getEvent
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: An event
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Event'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/EventResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/users/{collectionId}/favorites:
    get:
      tags:
        - User and Group Resources
      summary: Retrieve a collection of favorites
      description: Retrieve a collection of all favorites for a user.
      operationId: getUserFavorites
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of favorites
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ResourceCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Resource'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ResourceResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Resource'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - User and Group Resources
      summary: Create a new favorite
      description: Add a resource to the list of favorites for a user.
      operationId: postUserFavorite
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ResourcePostRequestBody'
            examples:
              favoriteExampleAddFavorite:
                $ref: '#/components/examples/favoriteExampleAddFavorite'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePostRequestBody'
            examples:
              favoriteExampleAddFavorite:
                $ref: '#/components/examples/favoriteExampleAddFavorite'
            encoding: {}
      responses:
        "201":
          description: The newly created favorite
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Resource'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ResourceResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/users/{collectionId}/favorites/{id}:
    delete:
      tags:
        - User and Group Resources
      summary: Delete a favorite
      description: Delete a favorite for a user.
      operationId: deleteUserFavorite
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/files:
    get:
      tags:
        - TFTP Resources
      summary: Retrieve a collection of files
      description: Retrieve a list of all TFTP files and folders.
      operationId: getFiles
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of files
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/TFTPFileCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/TFTPFile'
                            - $ref: '#/components/schemas/TFTPFolder'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/TFTPFileResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/TFTPFile'
                        - $ref: '#/components/schemas/TFTPFolder'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/files/{id}:
    get:
      tags:
        - TFTP Resources
      summary: Retrieve a single file
      description: Retrieve information about a specific TFTP file or folder.
      operationId: getFile
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A file
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/TFTPFile'
                      - $ref: '#/components/schemas/TFTPFolder'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TFTPFileResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TFTPFile'
                  - $ref: '#/components/schemas/TFTPFolder'
            text/html:
              schema:
                type: string
            application/octet-stream:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - TFTP Resources
      summary: Update a file
      description: Update an existing TFTP file or folder.
      operationId: putFile
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          multipart/form-data:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  TFTPFile: '#/components/schemas/TFTPFilePutRequestBody'
                  TFTPFolder: '#/components/schemas/TFTPFolderPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/TFTPFilePutRequestBody'
                - $ref: '#/components/schemas/TFTPFolderPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated file
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/TFTPFile'
                      - $ref: '#/components/schemas/TFTPFolder'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TFTPFileResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TFTPFile'
                  - $ref: '#/components/schemas/TFTPFolder'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - TFTP Resources
      summary: Delete a file
      description: Delete an existing TFTP file or folder.
      operationId: deleteFile
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/files/{collectionId}/files:
    get:
      tags:
        - TFTP Resources
      summary: Retrieve a collection of files
      description: Retrieve a list of all TFTP files or folders within a TFTP group.
      operationId: getFileFiles
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of files
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/TFTPFileCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/TFTPFile'
                            - $ref: '#/components/schemas/TFTPFolder'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/TFTPFileResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/TFTPFile'
                        - $ref: '#/components/schemas/TFTPFolder'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - TFTP Resources
      summary: Create a new file
      description: Create a new TFTP file or folder within a specific TFTP group. The TFTP service is designed so that an entire file structure can be created and deployed into a server as a service. Add a TFTP role to a TFTP group which contains a folder or directory structure and the files for the service. Individual TFTP files must be smaller than 100MB in size.
      operationId: postFileFile
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          multipart/form-data:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  TFTPFile: '#/components/schemas/TFTPFilePostRequestBody'
                  TFTPFolder: '#/components/schemas/TFTPFolderPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/TFTPFilePostRequestBody'
                - $ref: '#/components/schemas/TFTPFolderPostRequestBody'
            encoding:
              fileInfo:
                contentType: application/json
      responses:
        "201":
          description: The newly created file
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/TFTPFile'
                      - $ref: '#/components/schemas/TFTPFolder'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TFTPFileResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TFTPFile'
                  - $ref: '#/components/schemas/TFTPFolder'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/servers/{collectionId}/files:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of files
      description: Retrieve a collection of all files located in the /home/bluecat/preserved_scripts folder on a server.
      operationId: getServerFiles
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of files
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ServerFileCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ServerFile'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ServerFileResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/ServerFile'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/tftpGroups/{collectionId}/files:
    get:
      tags:
        - TFTP Resources
      summary: Retrieve a collection of files
      description: Retrieve a list of all TFTP files or folders within a TFTP group.
      operationId: getTftpGroupFiles
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of files
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/TFTPFileCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/TFTPFile'
                            - $ref: '#/components/schemas/TFTPFolder'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/TFTPFileResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/TFTPFile'
                        - $ref: '#/components/schemas/TFTPFolder'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - TFTP Resources
      summary: Create a new file
      description: Create a new TFTP file or folder within a specific TFTP group. The TFTP service is designed so that an entire file structure can be created and deployed into a server as a service. Add a TFTP role to a TFTP group which contains a folder or directory structure and the files for the service. Individual TFTP files must be smaller than 100MB in size.
      operationId: postTftpGroupFile
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          multipart/form-data:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  TFTPFile: '#/components/schemas/TFTPFilePostRequestBody'
                  TFTPFolder: '#/components/schemas/TFTPFolderPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/TFTPFilePostRequestBody'
                - $ref: '#/components/schemas/TFTPFolderPostRequestBody'
            encoding:
              fileInfo:
                contentType: application/json
      responses:
        "201":
          description: The newly created file
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/TFTPFile'
                      - $ref: '#/components/schemas/TFTPFolder'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TFTPFileResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TFTPFile'
                  - $ref: '#/components/schemas/TFTPFolder'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/servers/{collectionId}/files/{id}:
    get:
      tags:
        - Server Resources
      summary: Retrieve a single file
      description: Retrieve information about a file located in the /home/bluecat/preserved_scripts folder on a server.
      operationId: getServerFile
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A file
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ServerFile'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ServerFileResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ServerFile'
            text/html:
              schema:
                type: string
            application/octet-stream:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/groups:
    get:
      tags:
        - User and Group Resources
      summary: Retrieve a collection of groups
      description: Retrieve information about all configured user, LDAP, TACACS+, and SSO groups.
      operationId: getGroups
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of groups
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/UserGroupCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/UserGroup'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/UserGroupResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/UserGroup'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - User and Group Resources
      summary: Create a new group
      description: Create a new user, LDAP, TACACS+, or SSO group. If you are creating an LDAP group, you must first configure LDAP authenticators before you can create the LDAP group. If you are creating a TACACS+ group, you must first configure TACACS+ authenticators before you can create the TACACS+ group.
      operationId: postGroup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/UserGroupPostRequestBody'
            examples:
              groupExampleAddNonAdminGroup:
                $ref: '#/components/examples/groupExampleAddNonAdminGroup'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupPostRequestBody'
            examples:
              groupExampleAddNonAdminGroup:
                $ref: '#/components/examples/groupExampleAddNonAdminGroup'
            encoding: {}
      responses:
        "201":
          description: The newly created group
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserGroup'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/UserGroupResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/groups/{id}:
    get:
      tags:
        - User and Group Resources
      summary: Retrieve a single group
      description: Retrieve information about a specific User, LDAP, TACACS+, or SSO group based on the ID of the group. You can retrieve the ID of the group using the GET /v2/groups API.
      operationId: getGroup
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A group
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserGroup'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/UserGroupResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - User and Group Resources
      summary: Update a group
      description: Update an existing user, LDAP, TACACS+, or SSO group by passing in the collection ID of the group that you would like to update.
      operationId: putGroup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/UserGroupPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated group
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserGroup'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/UserGroupResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - User and Group Resources
      summary: Delete a group
      description: Delete a specific user, LDAP, TACACS+, or SSO group by passing in the collection ID of the group that you would like to delete.
      operationId: deleteGroup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/users/{collectionId}/groups:
    get:
      tags:
        - User and Group Resources
      summary: Retrieve a collection of linked groups
      description: Retrieve information about a user, LDAP, TACACS+, or SSO group that a specific user is assigned to based on the collection ID of the user.
      operationId: getUserGroups
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of linked groups
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/UserGroupCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/UserGroup'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/UserGroupResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/UserGroup'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - User and Group Resources
      summary: Link a group to a user
      description: Add a user to a user, LDAP, TACACS+, or SSO group by passing in the collection ID of the user that you would like to add to the group.
      operationId: postUserGroup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/UserGroupPostRequestBody'
            examples:
              groupExampleAddUserToGroup:
                $ref: '#/components/examples/groupExampleAddUserToGroup'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupPostRequestBody'
            examples:
              groupExampleAddUserToGroup:
                $ref: '#/components/examples/groupExampleAddUserToGroup'
            encoding: {}
      responses:
        "201":
          description: The linked group
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserGroup'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/UserGroupResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/users/{collectionId}/groups/{id}:
    get:
      tags:
        - User and Group Resources
      summary: Retrieve a single linked group
      description: Retrieve information about a specific user, LDAP, TACACS+, or SSO group by passing in the ID of a user and the ID of the group to which the user belongs.
      operationId: getUserGroup
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A linked group
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserGroup'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/UserGroupResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - User and Group Resources
      summary: Unlink a group from a user
      description: Remove a user from a user, LDAP, TACACS+, or SSO group by passing in the collection ID of the user and the collection ID of the group.
      operationId: deleteUserGroup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/imports:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve a collection of resource imports
      description: Retrieve all resources representing a resource import.
      operationId: getImports
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of resource imports
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4AddressImportCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4AddressImport'
                            - $ref: '#/components/schemas/IPv4BlockImport'
                            - $ref: '#/components/schemas/IPv4NetworkImport'
                            - $ref: '#/components/schemas/IPv6AddressImport'
                            - $ref: '#/components/schemas/IPv6BlockImport'
                            - $ref: '#/components/schemas/IPv6NetworkImport'
                            - $ref: '#/components/schemas/ResourceImport'
                            - $ref: '#/components/schemas/ResourceRecordImport'
                            - $ref: '#/components/schemas/ResponsePolicyItemImport'
                            - $ref: '#/components/schemas/ZoneImport'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4AddressImportResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4AddressImport'
                        - $ref: '#/components/schemas/IPv4BlockImport'
                        - $ref: '#/components/schemas/IPv4NetworkImport'
                        - $ref: '#/components/schemas/IPv6AddressImport'
                        - $ref: '#/components/schemas/IPv6BlockImport'
                        - $ref: '#/components/schemas/IPv6NetworkImport'
                        - $ref: '#/components/schemas/ResourceImport'
                        - $ref: '#/components/schemas/ResourceRecordImport'
                        - $ref: '#/components/schemas/ResponsePolicyItemImport'
                        - $ref: '#/components/schemas/ZoneImport'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Administrator Resources
      summary: Create a new resource import
      description: Upload data into Address Manager to import resources.
      operationId: postImport
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourceImportPostRequestBody'
            encoding:
              fileInfo:
                contentType: application/json
      responses:
        "201":
          description: The newly created resource import
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResourceImport'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ResourceImportResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceImport'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/imports/{id}:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve a single resource import
      description: Retrieve a resource representing a resource import.
      operationId: getImport
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A resource import
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4AddressImport'
                      - $ref: '#/components/schemas/IPv4BlockImport'
                      - $ref: '#/components/schemas/IPv4NetworkImport'
                      - $ref: '#/components/schemas/IPv6AddressImport'
                      - $ref: '#/components/schemas/IPv6BlockImport'
                      - $ref: '#/components/schemas/IPv6NetworkImport'
                      - $ref: '#/components/schemas/ResourceImport'
                      - $ref: '#/components/schemas/ResourceRecordImport'
                      - $ref: '#/components/schemas/ResponsePolicyItemImport'
                      - $ref: '#/components/schemas/ZoneImport'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4AddressImportResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4AddressImport'
                  - $ref: '#/components/schemas/IPv4BlockImport'
                  - $ref: '#/components/schemas/IPv4NetworkImport'
                  - $ref: '#/components/schemas/IPv6AddressImport'
                  - $ref: '#/components/schemas/IPv6BlockImport'
                  - $ref: '#/components/schemas/IPv6NetworkImport'
                  - $ref: '#/components/schemas/ResourceImport'
                  - $ref: '#/components/schemas/ResourceRecordImport'
                  - $ref: '#/components/schemas/ResponsePolicyItemImport'
                  - $ref: '#/components/schemas/ZoneImport'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - Administrator Resources
        - IPv4 and IPv6 Resources
        - Resource Record Resources
        - View and Zone Resources
      summary: Delete an import resource
      description: Delete a resource representing a resource import.
      operationId: deleteImport
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    patch:
      tags:
        - Administrator Resources
      summary: Partially update a import resource
      description: Import resources into Address Manager.
      operationId: patchImport
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: The initial state for the import
                  enum:
                    - PENDING
                    - QUEUED
            examples:
              importResourceExampleQueueImport:
                $ref: '#/components/examples/importResourceExampleQueueImport'
            encoding: {}
      responses:
        "200":
          description: The updated resource import
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResourceImport'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ResourceImportResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceImport'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/blocks/{collectionId}/imports:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of block and network imports
      description: Retrieve all IPv4/IPv6 blocks and networks representing a resource import.
      operationId: getBlockImports
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: The collection of block and network imports
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4BlockImportCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4BlockImport'
                            - $ref: '#/components/schemas/IPv4NetworkImport'
                            - $ref: '#/components/schemas/IPv6BlockImport'
                            - $ref: '#/components/schemas/IPv6NetworkImport'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4BlockImportResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4BlockImport'
                        - $ref: '#/components/schemas/IPv4NetworkImport'
                        - $ref: '#/components/schemas/IPv6BlockImport'
                        - $ref: '#/components/schemas/IPv6NetworkImport'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new block or network import
      description: Create a resource representing an IPv4/IPv6 block or network import.
      operationId: postBlockImport
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-no-gateway
          in: header
          description: Indicates whether the IPv4 network should not contain a gateway address.
          schema:
            type: boolean
            default: false
        - name: x-bcn-traversal-method
          in: header
          description: |
            The algorithm used to determine the starting address of the block or network when only a size was provided for the `range` value. If no header value is supplied, `NO_TRAVERSAL` will be used by default.
            - `NO_TRAVERSAL`: Attempt to find the available space directly under the specified parent block.
            - `DEPTH_FIRST`: Attempt to find the available space by recursively searching the parent block's children.
          schema:
            type: string
            default: NO_TRAVERSAL
            enum:
              - NO_TRAVERSAL
              - DEPTH_FIRST
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          text/csv:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4BlockImport: '#/components/schemas/IPv4BlockImportPostRequestBody'
                  IPv4NetworkImport: '#/components/schemas/IPv4NetworkImportPostRequestBody'
                  IPv6BlockImport: '#/components/schemas/IPv6BlockImportPostRequestBody'
                  IPv6NetworkImport: '#/components/schemas/IPv6NetworkImportPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4BlockImportPostRequestBody'
                - $ref: '#/components/schemas/IPv4NetworkImportPostRequestBody'
                - $ref: '#/components/schemas/IPv6BlockImportPostRequestBody'
                - $ref: '#/components/schemas/IPv6NetworkImportPostRequestBody'
            examples:
              importResourceExampleNetworkResourceImport:
                $ref: '#/components/examples/importResourceExampleNetworkResourceImport'
            encoding: {}
      responses:
        "201":
          description: The newly created block or network import
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4BlockImport'
                      - $ref: '#/components/schemas/IPv4NetworkImport'
                      - $ref: '#/components/schemas/IPv6BlockImport'
                      - $ref: '#/components/schemas/IPv6NetworkImport'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4BlockImportResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4BlockImport'
                  - $ref: '#/components/schemas/IPv4NetworkImport'
                  - $ref: '#/components/schemas/IPv6BlockImport'
                  - $ref: '#/components/schemas/IPv6NetworkImport'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/networks/{collectionId}/imports:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of address imports
      description: Retrieve all IPv4/IPv6 addresses representing a resource import.
      operationId: getNetworkImports
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: The collection of address imports
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4AddressImportCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4AddressImport'
                            - $ref: '#/components/schemas/IPv6AddressImport'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4AddressImportResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4AddressImport'
                        - $ref: '#/components/schemas/IPv6AddressImport'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new address import
      description: Create a resource representing an IPv4/IPv6 address import.
      operationId: postNetworkImport
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-create-reverse-record
          in: header
          description: Indicates whether a reverse record should be created for the host.
          schema:
            type: boolean
            default: true
        - name: x-bcn-excluded-addresses
          in: header
          description: A comma-separated list of IPv4 addresses and/or IPv4 address ranges to skip when searching for the next available address.
          schema:
            type: string
            default: ""
        - name: x-bcn-override-naming-policy
          in: header
          description: Indicates whether to override the naming policy for the view or zone when creating the host record.
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          text/csv:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4AddressImport: '#/components/schemas/IPv4AddressImportPostRequestBody'
                  IPv6AddressImport: '#/components/schemas/IPv6AddressImportPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4AddressImportPostRequestBody'
                - $ref: '#/components/schemas/IPv6AddressImportPostRequestBody'
            examples:
              importResourceExampleAddressResourceImport:
                $ref: '#/components/examples/importResourceExampleAddressResourceImport'
            encoding: {}
      responses:
        "201":
          description: The newly created address import
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4AddressImport'
                      - $ref: '#/components/schemas/IPv6AddressImport'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4AddressImportResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4AddressImport'
                  - $ref: '#/components/schemas/IPv6AddressImport'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/responsePolicies/{collectionId}/imports:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a collection of response policy item imports
      description: Retrieve all response policy items representing a resource import.
      operationId: getResponsePolicyImports
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: The collection of response policy item imports
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ResponsePolicyItemImportCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ResponsePolicyItemImport'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ResponsePolicyItemImportResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/ResponsePolicyItemImport'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - View and Zone Resources
      summary: Create a new response policy item import
      description: Create a resource representing a response policy item import.
      operationId: postResponsePolicyImport
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResponsePolicyItemImportPostRequestBody'
            encoding:
              fileInfo:
                contentType: application/json
      responses:
        "201":
          description: The newly created response policy item import
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponsePolicyItemImport'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ResponsePolicyItemImportResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePolicyItemImport'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/views/{collectionId}/imports:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a collection of zone imports
      description: Retrieve all zones representing a resource import.
      operationId: getViewImports
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: The collection of zone imports
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ZoneImportCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ZoneImport'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ZoneImportResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/ZoneImport'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - View and Zone Resources
      summary: Create a new zone import
      description: Create a resource representing a zone import.
      operationId: postViewImport
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-allow-multi-label-zone-names
          in: header
          description: Indicates whether a dotted zone name will be allowed when specifying a zone name using the name field. Also indicates whether a dotted zone name will be used when specifying an absolute name using the absoluteName field, instead of creating non-existent subzones.
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          text/csv:
            schema:
              $ref: '#/components/schemas/ZoneImportPostRequestBody'
            examples:
              importResourceExampleZoneResourceImport:
                $ref: '#/components/examples/importResourceExampleZoneResourceImport'
            encoding: {}
      responses:
        "201":
          description: The newly created zone import
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ZoneImport'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ZoneImportResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneImport'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/zones/{collectionId}/imports:
    get:
      tags:
        - Resource Record Resources
      summary: Retrieve a collection of resource record imports
      description: Retrieve all resource records representing a resource import.
      operationId: getZoneImports
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: The collection of resource record imports
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ResourceRecordImportCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ResourceRecordImport'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ResourceRecordImportResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/ResourceRecordImport'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Resource Record Resources
      summary: Create a new resource record import
      description: Create a resource representing a resource record import.
      operationId: postZoneImport
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-allow-address-overlap
          in: header
          description: Indicates whether IP address overlap detection will be overridden for auto-created networks.
          schema:
            type: boolean
            default: false
        - name: x-bcn-auto-create-network
          in: header
          description: Indicates whether a network will be automatically created if a network containing the IP address or addresses specified in the resource record does not already exist.
          schema:
            type: boolean
            default: false
        - name: x-bcn-override-naming-policy
          in: header
          description: Indicates whether to override the naming policy for the view or zone when creating the record.
          schema:
            type: boolean
            default: false
        - name: x-bcn-same-as-zone
          in: header
          description: Indicates whether the zone name will be used for the resource record name.
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          text/csv:
            schema:
              $ref: '#/components/schemas/ResourceRecordImportPostRequestBody'
            examples:
              importResourceExampleResourceRecordResourceImport:
                $ref: '#/components/examples/importResourceExampleResourceRecordResourceImport'
            encoding: {}
      responses:
        "201":
          description: The newly created resource record import
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResourceRecordImport'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ResourceRecordImportResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceRecordImport'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/blocks/{collectionId}/imports/{id}:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a single block or network import
      description: Retrieve an IPv4/IPv6 block or network representing a resource import.
      operationId: getBlockImport
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A block or network import
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4BlockImport'
                      - $ref: '#/components/schemas/IPv4NetworkImport'
                      - $ref: '#/components/schemas/IPv6BlockImport'
                      - $ref: '#/components/schemas/IPv6NetworkImport'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4BlockImportResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4BlockImport'
                  - $ref: '#/components/schemas/IPv4NetworkImport'
                  - $ref: '#/components/schemas/IPv6BlockImport'
                  - $ref: '#/components/schemas/IPv6NetworkImport'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/networks/{collectionId}/imports/{id}:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a single address import
      description: Retrieve an IPv4/IPv6 address representing a resource import.
      operationId: getNetworkImport
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: An address import
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4AddressImport'
                      - $ref: '#/components/schemas/IPv6AddressImport'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4AddressImportResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4AddressImport'
                  - $ref: '#/components/schemas/IPv6AddressImport'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/responsePolicies/{collectionId}/imports/{id}:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a single response policy item import
      description: Retrieve a response policy item representing a resource import.
      operationId: getResponsePolicyImport
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A response policy item import
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponsePolicyItemImport'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ResponsePolicyItemImportResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePolicyItemImport'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/views/{collectionId}/imports/{id}:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a single zone import
      description: Retrieve a zone representing a resource import.
      operationId: getViewImport
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A zone import
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ZoneImport'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ZoneImportResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneImport'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/zones/{collectionId}/imports/{id}:
    get:
      tags:
        - Resource Record Resources
      summary: Retrieve a single resource record import
      description: Retrieve a resource record representing a resource import.
      operationId: getZoneImport
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A resource record import
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResourceRecordImport'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ResourceRecordImportResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceRecordImport'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/interfaces:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of interfaces
      description: Retrieve a collection of all configured server interfaces.
      operationId: getInterfaces
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of interfaces
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/NetworkInterfaceCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/NetworkInterface'
                            - $ref: '#/components/schemas/PublishedInterface'
                            - $ref: '#/components/schemas/ServerGroupInterface'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/NetworkInterfaceResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/NetworkInterface'
                        - $ref: '#/components/schemas/PublishedInterface'
                        - $ref: '#/components/schemas/ServerGroupInterface'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/interfaces/{id}:
    get:
      tags:
        - Server Resources
      summary: Retrieve a single interface
      description: Retrieve information about a configured server interface.
      operationId: getInterface
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: An interface
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/NetworkInterface'
                      - $ref: '#/components/schemas/PublishedInterface'
                      - $ref: '#/components/schemas/ServerGroupInterface'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/NetworkInterfaceResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/NetworkInterface'
                  - $ref: '#/components/schemas/PublishedInterface'
                  - $ref: '#/components/schemas/ServerGroupInterface'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Server Resources
      summary: Update an interface
      description: Update an existing server interface.
      operationId: putInterface
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/PublishedInterfacePutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/PublishedInterfacePutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated interface
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PublishedInterface'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/PublishedInterfaceResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/PublishedInterface'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - Server Resources
      summary: Delete an interface
      description: Delete an existing server interface.
      operationId: deleteInterface
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/deploymentRoles/{collectionId}/interfaces:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of interfaces
      description: Retrieve a collection of all server interfaces assigned to a deployment role.
      operationId: getDeploymentRoleInterfaces
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of interfaces
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/NetworkInterfaceCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/NetworkInterface'
                            - $ref: '#/components/schemas/PublishedInterface'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/NetworkInterfaceResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/NetworkInterface'
                        - $ref: '#/components/schemas/PublishedInterface'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/serverGroups/{collectionId}/interfaces:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of interfaces
      description: Retrieve a collection of all configured server group interfaces of a server group.
      operationId: getServerGroupInterfaces
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of interfaces
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ServerGroupInterfaceCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ServerGroupInterface'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ServerGroupInterfaceResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/ServerGroupInterface'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/servers/{collectionId}/interfaces:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of interfaces
      description: Retrieve a collection of all configured server interfaces of a server.
      operationId: getServerInterfaces
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of interfaces
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/NetworkInterfaceCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/NetworkInterface'
                            - $ref: '#/components/schemas/PublishedInterface'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/NetworkInterfaceResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/NetworkInterface'
                        - $ref: '#/components/schemas/PublishedInterface'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Server Resources
      summary: Create a new interface
      description: Add a new published server interface to a server.
      operationId: postServerInterface
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/PublishedInterfacePostRequestBody'
            examples:
              interfaceExamplePublishedInterface:
                $ref: '#/components/examples/interfaceExamplePublishedInterface'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/PublishedInterfacePostRequestBody'
            examples:
              interfaceExamplePublishedInterface:
                $ref: '#/components/examples/interfaceExamplePublishedInterface'
            encoding: {}
      responses:
        "201":
          description: The newly created interface
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PublishedInterface'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/PublishedInterfaceResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/PublishedInterface'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/ipGroups:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of IP groups
      description: Retrieve a collection of all IP groups for all networks and configurations.
      operationId: getIpGroups
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of IP groups
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4GroupCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/IPv4Group'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4GroupResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/IPv4Group'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/ipGroups/{id}:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a single IP group
      description: Retrieve a single IP group.
      operationId: getIpGroup
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: An IP group
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/IPv4Group'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4GroupResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/IPv4Group'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - IPv4 and IPv6 Resources
      summary: Update an IP group
      description: Update an IP group.
      operationId: putIpGroup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/IPv4GroupPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/IPv4GroupPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated IP group
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/IPv4Group'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4GroupResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/IPv4Group'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - IPv4 and IPv6 Resources
      summary: Delete an IP group
      description: Delete an IP group.
      operationId: deleteIpGroup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/networks/{collectionId}/ipGroups:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of IP groups
      description: Retrieve a collection of all IP groups for a network.
      operationId: getNetworkIpGroups
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of IP groups
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4GroupCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/IPv4Group'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4GroupResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/IPv4Group'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new IP group
      description: Create a new IP group for a network.
      operationId: postNetworkIpGroup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/IPv4GroupPostRequestBody'
            examples:
              ipGroupExampleIpv4StartAndEndAddress:
                $ref: '#/components/examples/ipGroupExampleIpv4StartAndEndAddress'
              ipGroupExampleIpv4OffsetAndSize:
                $ref: '#/components/examples/ipGroupExampleIpv4OffsetAndSize'
              ipGroupExampleIpv4OffsetAndPercentage:
                $ref: '#/components/examples/ipGroupExampleIpv4OffsetAndPercentage'
              ipGroupExampleIpv4NegativeOffsetAndSize:
                $ref: '#/components/examples/ipGroupExampleIpv4NegativeOffsetAndSize'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/IPv4GroupPostRequestBody'
            examples:
              ipGroupExampleIpv4StartAndEndAddress:
                $ref: '#/components/examples/ipGroupExampleIpv4StartAndEndAddress'
              ipGroupExampleIpv4OffsetAndSize:
                $ref: '#/components/examples/ipGroupExampleIpv4OffsetAndSize'
              ipGroupExampleIpv4OffsetAndPercentage:
                $ref: '#/components/examples/ipGroupExampleIpv4OffsetAndPercentage'
              ipGroupExampleIpv4NegativeOffsetAndSize:
                $ref: '#/components/examples/ipGroupExampleIpv4NegativeOffsetAndSize'
            encoding: {}
      responses:
        "201":
          description: The newly created IP group
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/IPv4Group'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4GroupResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/IPv4Group'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/keyDistributionCenters:
    get:
      tags:
        - Authenticator Resources
      summary: Retrieve a collection of key distribution centers
      description: Retrieve a collection of all key distribution centers. Key distribution centers (KDCs) are a network service that supplies Kerberos tickets and temporary session keys to users and computers within an Active Directory domain.
      operationId: getKeyDistributionCenters
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of key distribution centers
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/KeyDistributionCenterCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/KeyDistributionCenter'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/KeyDistributionCenterResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/KeyDistributionCenter'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/keyDistributionCenters/{id}:
    get:
      tags:
        - Authenticator Resources
      summary: Retrieve a single key distribution center
      description: Retrieve information about a key distribution center. Key distribution centers (KDCs) are a network service that supplies Kerberos tickets and temporary session keys to users and computers within an Active Directory domain.
      operationId: getKeyDistributionCenter
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A key distribution center
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/KeyDistributionCenter'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/KeyDistributionCenterResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/KeyDistributionCenter'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Authenticator Resources
      summary: Update a key distribution center
      description: Update an existing key distribution center.
      operationId: putKeyDistributionCenter
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/KeyDistributionCenterPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/KeyDistributionCenterPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated key distribution center
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/KeyDistributionCenter'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/KeyDistributionCenterResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/KeyDistributionCenter'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - Authenticator Resources
      summary: Delete a key distribution center
      description: Delete an existing key distribution center.
      operationId: deleteKeyDistributionCenter
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/realms/{collectionId}/keyDistributionCenters:
    get:
      tags:
        - Authenticator Resources
      summary: Retrieve a collection of key distribution centers
      description: Retrieve a collection of all key distribution centers within a Kerberos realm.
      operationId: getRealmKeyDistributionCenters
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of key distribution centers
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/KeyDistributionCenterCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/KeyDistributionCenter'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/KeyDistributionCenterResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/KeyDistributionCenter'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Authenticator Resources
      summary: Create a new key distribution center
      description: Create a new key distribution center within a Kerberos realm.
      operationId: postRealmKeyDistributionCenter
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/KeyDistributionCenterPostRequestBody'
            examples:
              keyDistributionCenterExampleRequiredFields:
                $ref: '#/components/examples/keyDistributionCenterExampleRequiredFields'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/KeyDistributionCenterPostRequestBody'
            examples:
              keyDistributionCenterExampleRequiredFields:
                $ref: '#/components/examples/keyDistributionCenterExampleRequiredFields'
            encoding: {}
      responses:
        "201":
          description: The newly created key distribution center
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/KeyDistributionCenter'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/KeyDistributionCenterResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/KeyDistributionCenter'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/leases:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of leases
      description: Retrieve all DHCPv4 or DHCPv6 leases for all addresses. Type of lease (DHCPv4Lease or DHCPv6Lease) is specified in the filter query parameter (i.e. v2/leases?filter=type:"DHCPv4Lease")
      operationId: getLeases
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of leases
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPv4LeaseCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPv4Lease'
                            - $ref: '#/components/schemas/DHCPv6Lease'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPv4LeaseResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPv4Lease'
                        - $ref: '#/components/schemas/DHCPv6Lease'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/leases/{id}:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a single lease
      description: Retrieve a single DHCPv4 or DHCPv6 lease. Type of lease (DHCPv4Lease or DHCPv6Lease) is specified in the filter query parameter (i.e. v2/leases?filter=type:"DHCPv4Lease")
      operationId: getLease
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A lease
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPv4Lease'
                      - $ref: '#/components/schemas/DHCPv6Lease'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPv4LeaseResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPv4Lease'
                  - $ref: '#/components/schemas/DHCPv6Lease'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/addresses/{collectionId}/leases:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of leases
      description: Retrieve a collection of all leases for an address, network or block.
      operationId: getAddressLeases
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of leases
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPv4LeaseCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPv4Lease'
                            - $ref: '#/components/schemas/DHCPv6Lease'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPv4LeaseResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPv4Lease'
                        - $ref: '#/components/schemas/DHCPv6Lease'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/blocks/{collectionId}/leases:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of leases
      description: Retrieve a collection of all leases for an address, network or block.
      operationId: getBlockLeases
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of leases
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPv4LeaseCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPv4Lease'
                            - $ref: '#/components/schemas/DHCPv6Lease'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPv4LeaseResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPv4Lease'
                        - $ref: '#/components/schemas/DHCPv6Lease'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/networks/{collectionId}/leases:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of leases
      description: Retrieve a collection of all leases for an address, network or block.
      operationId: getNetworkLeases
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of leases
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPv4LeaseCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPv4Lease'
                            - $ref: '#/components/schemas/DHCPv6Lease'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPv4LeaseResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPv4Lease'
                        - $ref: '#/components/schemas/DHCPv6Lease'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/ranges/{collectionId}/leases:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of leases
      description: Retrieve a collection of all leases for an address, network or block.
      operationId: getRangeLeases
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of leases
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPv4LeaseCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPv4Lease'
                            - $ref: '#/components/schemas/DHCPv6Lease'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPv4LeaseResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPv4Lease'
                        - $ref: '#/components/schemas/DHCPv6Lease'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/userDefinedLinkDefinitions/{collectionId}/linkedResources:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve a collection of linked resources
      description: Retrieve a collection of all linked resources within a user-defined link definition.
      operationId: getUserDefinedLinkDefinitionLinkedResources
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of linked resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ResourceCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Resource'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ResourceResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Resource'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/userDefinedLinkDefinitions/{collectionId}/linkedResources/{id}:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve a single linked resource
      description: Retrieve a linked resource within a user-defined link definition. A user-defined link (UDL) is a logical link between two objects in Address Manager.
      operationId: getUserDefinedLinkDefinitionLinkedResource
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A linked resource
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Resource'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ResourceResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/locations:
    get:
      tags:
        - Location Resources
      summary: Retrieve a collection of locations
      description: Retrieve a collection of all UN/LOCODE and custom locations.
      operationId: getLocations
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of locations
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/LocationCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Location'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/LocationResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Location'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/locations/{id}:
    get:
      tags:
        - Location Resources
      summary: Retrieve a single location
      description: Retrieve information about a UN/LOCODE or custom location.
      operationId: getLocation
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A location
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Location'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/LocationResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Location Resources
      summary: Update a location
      description: Update an existing custom location. You cannot update the default locations created in Address Manager.
      operationId: putLocation
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationPutRequestBody'
            encoding: {}
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LocationPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated location
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Location'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/LocationResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - Location Resources
      summary: Delete a location
      description: Delete an existing custom location. You cannot delete the default locations created in Address Manager.
      operationId: deleteLocation
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/locations/{collectionId}/locations:
    get:
      tags:
        - Location Resources
      summary: Retrieve a collection of locations
      description: Retrieve a collection of all locations within a location.
      operationId: getLocationLocations
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of locations
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/LocationCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Location'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/LocationResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Location'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Location Resources
      summary: Create a new location
      description: Create a new custom location under a location resource. You can create childlocations under the city location resource to customize your organization location structure. You cannot create a location resource at the primary location list level.
      operationId: postLocationLocation
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationPostRequestBody'
            examples:
              locationExampleLocation:
                $ref: '#/components/examples/locationExampleLocation'
            encoding: {}
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LocationPostRequestBody'
            examples:
              locationExampleLocation:
                $ref: '#/components/examples/locationExampleLocation'
            encoding: {}
      responses:
        "201":
          description: The newly created location
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Location'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/LocationResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/logs:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve a collection of system log resources
      description: Retrieve a collection of all system logs.
      operationId: getLogs
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: A collection of log resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/SystemLogCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/SystemLog'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/SystemLogResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/SystemLog'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/logs/{id}:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve a system log resource
      description: Retrieve information about a system log.
      operationId: getLog
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A log resource
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SystemLog'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/SystemLogResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/SystemLog'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/octet-stream:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/databases/{collectionId}/logs:
    get:
      tags:
        - Database Management and Replication Resources
      summary: Retrieve a collection of database log resources
      description: Retrieve a collection of all logs for the database.
      operationId: getDatabaseLogs
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of log resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DatabaseLogCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/DatabaseLog'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DatabaseLogResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/DatabaseLog'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/imports/{collectionId}/logs:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve a collection of import log resources
      description: Retrieve a collection of all logs for an import.
      operationId: getImportLogs
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of log resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ImportLogCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ImportLog'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ImportLogResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/ImportLog'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/servers/{collectionId}/logs:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of server log resources
      description: Retrieve a collection of all server logs for a server.
      operationId: getServerLogs
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of log resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ServerLogCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ServerLog'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ServerLogResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/ServerLog'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/databases/{collectionId}/logs/{id}:
    get:
      tags:
        - Database Management and Replication Resources
      summary: Retrieve a database log resource
      description: Retrieve a log for the database.
      operationId: getDatabaseLog
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A log resource
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DatabaseLog'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DatabaseLogResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseLog'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/octet-stream:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - Database Management and Replication Resources
      summary: Delete a database log
      description: Delete a log for the database.
      operationId: deleteDatabaseLog
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/imports/{collectionId}/logs/{id}:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve an import log resource
      description: Retrieve a log for an import.
      operationId: getImportLog
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A log resource
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ImportLog'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ImportLogResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ImportLog'
            text/html:
              schema:
                type: string
            application/octet-stream:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - Administrator Resources
      summary: Delete an import log
      description: Delete a log for an import.
      operationId: deleteImportLog
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/servers/{collectionId}/logs/{id}:
    get:
      tags:
        - Server Resources
      summary: Retrieve a server log resource
      description: Retrieve information about a server log.
      operationId: getServerLog
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A log resource
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ServerLog'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ServerLogResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ServerLog'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/octet-stream:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/macAddresses:
    get:
      tags:
        - MAC Address and Client Identifier Resources
      summary: Retrieve a collection of MAC addresses
      description: Retrieve a collection of all MAC addresses.
      operationId: getMacAddresses
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of MAC addresses
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/MACAddressCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/MACAddress'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/MACAddressResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/MACAddress'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/macAddresses/{id}:
    get:
      tags:
        - MAC Address and Client Identifier Resources
      summary: Retrieve a single MAC address
      description: Retrieve information about a MAC address.
      operationId: getMacAddress
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A MAC address
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/MACAddress'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/MACAddressResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/MACAddress'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - MAC Address and Client Identifier Resources
      summary: Update a MAC address
      description: Update an existing MAC address.
      operationId: putMacAddress
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/MACAddressPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/MACAddressPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated MAC address
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/MACAddress'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/MACAddressResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/MACAddress'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - MAC Address and Client Identifier Resources
      summary: Delete a MAC address
      description: Delete an existing MAC address.
      operationId: deleteMacAddress
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/configurations/{collectionId}/macAddresses:
    get:
      tags:
        - MAC Address and Client Identifier Resources
      summary: Retrieve a collection of MAC addresses
      description: Retrieve a list of MAC addresses within a configuration.
      operationId: getConfigurationMacAddresses
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of MAC addresses
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/MACAddressCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/MACAddress'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/MACAddressResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/MACAddress'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - MAC Address and Client Identifier Resources
      summary: Create a new MAC address
      description: Create a new MAC address within a configuration.
      operationId: postConfigurationMacAddress
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/MACAddressPostRequestBody'
            examples:
              macAddressExampleMacAddress:
                $ref: '#/components/examples/macAddressExampleMacAddress'
              macAddressExampleDeniedMacAddress:
                $ref: '#/components/examples/macAddressExampleDeniedMacAddress'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/MACAddressPostRequestBody'
            examples:
              macAddressExampleMacAddress:
                $ref: '#/components/examples/macAddressExampleMacAddress'
              macAddressExampleDeniedMacAddress:
                $ref: '#/components/examples/macAddressExampleDeniedMacAddress'
            encoding: {}
      responses:
        "201":
          description: The newly created MAC address
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/MACAddress'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/MACAddressResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/MACAddress'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/macPools/{collectionId}/macAddresses:
    get:
      tags:
        - MAC Address and Client Identifier Resources
      summary: Retrieve a collection of linked MAC addresses
      description: Retrieve all MAC addresses that are associated with a MAC pool.
      operationId: getMacPoolMacAddresses
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of linked MAC addresses
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/MACAddressCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/MACAddress'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/MACAddressResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/MACAddress'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - MAC Address and Client Identifier Resources
      summary: Link a MAC address to a MAC pool
      description: Link a MAC address to a MAC pool.
      operationId: postMacPoolMacAddress
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/MACAddressPostRequestBody'
            examples:
              macAddressExampleAddToMacPool:
                $ref: '#/components/examples/macAddressExampleAddToMacPool'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/MACAddressPostRequestBody'
            examples:
              macAddressExampleAddToMacPool:
                $ref: '#/components/examples/macAddressExampleAddToMacPool'
            encoding: {}
      responses:
        "201":
          description: The linked MAC address
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/MACAddress'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/MACAddressResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/MACAddress'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/macPools/{collectionId}/macAddresses/{id}:
    get:
      tags:
        - MAC Address and Client Identifier Resources
      summary: Retrieve a single linked MAC address
      description: Retrieve a MAC address that has been associated with a MAC pool.
      operationId: getMacPoolMacAddress
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A linked MAC address
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/MACAddress'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/MACAddressResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/MACAddress'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - MAC Address and Client Identifier Resources
      summary: Unlink a MAC address from a MAC pool
      description: Remove a MAC address from a MAC pool.
      operationId: deleteMacPoolMacAddress
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/macPools:
    get:
      tags:
        - MAC Address and Client Identifier Resources
      summary: Retrieve a collection of MAC pools
      description: Retrieve a collection of all MAC pools.
      operationId: getMacPools
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of MAC pools
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DenyMACPoolCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DenyMACPool'
                            - $ref: '#/components/schemas/MACPool'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DenyMACPoolResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DenyMACPool'
                        - $ref: '#/components/schemas/MACPool'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/macPools/{id}:
    get:
      tags:
        - MAC Address and Client Identifier Resources
      summary: Retrieve a single MAC pool
      description: Retrieve information about a MAC pool.
      operationId: getMacPool
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A MAC pool
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DenyMACPool'
                      - $ref: '#/components/schemas/MACPool'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DenyMACPoolResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DenyMACPool'
                  - $ref: '#/components/schemas/MACPool'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - MAC Address and Client Identifier Resources
      summary: Update a MAC pool
      description: Update an existing MAC pool.
      operationId: putMacPool
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/MACPoolPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/MACPoolPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated MAC pool
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/MACPool'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/MACPoolResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/MACPool'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - MAC Address and Client Identifier Resources
      summary: Delete a MAC pool
      description: Delete an existing MAC pool.
      operationId: deleteMacPool
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/configurations/{collectionId}/macPools:
    get:
      tags:
        - MAC Address and Client Identifier Resources
      summary: Retrieve a collection of MAC pools
      description: Retrieve a collection of all MAC pools within a configuration.
      operationId: getConfigurationMacPools
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of MAC pools
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DenyMACPoolCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DenyMACPool'
                            - $ref: '#/components/schemas/MACPool'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DenyMACPoolResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DenyMACPool'
                        - $ref: '#/components/schemas/MACPool'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - MAC Address and Client Identifier Resources
      summary: Create a new MAC pool
      description: Create a new MAC Pool. MAC pools control IP address allocation based on a client's MAC Address. A MAC pool is a group containing one or more MAC addresses. After creating a MAC pool and adding MAC addresses to it, you can set deployment options to control which clients are allowed to receive IP addresses from specific DHCP pools.
      operationId: postConfigurationMacPool
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/MACPoolPostRequestBody'
            examples:
              macPoolExampleRequiredFields:
                $ref: '#/components/examples/macPoolExampleRequiredFields'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/MACPoolPostRequestBody'
            examples:
              macPoolExampleRequiredFields:
                $ref: '#/components/examples/macPoolExampleRequiredFields'
            encoding: {}
      responses:
        "201":
          description: The newly created MAC pool
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/MACPool'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/MACPoolResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/MACPool'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/merges:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of merges
      description: Retrieve a collection of all merges for all blocks, networks, and configurations. Merge resources are created when contiguous blocks, networks, or IPv4 DHCP ranges are merged into a single block/network/range. Merge resources are also created when a block is merged with a parent block or configuration.
      operationId: getMerges
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of merges
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4BlockMergeCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4BlockMerge'
                            - $ref: '#/components/schemas/IPv4NetworkMerge'
                            - $ref: '#/components/schemas/IPv4DHCPRangeMerge'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4BlockMergeResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4BlockMerge'
                        - $ref: '#/components/schemas/IPv4NetworkMerge'
                        - $ref: '#/components/schemas/IPv4DHCPRangeMerge'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/merges/{id}:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a single merge
      description: Retrieve a single merge. Merge resources are created when contiguous blocks, networks, or IPv4 DHCP ranges are merged into a single block/network/range. Merge resources are also created when a block is merged with a parent block or configuration.
      operationId: getMerge
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A merge
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4BlockMerge'
                      - $ref: '#/components/schemas/IPv4NetworkMerge'
                      - $ref: '#/components/schemas/IPv4DHCPRangeMerge'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4BlockMergeResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4BlockMerge'
                  - $ref: '#/components/schemas/IPv4NetworkMerge'
                  - $ref: '#/components/schemas/IPv4DHCPRangeMerge'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/blocks/{collectionId}/merges:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of merges
      description: Retrieve a collection of all merges associated with a parent block resource. Merge resources are created when contiguous blocks or networks are merged into a single block or network. Merge resources are also created when a block is merged with a parent block or configuration.
      operationId: getBlockMerges
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of merges
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4BlockMergeCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4BlockMerge'
                            - $ref: '#/components/schemas/IPv4NetworkMerge'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4BlockMergeResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4BlockMerge'
                        - $ref: '#/components/schemas/IPv4NetworkMerge'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new merge
      description: Merge contiguous blocks or networks within a parent block resource.
      operationId: postBlockMerge
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4BlockMerge: '#/components/schemas/IPv4BlockMergePostRequestBody'
                  IPv4NetworkMerge: '#/components/schemas/IPv4NetworkMergePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4BlockMergePostRequestBody'
                - $ref: '#/components/schemas/IPv4NetworkMergePostRequestBody'
            examples:
              mergeExampleIpv4Blocks:
                $ref: '#/components/examples/mergeExampleIpv4Blocks'
              mergeExampleIpv4Networks:
                $ref: '#/components/examples/mergeExampleIpv4Networks'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4BlockMerge: '#/components/schemas/IPv4BlockMergePostRequestBody'
                  IPv4NetworkMerge: '#/components/schemas/IPv4NetworkMergePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4BlockMergePostRequestBody'
                - $ref: '#/components/schemas/IPv4NetworkMergePostRequestBody'
            examples:
              mergeExampleIpv4Blocks:
                $ref: '#/components/examples/mergeExampleIpv4Blocks'
              mergeExampleIpv4Networks:
                $ref: '#/components/examples/mergeExampleIpv4Networks'
            encoding: {}
      responses:
        "201":
          description: The newly created merge
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4BlockMerge'
                      - $ref: '#/components/schemas/IPv4NetworkMerge'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4BlockMergeResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4BlockMerge'
                  - $ref: '#/components/schemas/IPv4NetworkMerge'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/configurations/{collectionId}/merges:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of merges
      description: Retrieve a collection of all merges associated with a configuration resource. Merge resources are created when contiguous blocks are merged into a single block. Merge resources are also created when a block is merged with a parent block or configuration.
      operationId: getConfigurationMerges
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of merges
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4BlockMergeCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/IPv4BlockMerge'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4BlockMergeResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/IPv4BlockMerge'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new merge
      description: Merge contiguous blocks within a parent configuration resource.
      operationId: postConfigurationMerge
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/IPv4BlockMergePostRequestBody'
            examples:
              mergeExampleIpv4Blocks:
                $ref: '#/components/examples/mergeExampleIpv4Blocks'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/IPv4BlockMergePostRequestBody'
            examples:
              mergeExampleIpv4Blocks:
                $ref: '#/components/examples/mergeExampleIpv4Blocks'
            encoding: {}
      responses:
        "201":
          description: The newly created merge
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/IPv4BlockMerge'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4BlockMergeResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/IPv4BlockMerge'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/networks/{collectionId}/merges:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of merges
      description: Retrieve a collection of all merges associated with a parent network  resource. Merge resources are created when contiguous  IPv4 DHCP ranges are merged into a single range.
      operationId: getNetworkMerges
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of merges
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4DHCPRangeMergeCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/IPv4DHCPRangeMerge'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4DHCPRangeMergeResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/IPv4DHCPRangeMerge'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new merge
      description: Merge contiguous IPv4 DHCP ranges within a parent network resource.
      operationId: postNetworkMerge
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/IPv4DHCPRangeMergePostRequestBody'
            examples:
              mergeExampleIpv4DhcpRanges:
                $ref: '#/components/examples/mergeExampleIpv4DhcpRanges'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/IPv4DHCPRangeMergePostRequestBody'
            examples:
              mergeExampleIpv4DhcpRanges:
                $ref: '#/components/examples/mergeExampleIpv4DhcpRanges'
            encoding: {}
      responses:
        "201":
          description: The newly created merge
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/IPv4DHCPRangeMerge'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4DHCPRangeMergeResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/IPv4DHCPRangeMerge'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/moves:
    get:
      tags:
        - Deployment Role Resources
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Retrieve a collection of move resources
      description: Retrieve a collection of all moves for blocks, networks, addresses, resource records, zones and deployment roles. Move resources are created when a block/network is moved to a different parent block, an address is moved to another network, a zone or resource record is moved to another parent zone, or a deployment role is moved to another server.
      operationId: getMoves
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of move resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DeploymentRoleMoveCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DeploymentRoleMove'
                            - $ref: '#/components/schemas/IPv4AddressMove'
                            - $ref: '#/components/schemas/IPv4BlockMove'
                            - $ref: '#/components/schemas/IPv4NetworkMove'
                            - $ref: '#/components/schemas/IPv6AddressMove'
                            - $ref: '#/components/schemas/IPv6BlockMove'
                            - $ref: '#/components/schemas/IPv6NetworkMove'
                            - $ref: '#/components/schemas/ResourceRecordMove'
                            - $ref: '#/components/schemas/ZoneMove'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DeploymentRoleMoveResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DeploymentRoleMove'
                        - $ref: '#/components/schemas/IPv4AddressMove'
                        - $ref: '#/components/schemas/IPv4BlockMove'
                        - $ref: '#/components/schemas/IPv4NetworkMove'
                        - $ref: '#/components/schemas/IPv6AddressMove'
                        - $ref: '#/components/schemas/IPv6BlockMove'
                        - $ref: '#/components/schemas/IPv6NetworkMove'
                        - $ref: '#/components/schemas/ResourceRecordMove'
                        - $ref: '#/components/schemas/ZoneMove'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/moves/{id}:
    get:
      tags:
        - Deployment Role Resources
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Retrieve a single move resource
      description: Retrieve a single move resource. Move resources are created when a block/network is moved to a different parent block, an address is moved to another network, a zone or resource record is moved to another parent zone, or a deployment role is moved to another server.
      operationId: getMove
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A move resource
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DeploymentRoleMove'
                      - $ref: '#/components/schemas/IPv4AddressMove'
                      - $ref: '#/components/schemas/IPv4BlockMove'
                      - $ref: '#/components/schemas/IPv4NetworkMove'
                      - $ref: '#/components/schemas/IPv6AddressMove'
                      - $ref: '#/components/schemas/IPv6BlockMove'
                      - $ref: '#/components/schemas/IPv6NetworkMove'
                      - $ref: '#/components/schemas/ResourceRecordMove'
                      - $ref: '#/components/schemas/ZoneMove'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DeploymentRoleMoveResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DeploymentRoleMove'
                  - $ref: '#/components/schemas/IPv4AddressMove'
                  - $ref: '#/components/schemas/IPv4BlockMove'
                  - $ref: '#/components/schemas/IPv4NetworkMove'
                  - $ref: '#/components/schemas/IPv6AddressMove'
                  - $ref: '#/components/schemas/IPv6BlockMove'
                  - $ref: '#/components/schemas/IPv6NetworkMove'
                  - $ref: '#/components/schemas/ResourceRecordMove'
                  - $ref: '#/components/schemas/ZoneMove'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/addresses/{collectionId}/moves:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of address move resources
      description: Retrieve a collection of move resources associated with an IPv4 or IPv6 address. Move resources are created when an address is moved to another network.
      operationId: getAddressMoves
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of address move resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4AddressMoveCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4AddressMove'
                            - $ref: '#/components/schemas/IPv6AddressMove'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4AddressMoveResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4AddressMove'
                        - $ref: '#/components/schemas/IPv6AddressMove'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new address move
      description: Move an address resource to a another network.
      operationId: postAddressMove
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-update-servers
          in: header
          description: Indicates whether Address Manager automatically deploys address updates to servers.
          schema:
            type: boolean
            default: true
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4AddressMove: '#/components/schemas/IPv4AddressMovePostRequestBody'
                  IPv6AddressMove: '#/components/schemas/IPv6AddressMovePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4AddressMovePostRequestBody'
                - $ref: '#/components/schemas/IPv6AddressMovePostRequestBody'
            examples:
              moveExampleIpv4Address:
                $ref: '#/components/examples/moveExampleIpv4Address'
              moveExampleIpv6Address:
                $ref: '#/components/examples/moveExampleIpv6Address'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4AddressMove: '#/components/schemas/IPv4AddressMovePostRequestBody'
                  IPv6AddressMove: '#/components/schemas/IPv6AddressMovePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4AddressMovePostRequestBody'
                - $ref: '#/components/schemas/IPv6AddressMovePostRequestBody'
            examples:
              moveExampleIpv4Address:
                $ref: '#/components/examples/moveExampleIpv4Address'
              moveExampleIpv6Address:
                $ref: '#/components/examples/moveExampleIpv6Address'
            encoding: {}
      responses:
        "201":
          description: The newly created address move resource
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4AddressMove'
                      - $ref: '#/components/schemas/IPv6AddressMove'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4AddressMoveResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4AddressMove'
                  - $ref: '#/components/schemas/IPv6AddressMove'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/blocks/{collectionId}/moves:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of block move resources
      description: Retrieve a collection of move resources associated with an IPv4 or IPv6 block. Move resources are created when a block is moved to another configuration or block.
      operationId: getBlockMoves
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of block move resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4BlockMoveCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4BlockMove'
                            - $ref: '#/components/schemas/IPv6BlockMove'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4BlockMoveResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4BlockMove'
                        - $ref: '#/components/schemas/IPv6BlockMove'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new block move
      description: Move an IPv4 or IPv6 block to another block or configuration.
      operationId: postBlockMove
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4BlockMove: '#/components/schemas/IPv4BlockMovePostRequestBody'
                  IPv6BlockMove: '#/components/schemas/IPv6BlockMovePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4BlockMovePostRequestBody'
                - $ref: '#/components/schemas/IPv6BlockMovePostRequestBody'
            examples:
              moveExampleIpv4Block:
                $ref: '#/components/examples/moveExampleIpv4Block'
              moveExampleIpv6Block:
                $ref: '#/components/examples/moveExampleIpv6Block'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4BlockMove: '#/components/schemas/IPv4BlockMovePostRequestBody'
                  IPv6BlockMove: '#/components/schemas/IPv6BlockMovePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4BlockMovePostRequestBody'
                - $ref: '#/components/schemas/IPv6BlockMovePostRequestBody'
            examples:
              moveExampleIpv4Block:
                $ref: '#/components/examples/moveExampleIpv4Block'
              moveExampleIpv6Block:
                $ref: '#/components/examples/moveExampleIpv6Block'
            encoding: {}
      responses:
        "201":
          description: The newly created block move resource
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4BlockMove'
                      - $ref: '#/components/schemas/IPv6BlockMove'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4BlockMoveResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4BlockMove'
                  - $ref: '#/components/schemas/IPv6BlockMove'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/deploymentRoles/{collectionId}/moves:
    get:
      tags:
        - Deployment Role Resources
      summary: Retrieve a collection of deployment role move resources
      description: Retrieve a collection of move resources associated with a deployment role. Move resources are created when a deployment role is moved to another server.
      operationId: getDeploymentRoleMoves
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployment role move resource
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DeploymentRoleMoveCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/DeploymentRoleMove'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DeploymentRoleMoveResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/DeploymentRoleMove'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/networks/{collectionId}/moves:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of network move resources
      description: Retrieve a collection of move resources associated with an IPv4 or IPv6 network. Move resources are created when a network is moved to another block.
      operationId: getNetworkMoves
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of network move resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4NetworkMoveCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4NetworkMove'
                            - $ref: '#/components/schemas/IPv6NetworkMove'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4NetworkMoveResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4NetworkMove'
                        - $ref: '#/components/schemas/IPv6NetworkMove'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new network move
      description: Move an IPv4 or IPv6 network to another block.
      operationId: postNetworkMove
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4NetworkMove: '#/components/schemas/IPv4NetworkMovePostRequestBody'
                  IPv6NetworkMove: '#/components/schemas/IPv6NetworkMovePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4NetworkMovePostRequestBody'
                - $ref: '#/components/schemas/IPv6NetworkMovePostRequestBody'
            examples:
              moveExampleIpv4Network:
                $ref: '#/components/examples/moveExampleIpv4Network'
              moveExampleIpv6Network:
                $ref: '#/components/examples/moveExampleIpv6Network'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4NetworkMove: '#/components/schemas/IPv4NetworkMovePostRequestBody'
                  IPv6NetworkMove: '#/components/schemas/IPv6NetworkMovePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4NetworkMovePostRequestBody'
                - $ref: '#/components/schemas/IPv6NetworkMovePostRequestBody'
            examples:
              moveExampleIpv4Network:
                $ref: '#/components/examples/moveExampleIpv4Network'
              moveExampleIpv6Network:
                $ref: '#/components/examples/moveExampleIpv6Network'
            encoding: {}
      responses:
        "201":
          description: The newly created network move resource
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4NetworkMove'
                      - $ref: '#/components/schemas/IPv6NetworkMove'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4NetworkMoveResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4NetworkMove'
                  - $ref: '#/components/schemas/IPv6NetworkMove'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/resourceRecords/{collectionId}/moves:
    get:
      tags:
        - Resource Record Resources
      summary: Retrieve a collection of resource record move resources
      description: Retrieve a collection of move resources associated with a resource record. Move resources are created when a resource record is moved to another zone.
      operationId: getResourceRecordMoves
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of resource record move resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ResourceRecordMoveCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ResourceRecordMove'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ResourceRecordMoveResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/ResourceRecordMove'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Resource Record Resources
      summary: Create a new resource record move
      description: Move a resource record to another zone.
      operationId: postResourceRecordMove
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ResourceRecordMovePostRequestBody'
            examples:
              moveExampleResourceRecord:
                $ref: '#/components/examples/moveExampleResourceRecord'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceRecordMovePostRequestBody'
            examples:
              moveExampleResourceRecord:
                $ref: '#/components/examples/moveExampleResourceRecord'
            encoding: {}
      responses:
        "201":
          description: The newly created resource record move resource
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResourceRecordMove'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ResourceRecordMoveResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceRecordMove'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/servers/{collectionId}/moves:
    post:
      tags:
        - Deployment Role Resources
      summary: Create a new deployment roles move
      description: Move deployment roles to another server.
      operationId: postServerMove
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DeploymentRoleMovePostRequestBody'
            examples:
              moveExampleDeploymentRoles:
                $ref: '#/components/examples/moveExampleDeploymentRoles'
              moveExampleDnsDeploymentRoles:
                $ref: '#/components/examples/moveExampleDnsDeploymentRoles'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentRoleMovePostRequestBody'
            examples:
              moveExampleDeploymentRoles:
                $ref: '#/components/examples/moveExampleDeploymentRoles'
              moveExampleDnsDeploymentRoles:
                $ref: '#/components/examples/moveExampleDnsDeploymentRoles'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment roles move resource
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DeploymentRoleMove'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DeploymentRoleMoveResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentRoleMove'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/zones/{collectionId}/moves:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a collection of zone move resources
      description: Retrieve a collection of move resources associated with a zone. Move resources are created when a zone is moved to another zone or view.
      operationId: getZoneMoves
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of zone move resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ZoneMoveCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ZoneMove'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ZoneMoveResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/ZoneMove'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - View and Zone Resources
      summary: Create a new zone move
      description: Move a zone to another zone.
      operationId: postZoneMove
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ZoneMovePostRequestBody'
            examples:
              moveExampleZone:
                $ref: '#/components/examples/moveExampleZone'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneMovePostRequestBody'
            examples:
              moveExampleZone:
                $ref: '#/components/examples/moveExampleZone'
            encoding: {}
      responses:
        "201":
          description: The newly created zone move resource
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ZoneMove'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ZoneMoveResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneMove'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/namingPolicies:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a collection of naming policies
      description: Retrieve all configured naming policies.
      operationId: getNamingPolicies
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of naming policies
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/NamingPolicyCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/NamingPolicy'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/NamingPolicyResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/NamingPolicy'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - View and Zone Resources
      summary: Create a new naming policy
      description: Create a new naming policy.
      operationId: postNamingPolicy
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/NamingPolicyPostRequestBody'
            examples:
              namingPolicyExampleRequiredFields:
                $ref: '#/components/examples/namingPolicyExampleRequiredFields'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/NamingPolicyPostRequestBody'
            examples:
              namingPolicyExampleRequiredFields:
                $ref: '#/components/examples/namingPolicyExampleRequiredFields'
            encoding: {}
      responses:
        "201":
          description: The newly created naming policy
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/NamingPolicy'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/NamingPolicyResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/NamingPolicy'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/namingPolicies/{id}:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a single naming policy
      description: Retrieve a specific naming policy.
      operationId: getNamingPolicy
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A naming policy
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/NamingPolicy'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/NamingPolicyResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/NamingPolicy'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - View and Zone Resources
      summary: Update a naming policy
      description: Update an existing naming policy.
      operationId: putNamingPolicy
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/NamingPolicyPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/NamingPolicyPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated naming policy
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/NamingPolicy'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/NamingPolicyResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/NamingPolicy'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - View and Zone Resources
      summary: Delete a naming policy
      description: Delete an existing naming policy.
      operationId: deleteNamingPolicy
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/views/{collectionId}/namingPolicies:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a collection of applied naming policies
      description: Retrieve all naming policies applied to a view or zone.
      operationId: getViewNamingPolicies
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of naming policies
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/NamingPolicyCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/NamingPolicy'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/NamingPolicyResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/NamingPolicy'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - View and Zone Resources
      summary: Apply a naming policy
      description: Apply a naming policy to a view or zone.
      operationId: postViewNamingPolicy
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/NamingPolicyPostRequestBody'
            examples:
              namingPolicyExampleApplyPolicyToView:
                $ref: '#/components/examples/namingPolicyExampleApplyPolicyToView'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/NamingPolicyPostRequestBody'
            examples:
              namingPolicyExampleApplyPolicyToView:
                $ref: '#/components/examples/namingPolicyExampleApplyPolicyToView'
            encoding: {}
      responses:
        "201":
          description: The newly applied naming policy
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/NamingPolicy'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/NamingPolicyResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/NamingPolicy'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/zones/{collectionId}/namingPolicies:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a collection of applied naming policies
      description: Retrieve all naming policies applied to a view or zone.
      operationId: getZoneNamingPolicies
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of naming policies
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/NamingPolicyCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/NamingPolicy'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/NamingPolicyResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/NamingPolicy'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - View and Zone Resources
      summary: Apply a naming policy
      description: Apply a naming policy to a view or zone.
      operationId: postZoneNamingPolicy
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/NamingPolicyPostRequestBody'
            examples:
              namingPolicyExampleApplyPolicyToZone:
                $ref: '#/components/examples/namingPolicyExampleApplyPolicyToZone'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/NamingPolicyPostRequestBody'
            examples:
              namingPolicyExampleApplyPolicyToZone:
                $ref: '#/components/examples/namingPolicyExampleApplyPolicyToZone'
            encoding: {}
      responses:
        "201":
          description: The newly applied naming policy
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/NamingPolicy'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/NamingPolicyResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/NamingPolicy'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/views/{collectionId}/namingPolicies/{id}:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve an applied naming policy
      description: Retrieve a naming policy applied to a view or zone.
      operationId: getViewNamingPolicy
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A naming policy
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/NamingPolicy'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/NamingPolicyResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/NamingPolicy'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - View and Zone Resources
      summary: Unapply naming policy
      description: Removes a naming policy from a view or zone.
      operationId: deleteViewNamingPolicy
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/zones/{collectionId}/namingPolicies/{id}:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve an applied naming policy
      description: Retrieve a naming policy applied to a view or zone.
      operationId: getZoneNamingPolicy
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A naming policy
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/NamingPolicy'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/NamingPolicyResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/NamingPolicy'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - View and Zone Resources
      summary: Unapply naming policy
      description: Removes a naming policy from a view or zone.
      operationId: deleteZoneNamingPolicy
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/namingPolicyRestrictions:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a collection of naming restrictions
      description: Retrieve a collection of all configured naming restrictions.
      operationId: getNamingPolicyRestrictions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of naming restrictions
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/NamingPolicyRestrictionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/NamingPolicyRestriction'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/NamingPolicyRestrictionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/NamingPolicyRestriction'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - View and Zone Resources
      summary: Create a new naming restriction
      description: Create a new naming restriction. Naming restrictions are a list of words that can't be used as part of a resource record name. You can use naming restrictions to prevent reserved or undesirable words from being used in resource record names.
      operationId: postNamingPolicyRestriction
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/NamingPolicyRestrictionPostRequestBody'
            examples:
              namingPolicyRestrictionExampleIpv4Blocks:
                $ref: '#/components/examples/namingPolicyRestrictionExampleIpv4Blocks'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/NamingPolicyRestrictionPostRequestBody'
            examples:
              namingPolicyRestrictionExampleIpv4Blocks:
                $ref: '#/components/examples/namingPolicyRestrictionExampleIpv4Blocks'
            encoding: {}
      responses:
        "201":
          description: The newly created naming restriction
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/NamingPolicyRestriction'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/NamingPolicyRestrictionResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/NamingPolicyRestriction'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/namingPolicyRestrictions/{id}:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a single naming restriction
      description: Retrieve information about a naming restriction.
      operationId: getNamingPolicyRestriction
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A naming restriction
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/NamingPolicyRestriction'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/NamingPolicyRestrictionResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/NamingPolicyRestriction'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - View and Zone Resources
      summary: Update a naming restriction
      description: Update an existing naming restriction.
      operationId: putNamingPolicyRestriction
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/NamingPolicyRestrictionPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/NamingPolicyRestrictionPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated naming restriction
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/NamingPolicyRestriction'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/NamingPolicyRestrictionResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/NamingPolicyRestriction'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - View and Zone Resources
      summary: Delete a naming restriction
      description: Delete an existing naming restriction.
      operationId: deleteNamingPolicyRestriction
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/namingPolicyValues:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a collection of naming policy values
      description: Retrieve a collection of all naming policy values.
      operationId: getNamingPolicyValues
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of naming policy values
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/NamingPolicyConnectorValueCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/NamingPolicyConnectorValue'
                            - $ref: '#/components/schemas/NamingPolicyIncrementalValue'
                            - $ref: '#/components/schemas/NamingPolicyIntegerValue'
                            - $ref: '#/components/schemas/NamingPolicyRequiredValue'
                            - $ref: '#/components/schemas/NamingPolicyTextValue'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/NamingPolicyConnectorValueResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/NamingPolicyConnectorValue'
                        - $ref: '#/components/schemas/NamingPolicyIncrementalValue'
                        - $ref: '#/components/schemas/NamingPolicyIntegerValue'
                        - $ref: '#/components/schemas/NamingPolicyRequiredValue'
                        - $ref: '#/components/schemas/NamingPolicyTextValue'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - View and Zone Resources
      summary: Create a new naming policy value
      description: Create a new naming policy value. A naming policy value is an individual part of a resource record name, such as a specific character, an incremental number, a number or text entered by the user, or a value selected from the predefined list.
      operationId: postNamingPolicyValue
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  NamingPolicyConnectorValue: '#/components/schemas/NamingPolicyConnectorValuePostRequestBody'
                  NamingPolicyIncrementalValue: '#/components/schemas/NamingPolicyIncrementalValuePostRequestBody'
                  NamingPolicyIntegerValue: '#/components/schemas/NamingPolicyIntegerValuePostRequestBody'
                  NamingPolicyRequiredValue: '#/components/schemas/NamingPolicyRequiredValuePostRequestBody'
                  NamingPolicyTextValue: '#/components/schemas/NamingPolicyTextValuePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/NamingPolicyConnectorValuePostRequestBody'
                - $ref: '#/components/schemas/NamingPolicyIncrementalValuePostRequestBody'
                - $ref: '#/components/schemas/NamingPolicyIntegerValuePostRequestBody'
                - $ref: '#/components/schemas/NamingPolicyRequiredValuePostRequestBody'
                - $ref: '#/components/schemas/NamingPolicyTextValuePostRequestBody'
            examples:
              namingPolicyValueExampleConnector:
                $ref: '#/components/examples/namingPolicyValueExampleConnector'
              namingPolicyValueExampleIncremental:
                $ref: '#/components/examples/namingPolicyValueExampleIncremental'
              namingPolicyValueExampleInteger:
                $ref: '#/components/examples/namingPolicyValueExampleInteger'
              namingPolicyValueExampleRequired:
                $ref: '#/components/examples/namingPolicyValueExampleRequired'
              namingPolicyValueExampleText:
                $ref: '#/components/examples/namingPolicyValueExampleText'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  NamingPolicyConnectorValue: '#/components/schemas/NamingPolicyConnectorValuePostRequestBody'
                  NamingPolicyIncrementalValue: '#/components/schemas/NamingPolicyIncrementalValuePostRequestBody'
                  NamingPolicyIntegerValue: '#/components/schemas/NamingPolicyIntegerValuePostRequestBody'
                  NamingPolicyRequiredValue: '#/components/schemas/NamingPolicyRequiredValuePostRequestBody'
                  NamingPolicyTextValue: '#/components/schemas/NamingPolicyTextValuePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/NamingPolicyConnectorValuePostRequestBody'
                - $ref: '#/components/schemas/NamingPolicyIncrementalValuePostRequestBody'
                - $ref: '#/components/schemas/NamingPolicyIntegerValuePostRequestBody'
                - $ref: '#/components/schemas/NamingPolicyRequiredValuePostRequestBody'
                - $ref: '#/components/schemas/NamingPolicyTextValuePostRequestBody'
            examples:
              namingPolicyValueExampleConnector:
                $ref: '#/components/examples/namingPolicyValueExampleConnector'
              namingPolicyValueExampleIncremental:
                $ref: '#/components/examples/namingPolicyValueExampleIncremental'
              namingPolicyValueExampleInteger:
                $ref: '#/components/examples/namingPolicyValueExampleInteger'
              namingPolicyValueExampleRequired:
                $ref: '#/components/examples/namingPolicyValueExampleRequired'
              namingPolicyValueExampleText:
                $ref: '#/components/examples/namingPolicyValueExampleText'
            encoding: {}
      responses:
        "201":
          description: The newly created naming policy value
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/NamingPolicyConnectorValue'
                      - $ref: '#/components/schemas/NamingPolicyIncrementalValue'
                      - $ref: '#/components/schemas/NamingPolicyIntegerValue'
                      - $ref: '#/components/schemas/NamingPolicyRequiredValue'
                      - $ref: '#/components/schemas/NamingPolicyTextValue'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/NamingPolicyConnectorValueResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/NamingPolicyConnectorValue'
                  - $ref: '#/components/schemas/NamingPolicyIncrementalValue'
                  - $ref: '#/components/schemas/NamingPolicyIntegerValue'
                  - $ref: '#/components/schemas/NamingPolicyRequiredValue'
                  - $ref: '#/components/schemas/NamingPolicyTextValue'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/namingPolicyValues/{id}:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a single naming policy value
      description: Retrieve information about a naming policy value.
      operationId: getNamingPolicyValue
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A naming policy value
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/NamingPolicyConnectorValue'
                      - $ref: '#/components/schemas/NamingPolicyIncrementalValue'
                      - $ref: '#/components/schemas/NamingPolicyIntegerValue'
                      - $ref: '#/components/schemas/NamingPolicyRequiredValue'
                      - $ref: '#/components/schemas/NamingPolicyTextValue'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/NamingPolicyConnectorValueResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/NamingPolicyConnectorValue'
                  - $ref: '#/components/schemas/NamingPolicyIncrementalValue'
                  - $ref: '#/components/schemas/NamingPolicyIntegerValue'
                  - $ref: '#/components/schemas/NamingPolicyRequiredValue'
                  - $ref: '#/components/schemas/NamingPolicyTextValue'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - View and Zone Resources
      summary: Update a naming policy value
      description: Update an existing naming policy value.
      operationId: putNamingPolicyValue
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  NamingPolicyConnectorValue: '#/components/schemas/NamingPolicyConnectorValuePutRequestBody'
                  NamingPolicyIncrementalValue: '#/components/schemas/NamingPolicyIncrementalValuePutRequestBody'
                  NamingPolicyIntegerValue: '#/components/schemas/NamingPolicyIntegerValuePutRequestBody'
                  NamingPolicyRequiredValue: '#/components/schemas/NamingPolicyRequiredValuePutRequestBody'
                  NamingPolicyTextValue: '#/components/schemas/NamingPolicyTextValuePutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/NamingPolicyConnectorValuePutRequestBody'
                - $ref: '#/components/schemas/NamingPolicyIncrementalValuePutRequestBody'
                - $ref: '#/components/schemas/NamingPolicyIntegerValuePutRequestBody'
                - $ref: '#/components/schemas/NamingPolicyRequiredValuePutRequestBody'
                - $ref: '#/components/schemas/NamingPolicyTextValuePutRequestBody'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  NamingPolicyConnectorValue: '#/components/schemas/NamingPolicyConnectorValuePutRequestBody'
                  NamingPolicyIncrementalValue: '#/components/schemas/NamingPolicyIncrementalValuePutRequestBody'
                  NamingPolicyIntegerValue: '#/components/schemas/NamingPolicyIntegerValuePutRequestBody'
                  NamingPolicyRequiredValue: '#/components/schemas/NamingPolicyRequiredValuePutRequestBody'
                  NamingPolicyTextValue: '#/components/schemas/NamingPolicyTextValuePutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/NamingPolicyConnectorValuePutRequestBody'
                - $ref: '#/components/schemas/NamingPolicyIncrementalValuePutRequestBody'
                - $ref: '#/components/schemas/NamingPolicyIntegerValuePutRequestBody'
                - $ref: '#/components/schemas/NamingPolicyRequiredValuePutRequestBody'
                - $ref: '#/components/schemas/NamingPolicyTextValuePutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated naming policy value
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/NamingPolicyConnectorValue'
                      - $ref: '#/components/schemas/NamingPolicyIncrementalValue'
                      - $ref: '#/components/schemas/NamingPolicyIntegerValue'
                      - $ref: '#/components/schemas/NamingPolicyRequiredValue'
                      - $ref: '#/components/schemas/NamingPolicyTextValue'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/NamingPolicyConnectorValueResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/NamingPolicyConnectorValue'
                  - $ref: '#/components/schemas/NamingPolicyIncrementalValue'
                  - $ref: '#/components/schemas/NamingPolicyIntegerValue'
                  - $ref: '#/components/schemas/NamingPolicyRequiredValue'
                  - $ref: '#/components/schemas/NamingPolicyTextValue'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - View and Zone Resources
      summary: Delete a naming policy value
      description: Delete an existing naming policy value.
      operationId: deleteNamingPolicyValue
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/networks:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of networks
      description: Retrieve a collection of all IPv4/IPv6 networks for all blocks and configurations.
      operationId: getNetworks
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of networks
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4NetworkCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4Network'
                            - $ref: '#/components/schemas/IPv6Network'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4NetworkResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4Network'
                        - $ref: '#/components/schemas/IPv6Network'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/networks/{id}:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a single network
      description: Retrieve a single IPv4/IPv6 network.
      operationId: getNetwork
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A network
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Network'
                      - $ref: '#/components/schemas/IPv6Network'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4NetworkResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Network'
                  - $ref: '#/components/schemas/IPv6Network'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - IPv4 and IPv6 Resources
      summary: Update a network
      description: Update an IPv4/IPv6 network.
      operationId: putNetwork
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-no-gateway
          in: header
          description: Indicates whether the IPv4 network should not contain a gateway address.
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Network: '#/components/schemas/IPv4NetworkPutRequestBody'
                  IPv6Network: '#/components/schemas/IPv6NetworkPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4NetworkPutRequestBody'
                - $ref: '#/components/schemas/IPv6NetworkPutRequestBody'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Network: '#/components/schemas/IPv4NetworkPutRequestBody'
                  IPv6Network: '#/components/schemas/IPv6NetworkPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4NetworkPutRequestBody'
                - $ref: '#/components/schemas/IPv6NetworkPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated network
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Network'
                      - $ref: '#/components/schemas/IPv6Network'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4NetworkResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Network'
                  - $ref: '#/components/schemas/IPv6Network'
        "202":
          description: The workflow request for the pending network update
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Network'
                      - $ref: '#/components/schemas/IPv6Network'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4NetworkResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Network'
                  - $ref: '#/components/schemas/IPv6Network'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - IPv4 and IPv6 Resources
      summary: Delete a network
      description: Delete an IPv4/IPv6 network.
      operationId: deleteNetwork
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "202":
          description: The workflow request for the network deletion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowRequest'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WorkflowRequest'
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/blocks/{collectionId}/networks:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of networks
      description: Retrieve a collection of all IPv4/IPv6 networks for a block. Only immediate child networks are returned, networks contained in sub blocks are not included in the response.
      operationId: getBlockNetworks
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of networks
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4NetworkCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4Network'
                            - $ref: '#/components/schemas/IPv6Network'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4NetworkResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4Network'
                        - $ref: '#/components/schemas/IPv6Network'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new network
      description: Create a new IPv4/IPv6 network within a block.
      operationId: postBlockNetwork
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-no-gateway
          in: header
          description: Indicates whether the IPv4 network should not contain a gateway address.
          schema:
            type: boolean
            default: false
        - name: x-bcn-reuse-existing
          in: header
          description: Indicates whether preexisting empty ranges will be searched when using the `DEPTH_FIRST` traversal method to determine the starting address of the network.
          schema:
            type: boolean
            default: false
        - name: x-bcn-traversal-method
          in: header
          description: |
            The algorithm used to determine the starting address of the network when only a size was provided for the `range` value. If no header value is supplied, `NO_TRAVERSAL` will be used by default.
            - `NO_TRAVERSAL`: Attempt to find the available space directly under the specified parent block.
            - `DEPTH_FIRST`: Attempt to find the available space by recursively searching the parent block's children.
          schema:
            type: string
            default: NO_TRAVERSAL
            enum:
              - NO_TRAVERSAL
              - DEPTH_FIRST
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Network: '#/components/schemas/IPv4NetworkPostRequestBody'
                  IPv6Network: '#/components/schemas/IPv6NetworkPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4NetworkPostRequestBody'
                - $ref: '#/components/schemas/IPv6NetworkPostRequestBody'
            examples:
              networkExampleIpv4Cidr:
                $ref: '#/components/examples/networkExampleIpv4Cidr'
              networkExampleIpv4StartAddressAndNetmask:
                $ref: '#/components/examples/networkExampleIpv4StartAddressAndNetmask'
              networkExampleIpv4StartAndEndAddress:
                $ref: '#/components/examples/networkExampleIpv4StartAndEndAddress'
              networkExampleIpv4NextAvailable:
                $ref: '#/components/examples/networkExampleIpv4NextAvailable'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Network: '#/components/schemas/IPv4NetworkPostRequestBody'
                  IPv6Network: '#/components/schemas/IPv6NetworkPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4NetworkPostRequestBody'
                - $ref: '#/components/schemas/IPv6NetworkPostRequestBody'
            examples:
              networkExampleIpv4Cidr:
                $ref: '#/components/examples/networkExampleIpv4Cidr'
              networkExampleIpv4StartAddressAndNetmask:
                $ref: '#/components/examples/networkExampleIpv4StartAddressAndNetmask'
              networkExampleIpv4StartAndEndAddress:
                $ref: '#/components/examples/networkExampleIpv4StartAndEndAddress'
              networkExampleIpv4NextAvailable:
                $ref: '#/components/examples/networkExampleIpv4NextAvailable'
            encoding: {}
      responses:
        "201":
          description: The newly created network
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Network'
                      - $ref: '#/components/schemas/IPv6Network'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4NetworkResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Network'
                  - $ref: '#/components/schemas/IPv6Network'
        "202":
          description: The workflow request for the pending network
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Network'
                      - $ref: '#/components/schemas/IPv6Network'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4NetworkResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Network'
                  - $ref: '#/components/schemas/IPv6Network'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/merges/{collectionId}/networks:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of merged networks
      description: Retrieve a collection of merged IPv4 networks.
      operationId: getMergeNetworks
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of merged networks
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4NetworkCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/IPv4Network'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4NetworkResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/IPv4Network'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/splits/{collectionId}/networks:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of network partitions
      description: Retrieve a collection of IPv4 or IPv6 network splits.
      operationId: getSplitNetworks
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of network partitions
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4NetworkCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/IPv4Network'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4NetworkResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/IPv4Network'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/merges/{collectionId}/networks/{id}:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a single merged network
      description: Retrieve an IPv4 merged network.
      operationId: getMergeNetwork
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A merged network
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/IPv4Network'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4NetworkResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/IPv4Network'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/splits/{collectionId}/networks/{id}:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a single network partition
      description: Retrieve an IPv4 network partition.
      operationId: getSplitNetwork
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A network partition
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/IPv4Network'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4NetworkResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/IPv4Network'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/notificationGroups:
    get:
      tags:
        - Monitoring Resources
      summary: Retrieve a collection of notification groups.
      description: Retrieve a list of all notification groups. The Event Notification Service notifies Address Manager users within a notification group of events that occur on the system based on the event subscriptions configured for the notification group.
      operationId: getNotificationGroups
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: A collection of notification groups
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/NotificationGroupCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/NotificationGroup'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/NotificationGroupResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/NotificationGroup'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Monitoring Resources
      summary: Create a new notification group.
      description: Create a new notification group. You can use notifications to alert users of warnings and error conditions that may require attention to resolve, and to keep users advised of general system activity.
      operationId: postNotificationGroup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/NotificationGroupPostRequestBody'
            examples:
              notificationGroupExampleNotificationTypeSnmpTrapService:
                $ref: '#/components/examples/notificationGroupExampleNotificationTypeSnmpTrapService'
              notificationGroupExampleNotificationTypeSmtpService:
                $ref: '#/components/examples/notificationGroupExampleNotificationTypeSmtpService'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationGroupPostRequestBody'
            examples:
              notificationGroupExampleNotificationTypeSnmpTrapService:
                $ref: '#/components/examples/notificationGroupExampleNotificationTypeSnmpTrapService'
              notificationGroupExampleNotificationTypeSmtpService:
                $ref: '#/components/examples/notificationGroupExampleNotificationTypeSmtpService'
            encoding: {}
      responses:
        "201":
          description: The newly created notification group
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/NotificationGroup'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/NotificationGroupResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationGroup'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/notificationGroups/{id}:
    get:
      tags:
        - Monitoring Resources
      summary: Retrieve a single notification group.
      description: Retrieve a specific notification group. The Event Notification Service notifies Address Manager users within a notification group of events that occur on the system based on the event subscriptions configured for the notification group.
      operationId: getNotificationGroup
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A notification group
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/NotificationGroup'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/NotificationGroupResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationGroup'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Monitoring Resources
      summary: Update a notification group.
      description: Update an existing notification group.
      operationId: putNotificationGroup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/NotificationGroupPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationGroupPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated notification group
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/NotificationGroup'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/NotificationGroupResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationGroup'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - Monitoring Resources
      summary: Delete a notification group.
      description: Delete an existing notification group.
      operationId: deleteNotificationGroup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/transactions/{collectionId}/operations:
    get:
      tags:
        - Monitoring Resources
      summary: Retrieve a collection of operations
      description: Retrieve a collection of all operations performed during a transaction.
      operationId: getTransactionOperations
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of operations
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/OperationCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Operation'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/OperationResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Operation'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/transactions/{collectionId}/operations/{id}:
    get:
      tags:
        - Monitoring Resources
      summary: Retrieve a single operation
      description: Retrieve information about a single operation performed during a transaction.
      operationId: getTransactionOperation
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: An operation
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Operation'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/OperationResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/patchApplications:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of applied patches
      description: Retrieve a collection of applied patches for all servers.
      operationId: getPatchApplications
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of applied patches
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ServerPatchApplicationCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ServerPatchApplication'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ServerPatchApplicationResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/ServerPatchApplication'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/patchApplications/{id}:
    get:
      tags:
        - Server Resources
      summary: Retrieve an applied patch
      description: Retrieve a single applied patch.
      operationId: getPatchApplication
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: An applied patch
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ServerPatchApplication'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ServerPatchApplicationResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ServerPatchApplication'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/servers/{collectionId}/patchApplications:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of applied patches
      description: Retrieve a collection of applied patches for a server.
      operationId: getServerPatchApplications
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of applied patches
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ServerPatchApplicationCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ServerPatchApplication'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ServerPatchApplicationResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/ServerPatchApplication'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Server Resources
      summary: Applies a patch
      description: Applies a patch on a server.
      operationId: postServerPatchApplication
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ServerPatchApplicationPostRequestBody'
            examples:
              patchApplicationExampleApplyServerPatch:
                $ref: '#/components/examples/patchApplicationExampleApplyServerPatch'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ServerPatchApplicationPostRequestBody'
            examples:
              patchApplicationExampleApplyServerPatch:
                $ref: '#/components/examples/patchApplicationExampleApplyServerPatch'
            encoding: {}
      responses:
        "201":
          description: A newly applied patch.
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ServerPatchApplication'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ServerPatchApplicationResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ServerPatchApplication'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/servers/{collectionId}/patchApplications/{id}:
    get:
      tags:
        - Server Resources
      summary: Retrieve a applied patch
      description: Retrieve a single applied patch for a server.
      operationId: getServerPatchApplication
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: An applied patch
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ServerPatchApplication'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ServerPatchApplicationResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ServerPatchApplication'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/patches:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve a collection of uploaded patches
      description: Retrieve a collection of all uploaded patches.
      operationId: getPatches
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of uploaded patches
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ServerPatchCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ServerPatch'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ServerPatchResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/ServerPatch'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Administrator Resources
      summary: Uploads a patch
      description: Uploads a single patch
      operationId: postPatch
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServerPatchPostRequestBody'
            encoding:
              fileInfo:
                contentType: application/json
      responses:
        "201":
          description: A newly uploaded patch
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ServerPatch'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ServerPatchResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ServerPatch'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/patches/{id}:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve an uploaded patch
      description: Retrieve a single uploaded patch.
      operationId: getPatch
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: An uploaded patch
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ServerPatch'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ServerPatchResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ServerPatch'
            text/html:
              schema:
                type: string
            application/octet-stream:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - Administrator Resources
      summary: Deletes a patch
      description: Deletes a single patch.
      operationId: deletePatch
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/policyItems:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a collection of policy items
      description: Retrieve all configured response policy items.
      operationId: getPolicyItems
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of policy items
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ResponsePolicyItemCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ResponsePolicyItem'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ResponsePolicyItemResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/ResponsePolicyItem'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/policyItems/{id}:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a single policy item
      description: Retrieve a specific response policy item.
      operationId: getPolicyItem
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A policy item
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponsePolicyItem'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ResponsePolicyItemResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePolicyItem'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - View and Zone Resources
      summary: Update a policy item
      description: Update an existing response policy item.
      operationId: putPolicyItem
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ResponsePolicyItemPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ResponsePolicyItemPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated policy item
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponsePolicyItem'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ResponsePolicyItemResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePolicyItem'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - View and Zone Resources
      summary: Delete a policy item
      description: Delete an existing response policy item.
      operationId: deletePolicyItem
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/responsePolicies/{collectionId}/policyItems:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a collection of policy items
      description: Retrieve all response policy items with a response policy.
      operationId: getResponsePolicyPolicyItems
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of policy items
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ResponsePolicyItemCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ResponsePolicyItem'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ResponsePolicyItemResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/ResponsePolicyItem'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - View and Zone Resources
      summary: Create a new policy item
      description: Create a new response policy item within a response policy. Response policy items contain the hosts and domain names that you the response policy would apply to. You must first create a response policy resource before adding a response polity item.
      operationId: postResponsePolicyPolicyItem
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ResponsePolicyItemPostRequestBody'
            examples:
              policyItemExampleRequiredFields:
                $ref: '#/components/examples/policyItemExampleRequiredFields'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ResponsePolicyItemPostRequestBody'
            examples:
              policyItemExampleRequiredFields:
                $ref: '#/components/examples/policyItemExampleRequiredFields'
            encoding: {}
      responses:
        "201":
          description: The newly created policy item
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponsePolicyItem'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ResponsePolicyItemResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePolicyItem'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/namingPolicies/{collectionId}/policyRestrictions:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a collection of naming policy restrictions
      description: Retrieve a collection of all configured naming policy restrictions. A naming policy restriction is a list of words that cannot be used as part of a resource record name.
      operationId: getNamingPolicyPolicyRestrictions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of naming policy restrictions
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/NamingPolicyRestrictionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/NamingPolicyRestriction'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/NamingPolicyRestrictionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/NamingPolicyRestriction'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/namingPolicies/{collectionId}/policyRestrictions/{id}:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a single naming policy restriction
      description: Retrieve a naming policy restriction. A naming policy restriction is a list of words that cannot be used as part of a resource record name.
      operationId: getNamingPolicyPolicyRestriction
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A naming policy restriction
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/NamingPolicyRestriction'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/NamingPolicyRestrictionResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/NamingPolicyRestriction'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/namingPolicies/{collectionId}/policyValues:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a collection of naming policy values
      description: Retrieve a collection of all configured naming policy values. A naming policy value is an individual part of a resource record, such as a specific character, an incremented number, a number or text character entered by the user, or a value selected from a predefined list.
      operationId: getNamingPolicyPolicyValues
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of naming policy values
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/NamingPolicyConnectorValueCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/NamingPolicyConnectorValue'
                            - $ref: '#/components/schemas/NamingPolicyIncrementalValue'
                            - $ref: '#/components/schemas/NamingPolicyIntegerValue'
                            - $ref: '#/components/schemas/NamingPolicyRequiredValue'
                            - $ref: '#/components/schemas/NamingPolicyTextValue'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/NamingPolicyConnectorValueResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/NamingPolicyConnectorValue'
                        - $ref: '#/components/schemas/NamingPolicyIncrementalValue'
                        - $ref: '#/components/schemas/NamingPolicyIntegerValue'
                        - $ref: '#/components/schemas/NamingPolicyRequiredValue'
                        - $ref: '#/components/schemas/NamingPolicyTextValue'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/namingPolicies/{collectionId}/policyValues/{id}:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a single naming policy value
      description: Retrieve a naming policy value. A naming policy value is an individual part of a resource record, such as a specific character, an incremented number, a number or text character entered by the user, or a value selected from a predefined list.
      operationId: getNamingPolicyPolicyValue
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A naming policy value
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/NamingPolicyConnectorValue'
                      - $ref: '#/components/schemas/NamingPolicyIncrementalValue'
                      - $ref: '#/components/schemas/NamingPolicyIntegerValue'
                      - $ref: '#/components/schemas/NamingPolicyRequiredValue'
                      - $ref: '#/components/schemas/NamingPolicyTextValue'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/NamingPolicyConnectorValueResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/NamingPolicyConnectorValue'
                  - $ref: '#/components/schemas/NamingPolicyIncrementalValue'
                  - $ref: '#/components/schemas/NamingPolicyIntegerValue'
                  - $ref: '#/components/schemas/NamingPolicyRequiredValue'
                  - $ref: '#/components/schemas/NamingPolicyTextValue'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/ranges:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of ranges
      description: Retrieve a collection of all DHCPv4/DHCPv6 ranges for all networks and configurations.
      operationId: getRanges
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of ranges
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4DHCPRangeCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4DHCPRange'
                            - $ref: '#/components/schemas/IPv6DHCPRange'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4DHCPRangeResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4DHCPRange'
                        - $ref: '#/components/schemas/IPv6DHCPRange'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/ranges/{id}:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a single range
      description: Retrieve a single DHCPv4/DHCPv6 range.
      operationId: getRange
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A range
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4DHCPRange'
                      - $ref: '#/components/schemas/IPv6DHCPRange'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4DHCPRangeResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4DHCPRange'
                  - $ref: '#/components/schemas/IPv6DHCPRange'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - IPv4 and IPv6 Resources
      summary: Update a range
      description: Update a DHCPv4/DHCPv6 range.
      operationId: putRange
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-orphaned-address-state
          in: header
          description: Indicates the state to assign DHCP allocated IPv4 addresses that are no longer part of the resized range.
          schema:
            type: string
            default: DHCP_RESERVED
            enum:
              - STATIC
              - DHCP_RESERVED
              - UNASSIGNED
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4DHCPRange: '#/components/schemas/IPv4DHCPRangePutRequestBody'
                  IPv6DHCPRange: '#/components/schemas/IPv6DHCPRangePutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4DHCPRangePutRequestBody'
                - $ref: '#/components/schemas/IPv6DHCPRangePutRequestBody'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4DHCPRange: '#/components/schemas/IPv4DHCPRangePutRequestBody'
                  IPv6DHCPRange: '#/components/schemas/IPv6DHCPRangePutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4DHCPRangePutRequestBody'
                - $ref: '#/components/schemas/IPv6DHCPRangePutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated range
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4DHCPRange'
                      - $ref: '#/components/schemas/IPv6DHCPRange'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4DHCPRangeResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4DHCPRange'
                  - $ref: '#/components/schemas/IPv6DHCPRange'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - IPv4 and IPv6 Resources
      summary: Delete a range
      description: Delete a DHCPv4/DHCPv6 range.
      operationId: deleteRange
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/merges/{collectionId}/ranges:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of merged DHCP ranges
      description: Retrieve a collection of merged IPv4 DHCP ranges.
      operationId: getMergeRanges
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of merged DHCP ranges
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4DHCPRangeCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/IPv4DHCPRange'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4DHCPRangeResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/IPv4DHCPRange'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/networks/{collectionId}/ranges:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of ranges
      description: Retrieve a collection of all DHCPv4/DHCPv6 ranges for a network.
      operationId: getNetworkRanges
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of ranges
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4DHCPRangeCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4DHCPRange'
                            - $ref: '#/components/schemas/IPv6DHCPRange'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4DHCPRangeResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4DHCPRange'
                        - $ref: '#/components/schemas/IPv6DHCPRange'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new range
      description: Create a new DHCPv4/DHCPv6 range for a network.
      operationId: postNetworkRange
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4DHCPRange: '#/components/schemas/IPv4DHCPRangePostRequestBody'
                  IPv6DHCPRange: '#/components/schemas/IPv6DHCPRangePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4DHCPRangePostRequestBody'
                - $ref: '#/components/schemas/IPv6DHCPRangePostRequestBody'
            examples:
              rangeExampleIpv4StartAndEndAddress:
                $ref: '#/components/examples/rangeExampleIpv4StartAndEndAddress'
              rangeExampleIpv4OffsetAndSize:
                $ref: '#/components/examples/rangeExampleIpv4OffsetAndSize'
              rangeExampleIpv4OffsetAndPercentage:
                $ref: '#/components/examples/rangeExampleIpv4OffsetAndPercentage'
              rangeExampleIpv4NegativeOffsetAndSize:
                $ref: '#/components/examples/rangeExampleIpv4NegativeOffsetAndSize'
              rangeExampleIpv6StartAndEndAddress:
                $ref: '#/components/examples/rangeExampleIpv6StartAndEndAddress'
              rangeExampleIpv6OffsetAndSize:
                $ref: '#/components/examples/rangeExampleIpv6OffsetAndSize'
              rangeExampleIpv6OffsetAndPercentage:
                $ref: '#/components/examples/rangeExampleIpv6OffsetAndPercentage'
              rangeExampleIpv6NegativeOffsetAndSize:
                $ref: '#/components/examples/rangeExampleIpv6NegativeOffsetAndSize'
              rangeExampleIpv6NextAvailable:
                $ref: '#/components/examples/rangeExampleIpv6NextAvailable'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4DHCPRange: '#/components/schemas/IPv4DHCPRangePostRequestBody'
                  IPv6DHCPRange: '#/components/schemas/IPv6DHCPRangePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4DHCPRangePostRequestBody'
                - $ref: '#/components/schemas/IPv6DHCPRangePostRequestBody'
            examples:
              rangeExampleIpv4StartAndEndAddress:
                $ref: '#/components/examples/rangeExampleIpv4StartAndEndAddress'
              rangeExampleIpv4OffsetAndSize:
                $ref: '#/components/examples/rangeExampleIpv4OffsetAndSize'
              rangeExampleIpv4OffsetAndPercentage:
                $ref: '#/components/examples/rangeExampleIpv4OffsetAndPercentage'
              rangeExampleIpv4NegativeOffsetAndSize:
                $ref: '#/components/examples/rangeExampleIpv4NegativeOffsetAndSize'
              rangeExampleIpv6StartAndEndAddress:
                $ref: '#/components/examples/rangeExampleIpv6StartAndEndAddress'
              rangeExampleIpv6OffsetAndSize:
                $ref: '#/components/examples/rangeExampleIpv6OffsetAndSize'
              rangeExampleIpv6OffsetAndPercentage:
                $ref: '#/components/examples/rangeExampleIpv6OffsetAndPercentage'
              rangeExampleIpv6NegativeOffsetAndSize:
                $ref: '#/components/examples/rangeExampleIpv6NegativeOffsetAndSize'
              rangeExampleIpv6NextAvailable:
                $ref: '#/components/examples/rangeExampleIpv6NextAvailable'
            encoding: {}
      responses:
        "201":
          description: The newly created range
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4DHCPRange'
                      - $ref: '#/components/schemas/IPv6DHCPRange'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4DHCPRangeResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4DHCPRange'
                  - $ref: '#/components/schemas/IPv6DHCPRange'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/realms:
    get:
      tags:
        - Authenticator Resources
      summary: Retrieve a collection of realms
      description: Retrieve information about all Kerberos realms.
      operationId: getRealms
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of realms
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/KerberosRealmCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/KerberosRealm'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/KerberosRealmResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/KerberosRealm'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/realms/{id}:
    get:
      tags:
        - Authenticator Resources
      summary: Retrieve a single realm
      description: Retrieve information about a Kerberos realm.
      operationId: getRealm
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A Kerberos realm
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/KerberosRealm'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/KerberosRealmResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosRealm'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Authenticator Resources
      summary: Update a realm
      description: Update an existing Kerberos realm.
      operationId: putRealm
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/KerberosRealmPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/KerberosRealmPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated realm
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/KerberosRealm'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/KerberosRealmResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosRealm'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - Authenticator Resources
      summary: Delete a realm
      description: Delete an existing Kerberos realm.
      operationId: deleteRealm
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/configurations/{collectionId}/realms:
    get:
      tags:
        - Authenticator Resources
      summary: Retrieve a collection of realms
      description: Retrieve information about all Kerberos realms within a configuration.
      operationId: getConfigurationRealms
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of realms
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/KerberosRealmCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/KerberosRealm'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/KerberosRealmResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/KerberosRealm'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Authenticator Resources
      summary: Create a new Kerberos realm
      description: Create a new Kerberos realm.
      operationId: postConfigurationRealm
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/KerberosRealmPostRequestBody'
            examples:
              realmExampleRequiredFields:
                $ref: '#/components/examples/realmExampleRequiredFields'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/KerberosRealmPostRequestBody'
            examples:
              realmExampleRequiredFields:
                $ref: '#/components/examples/realmExampleRequiredFields'
            encoding: {}
      responses:
        "201":
          description: The newly created realm
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/KerberosRealm'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/KerberosRealmResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosRealm'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/reconciliationPolicies:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of reconciliation policies
      description: Retrieve a collection of all IPv4/IPv6 reconciliation policies for all configurations, blocks, and networks.
      operationId: getReconciliationPolicies
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of reconciliation policies
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4ReconciliationPolicyCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4ReconciliationPolicy'
                            - $ref: '#/components/schemas/IPv6ReconciliationPolicy'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4ReconciliationPolicyResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4ReconciliationPolicy'
                        - $ref: '#/components/schemas/IPv6ReconciliationPolicy'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/reconciliationPolicies/{id}:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a single reconciliation policy
      description: Retrieve a single IPv4/IPv6 reconciliation policy.
      operationId: getReconciliationPolicy
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A reconciliation policy
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4ReconciliationPolicy'
                      - $ref: '#/components/schemas/IPv6ReconciliationPolicy'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4ReconciliationPolicyResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4ReconciliationPolicy'
                  - $ref: '#/components/schemas/IPv6ReconciliationPolicy'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - IPv4 and IPv6 Resources
      summary: Update a reconciliation policy
      description: Update an IPv4/IPv6 reconciliation policy.
      operationId: putReconciliationPolicy
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4ReconciliationPolicy: '#/components/schemas/IPv4ReconciliationPolicyPutRequestBody'
                  IPv6ReconciliationPolicy: '#/components/schemas/IPv6ReconciliationPolicyPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4ReconciliationPolicyPutRequestBody'
                - $ref: '#/components/schemas/IPv6ReconciliationPolicyPutRequestBody'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4ReconciliationPolicy: '#/components/schemas/IPv4ReconciliationPolicyPutRequestBody'
                  IPv6ReconciliationPolicy: '#/components/schemas/IPv6ReconciliationPolicyPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4ReconciliationPolicyPutRequestBody'
                - $ref: '#/components/schemas/IPv6ReconciliationPolicyPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated reconciliation policy
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4ReconciliationPolicy'
                      - $ref: '#/components/schemas/IPv6ReconciliationPolicy'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4ReconciliationPolicyResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4ReconciliationPolicy'
                  - $ref: '#/components/schemas/IPv6ReconciliationPolicy'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - IPv4 and IPv6 Resources
      summary: Delete a reconciliation policy
      description: Delete an IPv4/IPv6 reconciliation policy.
      operationId: deleteReconciliationPolicy
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/blocks/{collectionId}/reconciliationPolicies:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of reconciliation policies
      description: Retrieve a collection of all IPv4/IPv6 reconciliation policies configured for a block resource.
      operationId: getBlockReconciliationPolicies
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of reconciliation policies
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4ReconciliationPolicyCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4ReconciliationPolicy'
                            - $ref: '#/components/schemas/IPv6ReconciliationPolicy'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4ReconciliationPolicyResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4ReconciliationPolicy'
                        - $ref: '#/components/schemas/IPv6ReconciliationPolicy'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new reconciliation policy
      description: Create a new reconciliation policy for a block.
      operationId: postBlockReconciliationPolicy
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4ReconciliationPolicy: '#/components/schemas/IPv4ReconciliationPolicyPostRequestBody'
                  IPv6ReconciliationPolicy: '#/components/schemas/IPv6ReconciliationPolicyPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4ReconciliationPolicyPostRequestBody'
                - $ref: '#/components/schemas/IPv6ReconciliationPolicyPostRequestBody'
            examples:
              reconciliationPolicyExampleIpv4NoDiscovery:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4NoDiscovery'
              reconciliationPolicyExampleIpv4Snmpv1:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4Snmpv1'
              reconciliationPolicyExampleIpv4Snmpv2c:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4Snmpv2c'
              reconciliationPolicyExampleIpv4Snmpv3:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4Snmpv3'
              reconciliationPolicyExampleIpv4PingSweep:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4PingSweep'
              reconciliationPolicyExampleIpv4Snmpv3Pingsweep:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4Snmpv3Pingsweep'
              reconciliationPolicyExampleIpv6NoDiscovery:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv6NoDiscovery'
              reconciliationPolicyExampleIpv6Snmpv1:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv6Snmpv1'
              reconciliationPolicyExampleIpv6Snmpv2:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv6Snmpv2'
              reconciliationPolicyExampleIpv6Snmpv3:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv6Snmpv3'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4ReconciliationPolicy: '#/components/schemas/IPv4ReconciliationPolicyPostRequestBody'
                  IPv6ReconciliationPolicy: '#/components/schemas/IPv6ReconciliationPolicyPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4ReconciliationPolicyPostRequestBody'
                - $ref: '#/components/schemas/IPv6ReconciliationPolicyPostRequestBody'
            examples:
              reconciliationPolicyExampleIpv4NoDiscovery:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4NoDiscovery'
              reconciliationPolicyExampleIpv4Snmpv1:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4Snmpv1'
              reconciliationPolicyExampleIpv4Snmpv2c:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4Snmpv2c'
              reconciliationPolicyExampleIpv4Snmpv3:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4Snmpv3'
              reconciliationPolicyExampleIpv4PingSweep:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4PingSweep'
              reconciliationPolicyExampleIpv4Snmpv3Pingsweep:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4Snmpv3Pingsweep'
              reconciliationPolicyExampleIpv6NoDiscovery:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv6NoDiscovery'
              reconciliationPolicyExampleIpv6Snmpv1:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv6Snmpv1'
              reconciliationPolicyExampleIpv6Snmpv2:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv6Snmpv2'
              reconciliationPolicyExampleIpv6Snmpv3:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv6Snmpv3'
            encoding: {}
      responses:
        "201":
          description: The newly created reconciliation policy
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4ReconciliationPolicy'
                      - $ref: '#/components/schemas/IPv6ReconciliationPolicy'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4ReconciliationPolicyResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4ReconciliationPolicy'
                  - $ref: '#/components/schemas/IPv6ReconciliationPolicy'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/configurations/{collectionId}/reconciliationPolicies:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of reconciliation policies
      description: Retrieve a collection of all IPv4 reconciliation policies configured for a configuration resource.
      operationId: getConfigurationReconciliationPolicies
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of reconciliation policies
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4ReconciliationPolicyCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/IPv4ReconciliationPolicy'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4ReconciliationPolicyResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/IPv4ReconciliationPolicy'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new reconciliation policy
      description: Create a new IPv4 reconciliation policy for a configuration.
      operationId: postConfigurationReconciliationPolicy
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/IPv4ReconciliationPolicyPostRequestBody'
            examples:
              reconciliationPolicyExampleIpv4NoDiscovery:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4NoDiscovery'
              reconciliationPolicyExampleIpv4Snmpv1:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4Snmpv1'
              reconciliationPolicyExampleIpv4Snmpv2c:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4Snmpv2c'
              reconciliationPolicyExampleIpv4Snmpv3:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4Snmpv3'
              reconciliationPolicyExampleIpv4PingSweep:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4PingSweep'
              reconciliationPolicyExampleIpv4Snmpv3Pingsweep:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4Snmpv3Pingsweep'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/IPv4ReconciliationPolicyPostRequestBody'
            examples:
              reconciliationPolicyExampleIpv4NoDiscovery:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4NoDiscovery'
              reconciliationPolicyExampleIpv4Snmpv1:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4Snmpv1'
              reconciliationPolicyExampleIpv4Snmpv2c:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4Snmpv2c'
              reconciliationPolicyExampleIpv4Snmpv3:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4Snmpv3'
              reconciliationPolicyExampleIpv4PingSweep:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4PingSweep'
              reconciliationPolicyExampleIpv4Snmpv3Pingsweep:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4Snmpv3Pingsweep'
            encoding: {}
      responses:
        "201":
          description: The newly created reconciliation policy
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/IPv4ReconciliationPolicy'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4ReconciliationPolicyResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/IPv4ReconciliationPolicy'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/networks/{collectionId}/reconciliationPolicies:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of reconciliation policies
      description: Retrieve a collection of all IPv4/IPv6 reconciliation policies configured for a network resource.
      operationId: getNetworkReconciliationPolicies
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of reconciliation policies
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4ReconciliationPolicyCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4ReconciliationPolicy'
                            - $ref: '#/components/schemas/IPv6ReconciliationPolicy'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4ReconciliationPolicyResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4ReconciliationPolicy'
                        - $ref: '#/components/schemas/IPv6ReconciliationPolicy'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new reconciliation policy
      description: Create a new reconciliation policy for a network.
      operationId: postNetworkReconciliationPolicy
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4ReconciliationPolicy: '#/components/schemas/IPv4ReconciliationPolicyPostRequestBody'
                  IPv6ReconciliationPolicy: '#/components/schemas/IPv6ReconciliationPolicyPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4ReconciliationPolicyPostRequestBody'
                - $ref: '#/components/schemas/IPv6ReconciliationPolicyPostRequestBody'
            examples:
              reconciliationPolicyExampleIpv4NoDiscovery:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4NoDiscovery'
              reconciliationPolicyExampleIpv4Snmpv1:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4Snmpv1'
              reconciliationPolicyExampleIpv4Snmpv2c:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4Snmpv2c'
              reconciliationPolicyExampleIpv4Snmpv3:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4Snmpv3'
              reconciliationPolicyExampleIpv4PingSweep:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4PingSweep'
              reconciliationPolicyExampleIpv4Snmpv3Pingsweep:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4Snmpv3Pingsweep'
              reconciliationPolicyExampleIpv6NoDiscovery:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv6NoDiscovery'
              reconciliationPolicyExampleIpv6Snmpv1:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv6Snmpv1'
              reconciliationPolicyExampleIpv6Snmpv2:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv6Snmpv2'
              reconciliationPolicyExampleIpv6Snmpv3:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv6Snmpv3'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4ReconciliationPolicy: '#/components/schemas/IPv4ReconciliationPolicyPostRequestBody'
                  IPv6ReconciliationPolicy: '#/components/schemas/IPv6ReconciliationPolicyPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4ReconciliationPolicyPostRequestBody'
                - $ref: '#/components/schemas/IPv6ReconciliationPolicyPostRequestBody'
            examples:
              reconciliationPolicyExampleIpv4NoDiscovery:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4NoDiscovery'
              reconciliationPolicyExampleIpv4Snmpv1:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4Snmpv1'
              reconciliationPolicyExampleIpv4Snmpv2c:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4Snmpv2c'
              reconciliationPolicyExampleIpv4Snmpv3:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4Snmpv3'
              reconciliationPolicyExampleIpv4PingSweep:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4PingSweep'
              reconciliationPolicyExampleIpv4Snmpv3Pingsweep:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4Snmpv3Pingsweep'
              reconciliationPolicyExampleIpv6NoDiscovery:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv6NoDiscovery'
              reconciliationPolicyExampleIpv6Snmpv1:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv6Snmpv1'
              reconciliationPolicyExampleIpv6Snmpv2:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv6Snmpv2'
              reconciliationPolicyExampleIpv6Snmpv3:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv6Snmpv3'
            encoding: {}
      responses:
        "201":
          description: The newly created reconciliation policy
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4ReconciliationPolicy'
                      - $ref: '#/components/schemas/IPv6ReconciliationPolicy'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4ReconciliationPolicyResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4ReconciliationPolicy'
                  - $ref: '#/components/schemas/IPv6ReconciliationPolicy'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/resourceRecords:
    get:
      tags:
        - Resource Record Resources
      summary: Retrieve a collection of resource records
      description: Retrieve a list of all resource records.
      operationId: getResourceRecords
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of resource records
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/AliasRecordCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/AliasRecord'
                            - $ref: '#/components/schemas/ExternalHostRecord'
                            - $ref: '#/components/schemas/GenericRecord'
                            - $ref: '#/components/schemas/HINFORecord'
                            - $ref: '#/components/schemas/HostRecord'
                            - $ref: '#/components/schemas/HTTPSRecord'
                            - $ref: '#/components/schemas/MXRecord'
                            - $ref: '#/components/schemas/NAPTRRecord'
                            - $ref: '#/components/schemas/SRVRecord'
                            - $ref: '#/components/schemas/SVCBRecord'
                            - $ref: '#/components/schemas/TXTRecord'
                            - $ref: '#/components/schemas/URIRecord'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/AliasRecordResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/AliasRecord'
                        - $ref: '#/components/schemas/ExternalHostRecord'
                        - $ref: '#/components/schemas/GenericRecord'
                        - $ref: '#/components/schemas/HINFORecord'
                        - $ref: '#/components/schemas/HostRecord'
                        - $ref: '#/components/schemas/HTTPSRecord'
                        - $ref: '#/components/schemas/MXRecord'
                        - $ref: '#/components/schemas/NAPTRRecord'
                        - $ref: '#/components/schemas/SRVRecord'
                        - $ref: '#/components/schemas/SVCBRecord'
                        - $ref: '#/components/schemas/TXTRecord'
                        - $ref: '#/components/schemas/URIRecord'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/resourceRecords/{id}:
    get:
      tags:
        - Resource Record Resources
      summary: Retrieve a single resource record
      description: Retrieve information about a specific resource record.
      operationId: getResourceRecord
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A resource record
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/AliasRecord'
                      - $ref: '#/components/schemas/ExternalHostRecord'
                      - $ref: '#/components/schemas/GenericRecord'
                      - $ref: '#/components/schemas/HINFORecord'
                      - $ref: '#/components/schemas/HostRecord'
                      - $ref: '#/components/schemas/HTTPSRecord'
                      - $ref: '#/components/schemas/MXRecord'
                      - $ref: '#/components/schemas/NAPTRRecord'
                      - $ref: '#/components/schemas/SRVRecord'
                      - $ref: '#/components/schemas/SVCBRecord'
                      - $ref: '#/components/schemas/TXTRecord'
                      - $ref: '#/components/schemas/URIRecord'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/AliasRecordResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AliasRecord'
                  - $ref: '#/components/schemas/ExternalHostRecord'
                  - $ref: '#/components/schemas/GenericRecord'
                  - $ref: '#/components/schemas/HINFORecord'
                  - $ref: '#/components/schemas/HostRecord'
                  - $ref: '#/components/schemas/HTTPSRecord'
                  - $ref: '#/components/schemas/MXRecord'
                  - $ref: '#/components/schemas/NAPTRRecord'
                  - $ref: '#/components/schemas/SRVRecord'
                  - $ref: '#/components/schemas/SVCBRecord'
                  - $ref: '#/components/schemas/TXTRecord'
                  - $ref: '#/components/schemas/URIRecord'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Resource Record Resources
      summary: Update a resource record
      description: Update an existing resource record.
      operationId: putResourceRecord
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-allow-address-overlap
          in: header
          description: Indicates whether IP address overlap detection will be overridden for auto-created networks.
          schema:
            type: boolean
            default: false
        - name: x-bcn-auto-create-network
          in: header
          description: Indicates whether a network will be automatically created if a network containing the IP address or addresses specified in the resource record does not already exist.
          schema:
            type: boolean
            default: false
        - name: x-bcn-override-naming-policy
          in: header
          description: Indicates whether to override the naming policy for the view or zone when creating the record.
          schema:
            type: boolean
            default: false
        - name: x-bcn-same-as-zone
          in: header
          description: Indicates whether the zone name will be used for the resource record name.
          schema:
            type: boolean
            default: false
        - name: x-bcn-update-servers
          in: header
          description: Indicates whether Address Manager automatically deploys resource record updates to servers.
          schema:
            type: boolean
            default: true
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  AliasRecord: '#/components/schemas/AliasRecordPutRequestBody'
                  ExternalHostRecord: '#/components/schemas/ExternalHostRecordPutRequestBody'
                  GenericRecord: '#/components/schemas/GenericRecordPutRequestBody'
                  HINFORecord: '#/components/schemas/HINFORecordPutRequestBody'
                  HostRecord: '#/components/schemas/HostRecordPutRequestBody'
                  HTTPSRecord: '#/components/schemas/HTTPSRecordPutRequestBody'
                  MXRecord: '#/components/schemas/MXRecordPutRequestBody'
                  NAPTRRecord: '#/components/schemas/NAPTRRecordPutRequestBody'
                  SRVRecord: '#/components/schemas/SRVRecordPutRequestBody'
                  SVCBRecord: '#/components/schemas/SVCBRecordPutRequestBody'
                  TXTRecord: '#/components/schemas/TXTRecordPutRequestBody'
                  URIRecord: '#/components/schemas/URIRecordPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/AliasRecordPutRequestBody'
                - $ref: '#/components/schemas/ExternalHostRecordPutRequestBody'
                - $ref: '#/components/schemas/GenericRecordPutRequestBody'
                - $ref: '#/components/schemas/HINFORecordPutRequestBody'
                - $ref: '#/components/schemas/HostRecordPutRequestBody'
                - $ref: '#/components/schemas/HTTPSRecordPutRequestBody'
                - $ref: '#/components/schemas/MXRecordPutRequestBody'
                - $ref: '#/components/schemas/NAPTRRecordPutRequestBody'
                - $ref: '#/components/schemas/SRVRecordPutRequestBody'
                - $ref: '#/components/schemas/SVCBRecordPutRequestBody'
                - $ref: '#/components/schemas/TXTRecordPutRequestBody'
                - $ref: '#/components/schemas/URIRecordPutRequestBody'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  AliasRecord: '#/components/schemas/AliasRecordPutRequestBody'
                  ExternalHostRecord: '#/components/schemas/ExternalHostRecordPutRequestBody'
                  GenericRecord: '#/components/schemas/GenericRecordPutRequestBody'
                  HINFORecord: '#/components/schemas/HINFORecordPutRequestBody'
                  HostRecord: '#/components/schemas/HostRecordPutRequestBody'
                  HTTPSRecord: '#/components/schemas/HTTPSRecordPutRequestBody'
                  MXRecord: '#/components/schemas/MXRecordPutRequestBody'
                  NAPTRRecord: '#/components/schemas/NAPTRRecordPutRequestBody'
                  SRVRecord: '#/components/schemas/SRVRecordPutRequestBody'
                  SVCBRecord: '#/components/schemas/SVCBRecordPutRequestBody'
                  TXTRecord: '#/components/schemas/TXTRecordPutRequestBody'
                  URIRecord: '#/components/schemas/URIRecordPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/AliasRecordPutRequestBody'
                - $ref: '#/components/schemas/ExternalHostRecordPutRequestBody'
                - $ref: '#/components/schemas/GenericRecordPutRequestBody'
                - $ref: '#/components/schemas/HINFORecordPutRequestBody'
                - $ref: '#/components/schemas/HostRecordPutRequestBody'
                - $ref: '#/components/schemas/HTTPSRecordPutRequestBody'
                - $ref: '#/components/schemas/MXRecordPutRequestBody'
                - $ref: '#/components/schemas/NAPTRRecordPutRequestBody'
                - $ref: '#/components/schemas/SRVRecordPutRequestBody'
                - $ref: '#/components/schemas/SVCBRecordPutRequestBody'
                - $ref: '#/components/schemas/TXTRecordPutRequestBody'
                - $ref: '#/components/schemas/URIRecordPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated resource record
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/AliasRecord'
                      - $ref: '#/components/schemas/ExternalHostRecord'
                      - $ref: '#/components/schemas/GenericRecord'
                      - $ref: '#/components/schemas/HINFORecord'
                      - $ref: '#/components/schemas/HostRecord'
                      - $ref: '#/components/schemas/HTTPSRecord'
                      - $ref: '#/components/schemas/MXRecord'
                      - $ref: '#/components/schemas/NAPTRRecord'
                      - $ref: '#/components/schemas/SRVRecord'
                      - $ref: '#/components/schemas/SVCBRecord'
                      - $ref: '#/components/schemas/TXTRecord'
                      - $ref: '#/components/schemas/URIRecord'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/AliasRecordResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AliasRecord'
                  - $ref: '#/components/schemas/ExternalHostRecord'
                  - $ref: '#/components/schemas/GenericRecord'
                  - $ref: '#/components/schemas/HINFORecord'
                  - $ref: '#/components/schemas/HostRecord'
                  - $ref: '#/components/schemas/HTTPSRecord'
                  - $ref: '#/components/schemas/MXRecord'
                  - $ref: '#/components/schemas/NAPTRRecord'
                  - $ref: '#/components/schemas/SRVRecord'
                  - $ref: '#/components/schemas/SVCBRecord'
                  - $ref: '#/components/schemas/TXTRecord'
                  - $ref: '#/components/schemas/URIRecord'
        "202":
          description: The workflow request for the pending resource record update
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/AliasRecord'
                      - $ref: '#/components/schemas/ExternalHostRecord'
                      - $ref: '#/components/schemas/GenericRecord'
                      - $ref: '#/components/schemas/HINFORecord'
                      - $ref: '#/components/schemas/HostRecord'
                      - $ref: '#/components/schemas/HTTPSRecord'
                      - $ref: '#/components/schemas/MXRecord'
                      - $ref: '#/components/schemas/NAPTRRecord'
                      - $ref: '#/components/schemas/SRVRecord'
                      - $ref: '#/components/schemas/SVCBRecord'
                      - $ref: '#/components/schemas/TXTRecord'
                      - $ref: '#/components/schemas/URIRecord'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/AliasRecordResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AliasRecord'
                  - $ref: '#/components/schemas/ExternalHostRecord'
                  - $ref: '#/components/schemas/GenericRecord'
                  - $ref: '#/components/schemas/HINFORecord'
                  - $ref: '#/components/schemas/HostRecord'
                  - $ref: '#/components/schemas/HTTPSRecord'
                  - $ref: '#/components/schemas/MXRecord'
                  - $ref: '#/components/schemas/NAPTRRecord'
                  - $ref: '#/components/schemas/SRVRecord'
                  - $ref: '#/components/schemas/SVCBRecord'
                  - $ref: '#/components/schemas/TXTRecord'
                  - $ref: '#/components/schemas/URIRecord'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - Resource Record Resources
      summary: Delete a resource record
      description: Delete a specific resource record.
      operationId: deleteResourceRecord
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-orphaned-address-state
          in: header
          description: Indicates the state to assign IP addresses that are orphaned after deleting the resource record they are linked to.
          schema:
            type: string
            enum:
              - UNASSIGNED
        - name: x-bcn-update-servers
          in: header
          description: Indicates whether Address Manager automatically deploys resource record updates to servers.
          schema:
            type: boolean
            default: true
        - $ref: '#/components/parameters/id'
      responses:
        "202":
          description: The workflow request for the pending resource record deletion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowRequest'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WorkflowRequest'
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/addresses/{collectionId}/resourceRecords:
    get:
      tags:
        - Resource Record Resources
      summary: Retrieve a collection of linked resource records
      description: Retrieve all resource records linked to an IP address.
      operationId: getAddressResourceRecords
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of resource records
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ExternalHostRecordCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/ExternalHostRecord'
                            - $ref: '#/components/schemas/HostRecord'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ExternalHostRecordResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/ExternalHostRecord'
                        - $ref: '#/components/schemas/HostRecord'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Resource Record Resources
      summary: Link a resource record to an address
      description: Link a Host or External Host record to an IP address.
      operationId: postAddressResourceRecord
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-allow-address-overlap
          in: header
          description: Indicates whether IP address overlap detection will be overridden for auto-created networks.
          schema:
            type: boolean
            default: false
        - name: x-bcn-auto-create-network
          in: header
          description: Indicates whether a network will be automatically created if a network containing the IP address or addresses specified in the resource record does not already exist.
          schema:
            type: boolean
            default: false
        - name: x-bcn-override-naming-policy
          in: header
          description: Indicates whether to override the naming policy for the view or zone when creating the record.
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  ExternalHostRecord: '#/components/schemas/ExternalHostRecordPostRequestBody'
                  HostRecord: '#/components/schemas/HostRecordPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/ExternalHostRecordPostRequestBody'
                - $ref: '#/components/schemas/HostRecordPostRequestBody'
            examples:
              resourceRecordExampleLinkHostRecord:
                $ref: '#/components/examples/resourceRecordExampleLinkHostRecord'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  ExternalHostRecord: '#/components/schemas/ExternalHostRecordPostRequestBody'
                  HostRecord: '#/components/schemas/HostRecordPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/ExternalHostRecordPostRequestBody'
                - $ref: '#/components/schemas/HostRecordPostRequestBody'
            examples:
              resourceRecordExampleLinkHostRecord:
                $ref: '#/components/examples/resourceRecordExampleLinkHostRecord'
            encoding: {}
      responses:
        "201":
          description: The linked resource record
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/ExternalHostRecord'
                      - $ref: '#/components/schemas/HostRecord'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ExternalHostRecordResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExternalHostRecord'
                  - $ref: '#/components/schemas/HostRecord'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/templates/{collectionId}/resourceRecords:
    get:
      tags:
        - Resource Record Resources
      summary: Retrieve a collection of resource records
      description: Retrieve a list of all resource records within a specified DNS zone or DNS zone template.
      operationId: getTemplateResourceRecords
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of resource records
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/AliasRecordCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/AliasRecord'
                            - $ref: '#/components/schemas/ExternalHostRecord'
                            - $ref: '#/components/schemas/GenericRecord'
                            - $ref: '#/components/schemas/HINFORecord'
                            - $ref: '#/components/schemas/HostRecord'
                            - $ref: '#/components/schemas/HTTPSRecord'
                            - $ref: '#/components/schemas/MXRecord'
                            - $ref: '#/components/schemas/NAPTRRecord'
                            - $ref: '#/components/schemas/SRVRecord'
                            - $ref: '#/components/schemas/SVCBRecord'
                            - $ref: '#/components/schemas/TXTRecord'
                            - $ref: '#/components/schemas/URIRecord'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/AliasRecordResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/AliasRecord'
                        - $ref: '#/components/schemas/ExternalHostRecord'
                        - $ref: '#/components/schemas/GenericRecord'
                        - $ref: '#/components/schemas/HINFORecord'
                        - $ref: '#/components/schemas/HostRecord'
                        - $ref: '#/components/schemas/HTTPSRecord'
                        - $ref: '#/components/schemas/MXRecord'
                        - $ref: '#/components/schemas/NAPTRRecord'
                        - $ref: '#/components/schemas/SRVRecord'
                        - $ref: '#/components/schemas/SVCBRecord'
                        - $ref: '#/components/schemas/TXTRecord'
                        - $ref: '#/components/schemas/URIRecord'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Resource Record Resources
      summary: Create a new resource record
      description: Create a new resource record within a specified DNS zone or DNS zone template.
      operationId: postTemplateResourceRecord
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-allow-address-overlap
          in: header
          description: Indicates whether IP address overlap detection will be overridden for auto-created networks.
          schema:
            type: boolean
            default: false
        - name: x-bcn-auto-create-network
          in: header
          description: Indicates whether a network will be automatically created if a network containing the IP address or addresses specified in the resource record does not already exist.
          schema:
            type: boolean
            default: false
        - name: x-bcn-override-naming-policy
          in: header
          description: Indicates whether to override the naming policy for the view or zone when creating the record.
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  AliasRecord: '#/components/schemas/AliasRecordPostRequestBody'
                  ExternalHostRecord: '#/components/schemas/ExternalHostRecordPostRequestBody'
                  GenericRecord: '#/components/schemas/GenericRecordPostRequestBody'
                  HINFORecord: '#/components/schemas/HINFORecordPostRequestBody'
                  HostRecord: '#/components/schemas/HostRecordPostRequestBody'
                  HTTPSRecord: '#/components/schemas/HTTPSRecordPostRequestBody'
                  MXRecord: '#/components/schemas/MXRecordPostRequestBody'
                  NAPTRRecord: '#/components/schemas/NAPTRRecordPostRequestBody'
                  SRVRecord: '#/components/schemas/SRVRecordPostRequestBody'
                  SVCBRecord: '#/components/schemas/SVCBRecordPostRequestBody'
                  TXTRecord: '#/components/schemas/TXTRecordPostRequestBody'
                  URIRecord: '#/components/schemas/URIRecordPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/AliasRecordPostRequestBody'
                - $ref: '#/components/schemas/ExternalHostRecordPostRequestBody'
                - $ref: '#/components/schemas/GenericRecordPostRequestBody'
                - $ref: '#/components/schemas/HINFORecordPostRequestBody'
                - $ref: '#/components/schemas/HostRecordPostRequestBody'
                - $ref: '#/components/schemas/HTTPSRecordPostRequestBody'
                - $ref: '#/components/schemas/MXRecordPostRequestBody'
                - $ref: '#/components/schemas/NAPTRRecordPostRequestBody'
                - $ref: '#/components/schemas/SRVRecordPostRequestBody'
                - $ref: '#/components/schemas/SVCBRecordPostRequestBody'
                - $ref: '#/components/schemas/TXTRecordPostRequestBody'
                - $ref: '#/components/schemas/URIRecordPostRequestBody'
            examples:
              resourceRecordExampleAlias:
                $ref: '#/components/examples/resourceRecordExampleAlias'
              resourceRecordExampleExternalHost:
                $ref: '#/components/examples/resourceRecordExampleExternalHost'
              resourceRecordExampleGeneric:
                $ref: '#/components/examples/resourceRecordExampleGeneric'
              resourceRecordExampleHinfo:
                $ref: '#/components/examples/resourceRecordExampleHinfo'
              resourceRecordExampleHost:
                $ref: '#/components/examples/resourceRecordExampleHost'
              resourceRecordExampleMx:
                $ref: '#/components/examples/resourceRecordExampleMx'
              resourceRecordExampleNaptr:
                $ref: '#/components/examples/resourceRecordExampleNaptr'
              resourceRecordExampleSrv:
                $ref: '#/components/examples/resourceRecordExampleSrv'
              resourceRecordExampleTxt:
                $ref: '#/components/examples/resourceRecordExampleTxt'
              resourceRecordExampleUri:
                $ref: '#/components/examples/resourceRecordExampleUri'
              resourceRecordExampleHttps:
                $ref: '#/components/examples/resourceRecordExampleHttps'
              resourceRecordExampleSvcb:
                $ref: '#/components/examples/resourceRecordExampleSvcb'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  AliasRecord: '#/components/schemas/AliasRecordPostRequestBody'
                  ExternalHostRecord: '#/components/schemas/ExternalHostRecordPostRequestBody'
                  GenericRecord: '#/components/schemas/GenericRecordPostRequestBody'
                  HINFORecord: '#/components/schemas/HINFORecordPostRequestBody'
                  HostRecord: '#/components/schemas/HostRecordPostRequestBody'
                  HTTPSRecord: '#/components/schemas/HTTPSRecordPostRequestBody'
                  MXRecord: '#/components/schemas/MXRecordPostRequestBody'
                  NAPTRRecord: '#/components/schemas/NAPTRRecordPostRequestBody'
                  SRVRecord: '#/components/schemas/SRVRecordPostRequestBody'
                  SVCBRecord: '#/components/schemas/SVCBRecordPostRequestBody'
                  TXTRecord: '#/components/schemas/TXTRecordPostRequestBody'
                  URIRecord: '#/components/schemas/URIRecordPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/AliasRecordPostRequestBody'
                - $ref: '#/components/schemas/ExternalHostRecordPostRequestBody'
                - $ref: '#/components/schemas/GenericRecordPostRequestBody'
                - $ref: '#/components/schemas/HINFORecordPostRequestBody'
                - $ref: '#/components/schemas/HostRecordPostRequestBody'
                - $ref: '#/components/schemas/HTTPSRecordPostRequestBody'
                - $ref: '#/components/schemas/MXRecordPostRequestBody'
                - $ref: '#/components/schemas/NAPTRRecordPostRequestBody'
                - $ref: '#/components/schemas/SRVRecordPostRequestBody'
                - $ref: '#/components/schemas/SVCBRecordPostRequestBody'
                - $ref: '#/components/schemas/TXTRecordPostRequestBody'
                - $ref: '#/components/schemas/URIRecordPostRequestBody'
            examples:
              resourceRecordExampleAlias:
                $ref: '#/components/examples/resourceRecordExampleAlias'
              resourceRecordExampleExternalHost:
                $ref: '#/components/examples/resourceRecordExampleExternalHost'
              resourceRecordExampleGeneric:
                $ref: '#/components/examples/resourceRecordExampleGeneric'
              resourceRecordExampleHinfo:
                $ref: '#/components/examples/resourceRecordExampleHinfo'
              resourceRecordExampleHost:
                $ref: '#/components/examples/resourceRecordExampleHost'
              resourceRecordExampleMx:
                $ref: '#/components/examples/resourceRecordExampleMx'
              resourceRecordExampleNaptr:
                $ref: '#/components/examples/resourceRecordExampleNaptr'
              resourceRecordExampleSrv:
                $ref: '#/components/examples/resourceRecordExampleSrv'
              resourceRecordExampleTxt:
                $ref: '#/components/examples/resourceRecordExampleTxt'
              resourceRecordExampleUri:
                $ref: '#/components/examples/resourceRecordExampleUri'
              resourceRecordExampleHttps:
                $ref: '#/components/examples/resourceRecordExampleHttps'
              resourceRecordExampleSvcb:
                $ref: '#/components/examples/resourceRecordExampleSvcb'
            encoding: {}
      responses:
        "201":
          description: The newly created resource record
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/AliasRecord'
                      - $ref: '#/components/schemas/ExternalHostRecord'
                      - $ref: '#/components/schemas/GenericRecord'
                      - $ref: '#/components/schemas/HINFORecord'
                      - $ref: '#/components/schemas/HostRecord'
                      - $ref: '#/components/schemas/HTTPSRecord'
                      - $ref: '#/components/schemas/MXRecord'
                      - $ref: '#/components/schemas/NAPTRRecord'
                      - $ref: '#/components/schemas/SRVRecord'
                      - $ref: '#/components/schemas/SVCBRecord'
                      - $ref: '#/components/schemas/TXTRecord'
                      - $ref: '#/components/schemas/URIRecord'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/AliasRecordResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AliasRecord'
                  - $ref: '#/components/schemas/ExternalHostRecord'
                  - $ref: '#/components/schemas/GenericRecord'
                  - $ref: '#/components/schemas/HINFORecord'
                  - $ref: '#/components/schemas/HostRecord'
                  - $ref: '#/components/schemas/HTTPSRecord'
                  - $ref: '#/components/schemas/MXRecord'
                  - $ref: '#/components/schemas/NAPTRRecord'
                  - $ref: '#/components/schemas/SRVRecord'
                  - $ref: '#/components/schemas/SVCBRecord'
                  - $ref: '#/components/schemas/TXTRecord'
                  - $ref: '#/components/schemas/URIRecord'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/workflowRequests/{collectionId}/resourceRecords:
    get:
      tags:
        - Resource Record Resources
      summary: Retrieve a collection of dependent resource record workflow requests
      description: Retrieve information about all resource record workflow requests under a parent zone that is pending workflow request approval.
      operationId: getWorkflowRequestResourceRecords
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of dependent resource record workflow requests
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/AliasRecordCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/AliasRecord'
                            - $ref: '#/components/schemas/GenericRecord'
                            - $ref: '#/components/schemas/HINFORecord'
                            - $ref: '#/components/schemas/HostRecord'
                            - $ref: '#/components/schemas/HTTPSRecord'
                            - $ref: '#/components/schemas/MXRecord'
                            - $ref: '#/components/schemas/NAPTRRecord'
                            - $ref: '#/components/schemas/SRVRecord'
                            - $ref: '#/components/schemas/SVCBRecord'
                            - $ref: '#/components/schemas/TXTRecord'
                            - $ref: '#/components/schemas/URIRecord'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/AliasRecordResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/AliasRecord'
                        - $ref: '#/components/schemas/GenericRecord'
                        - $ref: '#/components/schemas/HINFORecord'
                        - $ref: '#/components/schemas/HostRecord'
                        - $ref: '#/components/schemas/HTTPSRecord'
                        - $ref: '#/components/schemas/MXRecord'
                        - $ref: '#/components/schemas/NAPTRRecord'
                        - $ref: '#/components/schemas/SRVRecord'
                        - $ref: '#/components/schemas/SVCBRecord'
                        - $ref: '#/components/schemas/TXTRecord'
                        - $ref: '#/components/schemas/URIRecord'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Resource Record Resources
      summary: Create a new dependent resource record workflow request
      description: Create a new resource record workflow request under a zone that is pending workflow request approval.
      operationId: postWorkflowRequestResourceRecord
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-allow-address-overlap
          in: header
          description: Indicates whether IP address overlap detection will be overridden for auto-created networks.
          schema:
            type: boolean
            default: false
        - name: x-bcn-override-naming-policy
          in: header
          description: Indicates whether to override the naming policy for the view or zone when creating the record.
          schema:
            type: boolean
            default: false
        - name: x-bcn-same-as-zone
          in: header
          description: Indicates whether the zone name will be used for the resource record name.
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  AliasRecord: '#/components/schemas/AliasRecordPostRequestBody'
                  GenericRecord: '#/components/schemas/GenericRecordPostRequestBody'
                  HINFORecord: '#/components/schemas/HINFORecordPostRequestBody'
                  HostRecord: '#/components/schemas/HostRecordPostRequestBody'
                  HTTPSRecord: '#/components/schemas/HTTPSRecordPostRequestBody'
                  MXRecord: '#/components/schemas/MXRecordPostRequestBody'
                  NAPTRRecord: '#/components/schemas/NAPTRRecordPostRequestBody'
                  SRVRecord: '#/components/schemas/SRVRecordPostRequestBody'
                  SVCBRecord: '#/components/schemas/SVCBRecordPostRequestBody'
                  TXTRecord: '#/components/schemas/TXTRecordPostRequestBody'
                  URIRecord: '#/components/schemas/URIRecordPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/AliasRecordPostRequestBody'
                - $ref: '#/components/schemas/GenericRecordPostRequestBody'
                - $ref: '#/components/schemas/HINFORecordPostRequestBody'
                - $ref: '#/components/schemas/HostRecordPostRequestBody'
                - $ref: '#/components/schemas/HTTPSRecordPostRequestBody'
                - $ref: '#/components/schemas/MXRecordPostRequestBody'
                - $ref: '#/components/schemas/NAPTRRecordPostRequestBody'
                - $ref: '#/components/schemas/SRVRecordPostRequestBody'
                - $ref: '#/components/schemas/SVCBRecordPostRequestBody'
                - $ref: '#/components/schemas/TXTRecordPostRequestBody'
                - $ref: '#/components/schemas/URIRecordPostRequestBody'
            examples:
              resourceRecordExampleAlias:
                $ref: '#/components/examples/resourceRecordExampleAlias'
              resourceRecordExampleExternalHost:
                $ref: '#/components/examples/resourceRecordExampleExternalHost'
              resourceRecordExampleGeneric:
                $ref: '#/components/examples/resourceRecordExampleGeneric'
              resourceRecordExampleHinfo:
                $ref: '#/components/examples/resourceRecordExampleHinfo'
              resourceRecordExampleHost:
                $ref: '#/components/examples/resourceRecordExampleHost'
              resourceRecordExampleMx:
                $ref: '#/components/examples/resourceRecordExampleMx'
              resourceRecordExampleNaptr:
                $ref: '#/components/examples/resourceRecordExampleNaptr'
              resourceRecordExampleSrv:
                $ref: '#/components/examples/resourceRecordExampleSrv'
              resourceRecordExampleTxt:
                $ref: '#/components/examples/resourceRecordExampleTxt'
              resourceRecordExampleUri:
                $ref: '#/components/examples/resourceRecordExampleUri'
              resourceRecordExampleHttps:
                $ref: '#/components/examples/resourceRecordExampleHttps'
              resourceRecordExampleSvcb:
                $ref: '#/components/examples/resourceRecordExampleSvcb'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  AliasRecord: '#/components/schemas/AliasRecordPostRequestBody'
                  GenericRecord: '#/components/schemas/GenericRecordPostRequestBody'
                  HINFORecord: '#/components/schemas/HINFORecordPostRequestBody'
                  HostRecord: '#/components/schemas/HostRecordPostRequestBody'
                  HTTPSRecord: '#/components/schemas/HTTPSRecordPostRequestBody'
                  MXRecord: '#/components/schemas/MXRecordPostRequestBody'
                  NAPTRRecord: '#/components/schemas/NAPTRRecordPostRequestBody'
                  SRVRecord: '#/components/schemas/SRVRecordPostRequestBody'
                  SVCBRecord: '#/components/schemas/SVCBRecordPostRequestBody'
                  TXTRecord: '#/components/schemas/TXTRecordPostRequestBody'
                  URIRecord: '#/components/schemas/URIRecordPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/AliasRecordPostRequestBody'
                - $ref: '#/components/schemas/GenericRecordPostRequestBody'
                - $ref: '#/components/schemas/HINFORecordPostRequestBody'
                - $ref: '#/components/schemas/HostRecordPostRequestBody'
                - $ref: '#/components/schemas/HTTPSRecordPostRequestBody'
                - $ref: '#/components/schemas/MXRecordPostRequestBody'
                - $ref: '#/components/schemas/NAPTRRecordPostRequestBody'
                - $ref: '#/components/schemas/SRVRecordPostRequestBody'
                - $ref: '#/components/schemas/SVCBRecordPostRequestBody'
                - $ref: '#/components/schemas/TXTRecordPostRequestBody'
                - $ref: '#/components/schemas/URIRecordPostRequestBody'
            examples:
              resourceRecordExampleAlias:
                $ref: '#/components/examples/resourceRecordExampleAlias'
              resourceRecordExampleExternalHost:
                $ref: '#/components/examples/resourceRecordExampleExternalHost'
              resourceRecordExampleGeneric:
                $ref: '#/components/examples/resourceRecordExampleGeneric'
              resourceRecordExampleHinfo:
                $ref: '#/components/examples/resourceRecordExampleHinfo'
              resourceRecordExampleHost:
                $ref: '#/components/examples/resourceRecordExampleHost'
              resourceRecordExampleMx:
                $ref: '#/components/examples/resourceRecordExampleMx'
              resourceRecordExampleNaptr:
                $ref: '#/components/examples/resourceRecordExampleNaptr'
              resourceRecordExampleSrv:
                $ref: '#/components/examples/resourceRecordExampleSrv'
              resourceRecordExampleTxt:
                $ref: '#/components/examples/resourceRecordExampleTxt'
              resourceRecordExampleUri:
                $ref: '#/components/examples/resourceRecordExampleUri'
              resourceRecordExampleHttps:
                $ref: '#/components/examples/resourceRecordExampleHttps'
              resourceRecordExampleSvcb:
                $ref: '#/components/examples/resourceRecordExampleSvcb'
            encoding: {}
      responses:
        "202":
          description: The workflow request for the pending resource record
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/AliasRecord'
                      - $ref: '#/components/schemas/GenericRecord'
                      - $ref: '#/components/schemas/HINFORecord'
                      - $ref: '#/components/schemas/HostRecord'
                      - $ref: '#/components/schemas/HTTPSRecord'
                      - $ref: '#/components/schemas/MXRecord'
                      - $ref: '#/components/schemas/NAPTRRecord'
                      - $ref: '#/components/schemas/SRVRecord'
                      - $ref: '#/components/schemas/SVCBRecord'
                      - $ref: '#/components/schemas/TXTRecord'
                      - $ref: '#/components/schemas/URIRecord'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/AliasRecordResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AliasRecord'
                  - $ref: '#/components/schemas/GenericRecord'
                  - $ref: '#/components/schemas/HINFORecord'
                  - $ref: '#/components/schemas/HostRecord'
                  - $ref: '#/components/schemas/HTTPSRecord'
                  - $ref: '#/components/schemas/MXRecord'
                  - $ref: '#/components/schemas/NAPTRRecord'
                  - $ref: '#/components/schemas/SRVRecord'
                  - $ref: '#/components/schemas/SVCBRecord'
                  - $ref: '#/components/schemas/TXTRecord'
                  - $ref: '#/components/schemas/URIRecord'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/zones/{collectionId}/resourceRecords:
    get:
      tags:
        - Resource Record Resources
      summary: Retrieve a collection of resource records
      description: Retrieve a list of all resource records within a specified DNS zone or DNS zone template.
      operationId: getZoneResourceRecords
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of resource records
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/AliasRecordCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/AliasRecord'
                            - $ref: '#/components/schemas/ExternalHostRecord'
                            - $ref: '#/components/schemas/GenericRecord'
                            - $ref: '#/components/schemas/HINFORecord'
                            - $ref: '#/components/schemas/HostRecord'
                            - $ref: '#/components/schemas/HTTPSRecord'
                            - $ref: '#/components/schemas/MXRecord'
                            - $ref: '#/components/schemas/NAPTRRecord'
                            - $ref: '#/components/schemas/SRVRecord'
                            - $ref: '#/components/schemas/SVCBRecord'
                            - $ref: '#/components/schemas/TXTRecord'
                            - $ref: '#/components/schemas/URIRecord'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/AliasRecordResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/AliasRecord'
                        - $ref: '#/components/schemas/ExternalHostRecord'
                        - $ref: '#/components/schemas/GenericRecord'
                        - $ref: '#/components/schemas/HINFORecord'
                        - $ref: '#/components/schemas/HostRecord'
                        - $ref: '#/components/schemas/HTTPSRecord'
                        - $ref: '#/components/schemas/MXRecord'
                        - $ref: '#/components/schemas/NAPTRRecord'
                        - $ref: '#/components/schemas/SRVRecord'
                        - $ref: '#/components/schemas/SVCBRecord'
                        - $ref: '#/components/schemas/TXTRecord'
                        - $ref: '#/components/schemas/URIRecord'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Resource Record Resources
      summary: Create a new resource record
      description: Create a new resource record within a specified DNS zone or DNS zone template.
      operationId: postZoneResourceRecord
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-allow-address-overlap
          in: header
          description: Indicates whether IP address overlap detection will be overridden for auto-created networks.
          schema:
            type: boolean
            default: false
        - name: x-bcn-auto-create-network
          in: header
          description: Indicates whether a network will be automatically created if a network containing the IP address or addresses specified in the resource record does not already exist.
          schema:
            type: boolean
            default: false
        - name: x-bcn-override-naming-policy
          in: header
          description: Indicates whether to override the naming policy for the view or zone when creating the record.
          schema:
            type: boolean
            default: false
        - name: x-bcn-same-as-zone
          in: header
          description: Indicates whether the zone name will be used for the resource record name.
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  AliasRecord: '#/components/schemas/AliasRecordPostRequestBody'
                  ExternalHostRecord: '#/components/schemas/ExternalHostRecordPostRequestBody'
                  GenericRecord: '#/components/schemas/GenericRecordPostRequestBody'
                  HINFORecord: '#/components/schemas/HINFORecordPostRequestBody'
                  HostRecord: '#/components/schemas/HostRecordPostRequestBody'
                  HTTPSRecord: '#/components/schemas/HTTPSRecordPostRequestBody'
                  MXRecord: '#/components/schemas/MXRecordPostRequestBody'
                  NAPTRRecord: '#/components/schemas/NAPTRRecordPostRequestBody'
                  SRVRecord: '#/components/schemas/SRVRecordPostRequestBody'
                  SVCBRecord: '#/components/schemas/SVCBRecordPostRequestBody'
                  TXTRecord: '#/components/schemas/TXTRecordPostRequestBody'
                  URIRecord: '#/components/schemas/URIRecordPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/AliasRecordPostRequestBody'
                - $ref: '#/components/schemas/ExternalHostRecordPostRequestBody'
                - $ref: '#/components/schemas/GenericRecordPostRequestBody'
                - $ref: '#/components/schemas/HINFORecordPostRequestBody'
                - $ref: '#/components/schemas/HostRecordPostRequestBody'
                - $ref: '#/components/schemas/HTTPSRecordPostRequestBody'
                - $ref: '#/components/schemas/MXRecordPostRequestBody'
                - $ref: '#/components/schemas/NAPTRRecordPostRequestBody'
                - $ref: '#/components/schemas/SRVRecordPostRequestBody'
                - $ref: '#/components/schemas/SVCBRecordPostRequestBody'
                - $ref: '#/components/schemas/TXTRecordPostRequestBody'
                - $ref: '#/components/schemas/URIRecordPostRequestBody'
            examples:
              resourceRecordExampleAlias:
                $ref: '#/components/examples/resourceRecordExampleAlias'
              resourceRecordExampleExternalHost:
                $ref: '#/components/examples/resourceRecordExampleExternalHost'
              resourceRecordExampleGeneric:
                $ref: '#/components/examples/resourceRecordExampleGeneric'
              resourceRecordExampleHinfo:
                $ref: '#/components/examples/resourceRecordExampleHinfo'
              resourceRecordExampleHost:
                $ref: '#/components/examples/resourceRecordExampleHost'
              resourceRecordExampleMx:
                $ref: '#/components/examples/resourceRecordExampleMx'
              resourceRecordExampleNaptr:
                $ref: '#/components/examples/resourceRecordExampleNaptr'
              resourceRecordExampleSrv:
                $ref: '#/components/examples/resourceRecordExampleSrv'
              resourceRecordExampleTxt:
                $ref: '#/components/examples/resourceRecordExampleTxt'
              resourceRecordExampleUri:
                $ref: '#/components/examples/resourceRecordExampleUri'
              resourceRecordExampleHttps:
                $ref: '#/components/examples/resourceRecordExampleHttps'
              resourceRecordExampleSvcb:
                $ref: '#/components/examples/resourceRecordExampleSvcb'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  AliasRecord: '#/components/schemas/AliasRecordPostRequestBody'
                  ExternalHostRecord: '#/components/schemas/ExternalHostRecordPostRequestBody'
                  GenericRecord: '#/components/schemas/GenericRecordPostRequestBody'
                  HINFORecord: '#/components/schemas/HINFORecordPostRequestBody'
                  HostRecord: '#/components/schemas/HostRecordPostRequestBody'
                  HTTPSRecord: '#/components/schemas/HTTPSRecordPostRequestBody'
                  MXRecord: '#/components/schemas/MXRecordPostRequestBody'
                  NAPTRRecord: '#/components/schemas/NAPTRRecordPostRequestBody'
                  SRVRecord: '#/components/schemas/SRVRecordPostRequestBody'
                  SVCBRecord: '#/components/schemas/SVCBRecordPostRequestBody'
                  TXTRecord: '#/components/schemas/TXTRecordPostRequestBody'
                  URIRecord: '#/components/schemas/URIRecordPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/AliasRecordPostRequestBody'
                - $ref: '#/components/schemas/ExternalHostRecordPostRequestBody'
                - $ref: '#/components/schemas/GenericRecordPostRequestBody'
                - $ref: '#/components/schemas/HINFORecordPostRequestBody'
                - $ref: '#/components/schemas/HostRecordPostRequestBody'
                - $ref: '#/components/schemas/HTTPSRecordPostRequestBody'
                - $ref: '#/components/schemas/MXRecordPostRequestBody'
                - $ref: '#/components/schemas/NAPTRRecordPostRequestBody'
                - $ref: '#/components/schemas/SRVRecordPostRequestBody'
                - $ref: '#/components/schemas/SVCBRecordPostRequestBody'
                - $ref: '#/components/schemas/TXTRecordPostRequestBody'
                - $ref: '#/components/schemas/URIRecordPostRequestBody'
            examples:
              resourceRecordExampleAlias:
                $ref: '#/components/examples/resourceRecordExampleAlias'
              resourceRecordExampleExternalHost:
                $ref: '#/components/examples/resourceRecordExampleExternalHost'
              resourceRecordExampleGeneric:
                $ref: '#/components/examples/resourceRecordExampleGeneric'
              resourceRecordExampleHinfo:
                $ref: '#/components/examples/resourceRecordExampleHinfo'
              resourceRecordExampleHost:
                $ref: '#/components/examples/resourceRecordExampleHost'
              resourceRecordExampleMx:
                $ref: '#/components/examples/resourceRecordExampleMx'
              resourceRecordExampleNaptr:
                $ref: '#/components/examples/resourceRecordExampleNaptr'
              resourceRecordExampleSrv:
                $ref: '#/components/examples/resourceRecordExampleSrv'
              resourceRecordExampleTxt:
                $ref: '#/components/examples/resourceRecordExampleTxt'
              resourceRecordExampleUri:
                $ref: '#/components/examples/resourceRecordExampleUri'
              resourceRecordExampleHttps:
                $ref: '#/components/examples/resourceRecordExampleHttps'
              resourceRecordExampleSvcb:
                $ref: '#/components/examples/resourceRecordExampleSvcb'
            encoding: {}
      responses:
        "201":
          description: The newly created resource record
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/AliasRecord'
                      - $ref: '#/components/schemas/ExternalHostRecord'
                      - $ref: '#/components/schemas/GenericRecord'
                      - $ref: '#/components/schemas/HINFORecord'
                      - $ref: '#/components/schemas/HostRecord'
                      - $ref: '#/components/schemas/HTTPSRecord'
                      - $ref: '#/components/schemas/MXRecord'
                      - $ref: '#/components/schemas/NAPTRRecord'
                      - $ref: '#/components/schemas/SRVRecord'
                      - $ref: '#/components/schemas/SVCBRecord'
                      - $ref: '#/components/schemas/TXTRecord'
                      - $ref: '#/components/schemas/URIRecord'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/AliasRecordResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AliasRecord'
                  - $ref: '#/components/schemas/ExternalHostRecord'
                  - $ref: '#/components/schemas/GenericRecord'
                  - $ref: '#/components/schemas/HINFORecord'
                  - $ref: '#/components/schemas/HostRecord'
                  - $ref: '#/components/schemas/HTTPSRecord'
                  - $ref: '#/components/schemas/MXRecord'
                  - $ref: '#/components/schemas/NAPTRRecord'
                  - $ref: '#/components/schemas/SRVRecord'
                  - $ref: '#/components/schemas/SVCBRecord'
                  - $ref: '#/components/schemas/TXTRecord'
                  - $ref: '#/components/schemas/URIRecord'
        "202":
          description: The workflow request for the pending resource record
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/AliasRecord'
                      - $ref: '#/components/schemas/ExternalHostRecord'
                      - $ref: '#/components/schemas/GenericRecord'
                      - $ref: '#/components/schemas/HINFORecord'
                      - $ref: '#/components/schemas/HostRecord'
                      - $ref: '#/components/schemas/HTTPSRecord'
                      - $ref: '#/components/schemas/MXRecord'
                      - $ref: '#/components/schemas/NAPTRRecord'
                      - $ref: '#/components/schemas/SRVRecord'
                      - $ref: '#/components/schemas/SVCBRecord'
                      - $ref: '#/components/schemas/TXTRecord'
                      - $ref: '#/components/schemas/URIRecord'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/AliasRecordResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AliasRecord'
                  - $ref: '#/components/schemas/ExternalHostRecord'
                  - $ref: '#/components/schemas/GenericRecord'
                  - $ref: '#/components/schemas/HINFORecord'
                  - $ref: '#/components/schemas/HostRecord'
                  - $ref: '#/components/schemas/HTTPSRecord'
                  - $ref: '#/components/schemas/MXRecord'
                  - $ref: '#/components/schemas/NAPTRRecord'
                  - $ref: '#/components/schemas/SRVRecord'
                  - $ref: '#/components/schemas/SVCBRecord'
                  - $ref: '#/components/schemas/TXTRecord'
                  - $ref: '#/components/schemas/URIRecord'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/addresses/{collectionId}/resourceRecords/{id}:
    delete:
      tags:
        - Resource Record Resources
      summary: Delete a linked resource record
      description: Delete a Host or External Host record link to an IP address.
      operationId: deleteAddressResourceRecord
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/responsePolicies:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a collection of response policies
      description: Retrieve information about all response policies.
      operationId: getResponsePolicies
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of response policies
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ResponsePolicyCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ResponsePolicy'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ResponsePolicyResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/ResponsePolicy'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/responsePolicies/{id}:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a single response policy
      description: Retrieve a specific response policy.
      operationId: getResponsePolicy
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A response policy
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponsePolicy'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ResponsePolicyResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePolicy'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - View and Zone Resources
      summary: Update a response policy
      description: Update an existing response policy.
      operationId: putResponsePolicy
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ResponsePolicyPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ResponsePolicyPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated response policy
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponsePolicy'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ResponsePolicyResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePolicy'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - View and Zone Resources
      summary: Delete a response policy
      description: Delete an existing response policy.
      operationId: deleteResponsePolicy
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/configurations/{collectionId}/responsePolicies:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a collection of response policies
      description: Retrieve all response policies within a configuration.
      operationId: getConfigurationResponsePolicies
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of response policies
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ResponsePolicyCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ResponsePolicy'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ResponsePolicyResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/ResponsePolicy'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - View and Zone Resources
      summary: Create a new response policy
      description: Create a new response policy within a specific configuration. Response policies allow users to manage a recursive DNS resolver attempting to respond to the queries that might not be desirable or legal. You can use this feature to block, redirect, or allow particular domain name queries.
      operationId: postConfigurationResponsePolicy
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ResponsePolicyPostRequestBody'
            examples:
              responsePolicyExampleRequiredFields:
                $ref: '#/components/examples/responsePolicyExampleRequiredFields'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ResponsePolicyPostRequestBody'
            examples:
              responsePolicyExampleRequiredFields:
                $ref: '#/components/examples/responsePolicyExampleRequiredFields'
            encoding: {}
      responses:
        "201":
          description: The newly created response policy
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponsePolicy'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ResponsePolicyResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePolicy'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/views/{collectionId}/restrictedRanges:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of restricted ranges
      description: Retrieve a collection of all IPv4 blocks and/or networks that are configured as the IP restriction range for a view.
      operationId: getViewRestrictedRanges
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of restricted ranges
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4NetworkCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4Network'
                            - $ref: '#/components/schemas/IPv4Block'
                            - $ref: '#/components/schemas/IPv6Network'
                            - $ref: '#/components/schemas/IPv6Block'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4NetworkResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4Network'
                        - $ref: '#/components/schemas/IPv4Block'
                        - $ref: '#/components/schemas/IPv6Network'
                        - $ref: '#/components/schemas/IPv6Block'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new restricted range
      description: Add an IPv4 block or network to the IP restriction list for a view.
      operationId: postViewRestrictedRange
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Network: '#/components/schemas/IPv4NetworkPostRequestBody'
                  IPv4Block: '#/components/schemas/IPv4BlockPostRequestBody'
                  IPv6Network: '#/components/schemas/IPv6NetworkPostRequestBody'
                  IPv6Block: '#/components/schemas/IPv6BlockPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4NetworkPostRequestBody'
                - $ref: '#/components/schemas/IPv4BlockPostRequestBody'
                - $ref: '#/components/schemas/IPv6NetworkPostRequestBody'
                - $ref: '#/components/schemas/IPv6BlockPostRequestBody'
            examples:
              restrictedRangeExampleAddRestrictedNetworkToView:
                $ref: '#/components/examples/restrictedRangeExampleAddRestrictedNetworkToView'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Network: '#/components/schemas/IPv4NetworkPostRequestBody'
                  IPv4Block: '#/components/schemas/IPv4BlockPostRequestBody'
                  IPv6Network: '#/components/schemas/IPv6NetworkPostRequestBody'
                  IPv6Block: '#/components/schemas/IPv6BlockPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4NetworkPostRequestBody'
                - $ref: '#/components/schemas/IPv4BlockPostRequestBody'
                - $ref: '#/components/schemas/IPv6NetworkPostRequestBody'
                - $ref: '#/components/schemas/IPv6BlockPostRequestBody'
            examples:
              restrictedRangeExampleAddRestrictedNetworkToView:
                $ref: '#/components/examples/restrictedRangeExampleAddRestrictedNetworkToView'
            encoding: {}
      responses:
        "201":
          description: The newly created restricted range
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Network'
                      - $ref: '#/components/schemas/IPv4Block'
                      - $ref: '#/components/schemas/IPv6Network'
                      - $ref: '#/components/schemas/IPv6Block'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4NetworkResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Network'
                  - $ref: '#/components/schemas/IPv4Block'
                  - $ref: '#/components/schemas/IPv6Network'
                  - $ref: '#/components/schemas/IPv6Block'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/zones/{collectionId}/restrictedRanges:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of restricted ranges
      description: Retrieve a collection of all IPv4 blocks and/or networks that are configured as the IP restriction range for a zone.
      operationId: getZoneRestrictedRanges
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of restricted ranges
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4NetworkCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4Network'
                            - $ref: '#/components/schemas/IPv4Block'
                            - $ref: '#/components/schemas/IPv6Network'
                            - $ref: '#/components/schemas/IPv6Block'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4NetworkResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4Network'
                        - $ref: '#/components/schemas/IPv4Block'
                        - $ref: '#/components/schemas/IPv6Network'
                        - $ref: '#/components/schemas/IPv6Block'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new restricted range
      description: Add an IPv4 block or network to the IP restriction list for a zone.
      operationId: postZoneRestrictedRange
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Network: '#/components/schemas/IPv4NetworkPostRequestBody'
                  IPv4Block: '#/components/schemas/IPv4BlockPostRequestBody'
                  IPv6Network: '#/components/schemas/IPv6NetworkPostRequestBody'
                  IPv6Block: '#/components/schemas/IPv6BlockPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4NetworkPostRequestBody'
                - $ref: '#/components/schemas/IPv4BlockPostRequestBody'
                - $ref: '#/components/schemas/IPv6NetworkPostRequestBody'
                - $ref: '#/components/schemas/IPv6BlockPostRequestBody'
            examples:
              restrictedRangeExampleAddRestrictedBlockToZone:
                $ref: '#/components/examples/restrictedRangeExampleAddRestrictedBlockToZone'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Network: '#/components/schemas/IPv4NetworkPostRequestBody'
                  IPv4Block: '#/components/schemas/IPv4BlockPostRequestBody'
                  IPv6Network: '#/components/schemas/IPv6NetworkPostRequestBody'
                  IPv6Block: '#/components/schemas/IPv6BlockPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4NetworkPostRequestBody'
                - $ref: '#/components/schemas/IPv4BlockPostRequestBody'
                - $ref: '#/components/schemas/IPv6NetworkPostRequestBody'
                - $ref: '#/components/schemas/IPv6BlockPostRequestBody'
            examples:
              restrictedRangeExampleAddRestrictedBlockToZone:
                $ref: '#/components/examples/restrictedRangeExampleAddRestrictedBlockToZone'
            encoding: {}
      responses:
        "201":
          description: The newly created restricted range
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Network'
                      - $ref: '#/components/schemas/IPv4Block'
                      - $ref: '#/components/schemas/IPv6Network'
                      - $ref: '#/components/schemas/IPv6Block'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4NetworkResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Network'
                  - $ref: '#/components/schemas/IPv4Block'
                  - $ref: '#/components/schemas/IPv6Network'
                  - $ref: '#/components/schemas/IPv6Block'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/views/{collectionId}/restrictedRanges/{id}:
    delete:
      tags:
        - IPv4 and IPv6 Resources
      summary: Delete a restricted range
      description: Remove an IPv4 block or network from the IP restriction list for a view.
      operationId: deleteViewRestrictedRange
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/zones/{collectionId}/restrictedRanges/{id}:
    delete:
      tags:
        - IPv4 and IPv6 Resources
      summary: Delete a restricted range
      description: Remove an IPv4 block or network from the IP restriction list for a zone.
      operationId: deleteZoneRestrictedRange
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/blocks/{collectionId}/restrictedZones:
    get:
      tags:
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Retrieve a collection of restricted zones
      description: Retrieve a list of DNS views and zones to which the IPv4 block is restricted.
      operationId: getBlockRestrictedZones
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of restricted zones
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ViewCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/View'
                            - $ref: '#/components/schemas/Zone'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ViewResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/View'
                        - $ref: '#/components/schemas/Zone'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Create a new restricted zone
      description: Restrict an IPv4 block to a specific DNS view or zone.
      operationId: postBlockRestrictedZone
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  View: '#/components/schemas/ViewPostRequestBody'
                  Zone: '#/components/schemas/ZonePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/ViewPostRequestBody'
                - $ref: '#/components/schemas/ZonePostRequestBody'
            examples:
              restrictedZoneExampleAddRestrictedZoneToBlock:
                $ref: '#/components/examples/restrictedZoneExampleAddRestrictedZoneToBlock'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  View: '#/components/schemas/ViewPostRequestBody'
                  Zone: '#/components/schemas/ZonePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/ViewPostRequestBody'
                - $ref: '#/components/schemas/ZonePostRequestBody'
            examples:
              restrictedZoneExampleAddRestrictedZoneToBlock:
                $ref: '#/components/examples/restrictedZoneExampleAddRestrictedZoneToBlock'
            encoding: {}
      responses:
        "201":
          description: The newly created restricted zone
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/View'
                      - $ref: '#/components/schemas/Zone'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ViewResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/View'
                  - $ref: '#/components/schemas/Zone'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/networks/{collectionId}/restrictedZones:
    get:
      tags:
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Retrieve a collection of restricted zones
      description: Retrieve a list of DNS views and zones to which the IPv4 network is restricted.
      operationId: getNetworkRestrictedZones
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of restricted zones
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ViewCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/View'
                            - $ref: '#/components/schemas/Zone'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ViewResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/View'
                        - $ref: '#/components/schemas/Zone'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Create a new restricted zone
      description: Restrict an IPv4 network to a specific DNS view or zone.
      operationId: postNetworkRestrictedZone
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  View: '#/components/schemas/ViewPostRequestBody'
                  Zone: '#/components/schemas/ZonePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/ViewPostRequestBody'
                - $ref: '#/components/schemas/ZonePostRequestBody'
            examples:
              restrictedZoneExampleAddRestrictedZoneToNetwork:
                $ref: '#/components/examples/restrictedZoneExampleAddRestrictedZoneToNetwork'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  View: '#/components/schemas/ViewPostRequestBody'
                  Zone: '#/components/schemas/ZonePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/ViewPostRequestBody'
                - $ref: '#/components/schemas/ZonePostRequestBody'
            examples:
              restrictedZoneExampleAddRestrictedZoneToNetwork:
                $ref: '#/components/examples/restrictedZoneExampleAddRestrictedZoneToNetwork'
            encoding: {}
      responses:
        "201":
          description: The newly created restricted zone
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/View'
                      - $ref: '#/components/schemas/Zone'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ViewResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/View'
                  - $ref: '#/components/schemas/Zone'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/blocks/{collectionId}/restrictedZones/{id}:
    delete:
      tags:
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Delete a restricted zone
      description: Remove a DNS view or zone restriction from an IPv4 block.
      operationId: deleteBlockRestrictedZone
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/networks/{collectionId}/restrictedZones/{id}:
    delete:
      tags:
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Delete a restricted zone
      description: Remove a DNS view or zone restriction from an IPv4 network.
      operationId: deleteNetworkRestrictedZone
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/schedules:
    get:
      tags:
        - Administrator Resources
        - Server Resources
      summary: Retrieve a collection of schedules
      description: Retrieve information about all schedules.
      operationId: getSchedules
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of schedules
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DeploymentScheduleCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/DeploymentSchedule'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DeploymentScheduleResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/DeploymentSchedule'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/schedules/{id}:
    get:
      tags:
        - Administrator Resources
        - Server Resources
      summary: Retrieve a single schedule
      description: Retrieve information about a specific deployment or report schedule.
      operationId: getSchedule
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A schedule
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DeploymentSchedule'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DeploymentScheduleResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentSchedule'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Server Resources
      summary: Update a schedule
      description: Update an existing schedule.
      operationId: putSchedule
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DeploymentSchedulePutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentSchedulePutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated schedule
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DeploymentSchedule'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DeploymentScheduleResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentSchedule'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - Server Resources
        - Administrator Resources
      summary: Delete a schedule
      description: Delete an existing schedule.
      operationId: deleteSchedule
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/configurations/{collectionId}/schedules:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of deployment schedules
      description: Retrieve a list of deployment schedules that are under a specific configuration.
      operationId: getConfigurationSchedules
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of deployment schedules
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DeploymentScheduleCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/DeploymentSchedule'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DeploymentScheduleResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/DeploymentSchedule'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Server Resources
      summary: Create a new deployment schedule
      description: Create a new deployment schedule. A deployment schedule allows you to automate deployment to managed DNS/DHCP Servers and multi-primary server groups by setting a start time and frequency interval.
      operationId: postConfigurationSchedule
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DeploymentSchedulePostRequestBody'
            examples:
              scheduleExampleFullDnsDeployment:
                $ref: '#/components/examples/scheduleExampleFullDnsDeployment'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentSchedulePostRequestBody'
            examples:
              scheduleExampleFullDnsDeployment:
                $ref: '#/components/examples/scheduleExampleFullDnsDeployment'
            encoding: {}
      responses:
        "201":
          description: The newly created deployment schedule
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DeploymentSchedule'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DeploymentScheduleResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentSchedule'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/databases/{collectionId}/schedules:
    get:
      tags:
        - Database Management and Replication Resources
      summary: Retrieve a collection of database backup schedules
      description: Retrieve a collection of all backup schedules for an Address Manager database.
      operationId: getDatabaseSchedules
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: The collection of database backup schedules
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DatabaseBackupScheduleCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/DatabaseBackupSchedule'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DatabaseBackupScheduleResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/DatabaseBackupSchedule'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Database Management and Replication Resources
      summary: Create a database backup schedule
      description: Create a new Address Manager database backup schedule. Database backups can be scheduled to run once or at recurring intervals. Backups can be saved on the local Address Manager server, or to a remote host via FTP/SFTP.
      operationId: postDatabaseSchedule
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DatabaseBackupSchedulePostRequestBody'
            examples:
              scheduleExampleOptionalFields:
                $ref: '#/components/examples/scheduleExampleOptionalFields'
              scheduleExampleRequiredFields:
                $ref: '#/components/examples/scheduleExampleRequiredFields'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseBackupSchedulePostRequestBody'
            examples:
              scheduleExampleOptionalFields:
                $ref: '#/components/examples/scheduleExampleOptionalFields'
              scheduleExampleRequiredFields:
                $ref: '#/components/examples/scheduleExampleRequiredFields'
            encoding: {}
      responses:
        "201":
          description: A backup schedule
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DatabaseBackupSchedule'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DatabaseBackupScheduleResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseBackupSchedule'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/serverGroups/{collectionId}/schedules:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of deployment schedules linked to a server group
      description: Retrieve a list of all deployment schedules that are linked to a multi-primary server group. You can configure scheduled deployments for multi-primary server groups to regularly deploy DNS data to servers that are part of a multi-primary DNS zone.
      operationId: getServerGroupSchedules
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of linked deployment schedules
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DeploymentScheduleCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/DeploymentSchedule'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DeploymentScheduleResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/DeploymentSchedule'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Server Resources
      summary: Link a server group to a deployment schedule
      description: Link a multi-primary server group to a deployment schedule.
      operationId: postServerGroupSchedule
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DeploymentSchedulePostRequestBody'
            examples:
              scheduleExampleLinkServerGroupToDeploymentSchedule:
                $ref: '#/components/examples/scheduleExampleLinkServerGroupToDeploymentSchedule'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentSchedulePostRequestBody'
            examples:
              scheduleExampleLinkServerGroupToDeploymentSchedule:
                $ref: '#/components/examples/scheduleExampleLinkServerGroupToDeploymentSchedule'
            encoding: {}
      responses:
        "201":
          description: The linked deployment schedule
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DeploymentSchedule'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DeploymentScheduleResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentSchedule'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/servers/{collectionId}/schedules:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of deployment schedules linked to a server
      description: Retrieve a list of all deployment schedules that are linked to a server.
      operationId: getServerSchedules
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of linked deployment schedules
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DeploymentScheduleCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/DeploymentSchedule'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DeploymentScheduleResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/DeploymentSchedule'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Server Resources
      summary: Link a server to a deployment schedule
      description: Link a server to a deployment schedule.
      operationId: postServerSchedule
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DeploymentSchedulePostRequestBody'
            examples:
              scheduleExampleLinkServerToDeploymentSchedule:
                $ref: '#/components/examples/scheduleExampleLinkServerToDeploymentSchedule'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentSchedulePostRequestBody'
            examples:
              scheduleExampleLinkServerToDeploymentSchedule:
                $ref: '#/components/examples/scheduleExampleLinkServerToDeploymentSchedule'
            encoding: {}
      responses:
        "201":
          description: The linked deployment schedule
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DeploymentSchedule'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DeploymentScheduleResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentSchedule'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/databases/{collectionId}/schedules/{id}:
    get:
      tags:
        - Database Management and Replication Resources
      summary: Retrieve a single database backup schedule
      description: Retrieve information about an Address Manager database backup schedule.
      operationId: getDatabaseSchedule
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: The database backup schedule
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DatabaseBackupSchedule'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DatabaseBackupScheduleResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseBackupSchedule'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Database Management and Replication Resources
      summary: Update a database backup schedule
      description: Update an Address Manager database backup schedule.
      operationId: putDatabaseSchedule
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DatabaseBackupSchedulePutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseBackupSchedulePutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated database backup schedule
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DatabaseBackupSchedule'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DatabaseBackupScheduleResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseBackupSchedule'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - Database Management and Replication Resources
      summary: Delete a database backup schedule
      description: Delete an Address Manager database backup schedule.
      operationId: deleteDatabaseSchedule
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    patch:
      tags:
        - Database Management and Replication Resources
      summary: Partially update a database backup schedule
      description: Partially update an Address Manager database backup schedule.
      operationId: patchDatabaseSchedule
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: The state of the database backup schedule.
                  writeOnly: true
                  enum:
                    - PENDING
                    - QUEUED
                    - UNKNOWN
            examples:
              scheduleExamplePatchDatabaseScheduleExample:
                $ref: '#/components/examples/scheduleExamplePatchDatabaseScheduleExample'
            encoding: {}
      responses:
        "200":
          description: none
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DatabaseBackupSchedule'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DatabaseBackupScheduleResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseBackupSchedule'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/serverGroups/{collectionId}/schedules/{id}:
    get:
      tags:
        - Server Resources
      summary: Retrieve a single deployment schedule linked to a server group
      description: Retrieve a single deployment schedule that is linked to a multi-primary server group. You can configure scheduled deployments for multi-primary server groups to regularly deploy DNS data to servers that are part of a multi-primary DNS zone.
      operationId: getServerGroupSchedule
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A linked deployment schedule
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DeploymentSchedule'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DeploymentScheduleResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentSchedule'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - Server Resources
      summary: Unlink a server group from a deployment schedule
      description: Unlink a multi-primary server group from a deployment schedule.
      operationId: deleteServerGroupSchedule
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/servers/{collectionId}/schedules/{id}:
    get:
      tags:
        - Server Resources
      summary: Retrieve a single deployment schedule linked to a server
      description: Retrieve a specific deployment schedule that is linked to a server.
      operationId: getServerSchedule
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A linked deployment schedule
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DeploymentSchedule'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DeploymentScheduleResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentSchedule'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - Server Resources
      summary: Unlink a server from a deployment schedule
      description: Unlink a server from a deployment schedule.
      operationId: deleteServerSchedule
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/serverGroups:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of server groups
      description: Retrieve a collection of all server groups.
      operationId: getServerGroups
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of server groups
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ServerGroupCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ServerGroup'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ServerGroupResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/ServerGroup'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/serverGroups/{id}:
    get:
      tags:
        - Server Resources
      summary: Retrieve a single server group
      description: Retrieve information about a server group.
      operationId: getServerGroup
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A server group
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ServerGroup'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ServerGroupResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ServerGroup'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Server Resources
      summary: Update a server group
      description: Update an existing server group.
      operationId: putServerGroup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ServerGroupPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ServerGroupPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated server group
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ServerGroup'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ServerGroupResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ServerGroup'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - Server Resources
      summary: Delete a server group
      description: Delete an existing server group. Deleting a server group removes any DNS and DHCP deployment options inherited by the servers linked to the server group. When a server group is deleted, only the logical container is deleted and the servers that are linked to the server group are not deleted.
      operationId: deleteServerGroup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/configurations/{collectionId}/serverGroups:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of server groups
      description: Retrieve a collection of all server groups within a configuration.
      operationId: getConfigurationServerGroups
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of server groups
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ServerGroupCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ServerGroup'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ServerGroupResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/ServerGroup'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Server Resources
      summary: Create a new server group
      description: |-
        Create a server group within a configuration. Server groups provide a logical container that allows you to apply DNS and DHCP deployment options to all servers that make up the group. Once you have created a server group, you can add one or more DNS/DHCP Servers to the server group. DNS or DHCP options can then be applied to the server group and these options will be inherited by all servers that are part of that server group. When DNS or DHCP options are removed from the server group, the options are no longer inherited by the servers that are part of that group.

        Additionally, you can configure a server group as a multi-primary server group to enable multi-primary DNS zone deployments to servers within a multi-primary server group. Configuring multi-primary DNS zones ensure that a single primary server does not become a point of failure that could result in a DNS outage in the event of an unexpected error.

        Note: You cannot configure DHCP options on a multi-primary server group.
      operationId: postConfigurationServerGroup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ServerGroupPostRequestBody'
            examples:
              serverGroupExampleRequiredFields:
                $ref: '#/components/examples/serverGroupExampleRequiredFields'
              serverGroupExampleMultiPrimary:
                $ref: '#/components/examples/serverGroupExampleMultiPrimary'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ServerGroupPostRequestBody'
            examples:
              serverGroupExampleRequiredFields:
                $ref: '#/components/examples/serverGroupExampleRequiredFields'
              serverGroupExampleMultiPrimary:
                $ref: '#/components/examples/serverGroupExampleMultiPrimary'
            encoding: {}
      responses:
        "201":
          description: The newly created server group
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ServerGroup'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ServerGroupResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ServerGroup'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/schedules/{collectionId}/serverGroups:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of linked server groups
      description: Retrieve a list of all multi-primary server groups that are part of a deployment schedule. You can configure scheduled deployments for multi-primary server groups to regularly deploy DNS data to servers that are part of a multi-primary DNS zone.
      operationId: getScheduleServerGroups
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of linked server groups
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ServerGroupCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ServerGroup'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ServerGroupResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/ServerGroup'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Server Resources
      summary: Link a server group to a deployment schedule
      description: Link a multi-primary server group to a deployment schedule. You can configure scheduled deployments for multi-primary server groups to regularly deploy DNS data to servers that are part of a multi-primary DNS zone.
      operationId: postScheduleServerGroup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ServerGroupPostRequestBody'
            examples:
              serverGroupExampleLinkServerGroupToDeploymentSchedule:
                $ref: '#/components/examples/serverGroupExampleLinkServerGroupToDeploymentSchedule'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ServerGroupPostRequestBody'
            examples:
              serverGroupExampleLinkServerGroupToDeploymentSchedule:
                $ref: '#/components/examples/serverGroupExampleLinkServerGroupToDeploymentSchedule'
            encoding: {}
      responses:
        "201":
          description: The linked deployment schedule
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ServerGroup'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ServerGroupResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ServerGroup'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/schedules/{collectionId}/serverGroups/{id}:
    delete:
      tags:
        - Server Resources
      summary: Unlink a server group from a deployment schedule
      description: Unlink a multi-primary server group from a deployment schedule.
      operationId: deleteScheduleServerGroup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/servers:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of servers
      description: Retrieve a list of all servers.
      operationId: getServers
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of servers
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ServerCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/Server'
                            - $ref: '#/components/schemas/HAServer'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ServerResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/Server'
                        - $ref: '#/components/schemas/HAServer'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/servers/{id}:
    get:
      tags:
        - Server Resources
      summary: Retrieve a single server
      description: Retrieve information about a server.
      operationId: getServer
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A server
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/Server'
                      - $ref: '#/components/schemas/HAServer'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ServerResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Server'
                  - $ref: '#/components/schemas/HAServer'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Server Resources
      summary: Update a server
      description: Update the configuration of an existing server.
      operationId: putServer
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-reset-services
          in: header
          description: Indicates whether to reset configurations for DNS, DHCP, and TFTP services on the DNS/DHCP Server. This option should only be used for replacing DNS/DHCP Servers with a new appliance of a different type, or scenarios where the IP address of the service interface has been modified. Resetting services will result in a service outage until services are deployed to the replacement server.
          schema:
            type: boolean
            default: false
        - name: x-bcn-upgrade-server
          in: header
          description: Indicates whether to apply the latest version of DNS/DHCP Server software to the appliance.
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  Server: '#/components/schemas/ServerPutRequestBody'
                  HAServer: '#/components/schemas/HAServerPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/ServerPutRequestBody'
                - $ref: '#/components/schemas/HAServerPutRequestBody'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  Server: '#/components/schemas/ServerPutRequestBody'
                  HAServer: '#/components/schemas/HAServerPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/ServerPutRequestBody'
                - $ref: '#/components/schemas/HAServerPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated server
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/Server'
                      - $ref: '#/components/schemas/HAServer'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ServerResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Server'
                  - $ref: '#/components/schemas/HAServer'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - Server Resources
      summary: Delete a server
      description: Delete a specific server.
      operationId: deleteServer
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-retain-cluster
          in: header
          description: Indicates whether the xHA cluster will be retained intact when deleting an xHA server.
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    patch:
      tags:
        - Server Resources
      summary: Partially update a server
      description: Update the information and configuration of an existing server.
      operationId: patchServer
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: The current state of the server, indicating whether the server is enabled or disabled.
                  enum:
                    - ENABLED
                    - DISABLED
                    - FAILOVER
                    - RESET_CONTROL
                    - REPAIR
            examples:
              serverExampleDisableServer:
                $ref: '#/components/examples/serverExampleDisableServer'
              serverExampleFailoverHaServer:
                $ref: '#/components/examples/serverExampleFailoverHaServer'
              serverExampleResetControl:
                $ref: '#/components/examples/serverExampleResetControl'
            encoding: {}
      responses:
        "200":
          description: The updated server
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/Server'
                      - $ref: '#/components/schemas/HAServer'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ServerResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Server'
                  - $ref: '#/components/schemas/HAServer'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/configurations/{collectionId}/servers:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of servers
      description: Retrieve a list of all servers that are part of a configuration.
      operationId: getConfigurationServers
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of servers
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ServerCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/Server'
                            - $ref: '#/components/schemas/HAServer'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ServerResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/Server'
                        - $ref: '#/components/schemas/HAServer'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Server Resources
      summary: Create a new server
      description: Configure a new DNS/DHCP Server or high availability server within a configuration.
      operationId: postConfigurationServer
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-upgrade-server
          in: header
          description: Indicates whether to apply the latest version of DNS/DHCP Server software once the appliance is under Address Manager control.
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  Server: '#/components/schemas/ServerPostRequestBody'
                  HAServer: '#/components/schemas/HAServerPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/ServerPostRequestBody'
                - $ref: '#/components/schemas/HAServerPostRequestBody'
            examples:
              serverExampleCreateBddsServer:
                $ref: '#/components/examples/serverExampleCreateBddsServer'
              serverExampleCreateHaServer:
                $ref: '#/components/examples/serverExampleCreateHaServer'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  Server: '#/components/schemas/ServerPostRequestBody'
                  HAServer: '#/components/schemas/HAServerPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/ServerPostRequestBody'
                - $ref: '#/components/schemas/HAServerPostRequestBody'
            examples:
              serverExampleCreateBddsServer:
                $ref: '#/components/examples/serverExampleCreateBddsServer'
              serverExampleCreateHaServer:
                $ref: '#/components/examples/serverExampleCreateHaServer'
            encoding: {}
      responses:
        "201":
          description: The newly created server
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/Server'
                      - $ref: '#/components/schemas/HAServer'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ServerResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Server'
                  - $ref: '#/components/schemas/HAServer'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/databases/{collectionId}/servers:
    get:
      tags:
        - Database Management and Replication Resources
        - Server Resources
      summary: Retrieve a collection of database servers
      description: Retrieve a list of all Address Manager servers in database replication.
      operationId: getDatabaseServers
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of database servers
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/AddressManagerServerCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/AddressManagerServer'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/AddressManagerServerResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/AddressManagerServer'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Database Management and Replication Resources
        - Server Resources
      summary: Add a standby server for database replication
      description: Configure database replication by adding a standby server to the database replication configuration. The newly added standby server must first be in a trust relationship with the current Address Manager server before you can add the standby server.
      operationId: postDatabaseServer
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AddressManagerServerPostRequestBody'
            examples:
              serverExampleAddServerToReplication:
                $ref: '#/components/examples/serverExampleAddServerToReplication'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/AddressManagerServerPostRequestBody'
            examples:
              serverExampleAddServerToReplication:
                $ref: '#/components/examples/serverExampleAddServerToReplication'
            encoding: {}
      responses:
        "201":
          description: The newly created database server
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/AddressManagerServer'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/AddressManagerServerResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/AddressManagerServer'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/schedules/{collectionId}/servers:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of linked servers
      description: Retrieve a list of all servers that are part of a server group, DHCP zone group, or deployment schedule.
      operationId: getScheduleServers
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of linked servers
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ServerCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/Server'
                            - $ref: '#/components/schemas/HAServer'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ServerResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/Server'
                        - $ref: '#/components/schemas/HAServer'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Server Resources
      summary: Link a server to a resource
      description: Add a server to a deployment schedule.
      operationId: postScheduleServer
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  Server: '#/components/schemas/ServerPostRequestBody'
                  HAServer: '#/components/schemas/HAServerPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/ServerPostRequestBody'
                - $ref: '#/components/schemas/HAServerPostRequestBody'
            examples:
              serverExampleAddServerToSchedule:
                $ref: '#/components/examples/serverExampleAddServerToSchedule'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  Server: '#/components/schemas/ServerPostRequestBody'
                  HAServer: '#/components/schemas/HAServerPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/ServerPostRequestBody'
                - $ref: '#/components/schemas/HAServerPostRequestBody'
            examples:
              serverExampleAddServerToSchedule:
                $ref: '#/components/examples/serverExampleAddServerToSchedule'
            encoding: {}
      responses:
        "201":
          description: The linked server
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/Server'
                      - $ref: '#/components/schemas/HAServer'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ServerResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Server'
                  - $ref: '#/components/schemas/HAServer'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/serverGroups/{collectionId}/servers:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of linked servers
      description: Retrieve a list of all servers that are part of a server group, DHCP zone group, or deployment schedule.
      operationId: getServerGroupServers
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of linked servers
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ServerCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/Server'
                            - $ref: '#/components/schemas/HAServer'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ServerResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/Server'
                        - $ref: '#/components/schemas/HAServer'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Server Resources
      summary: Link a server to a resource
      description: Add a server to a server group.
      operationId: postServerGroupServer
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  Server: '#/components/schemas/ServerPostRequestBody'
                  HAServer: '#/components/schemas/HAServerPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/ServerPostRequestBody'
                - $ref: '#/components/schemas/HAServerPostRequestBody'
            examples:
              serverExampleAddServerToServerGroup:
                $ref: '#/components/examples/serverExampleAddServerToServerGroup'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  Server: '#/components/schemas/ServerPostRequestBody'
                  HAServer: '#/components/schemas/HAServerPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/ServerPostRequestBody'
                - $ref: '#/components/schemas/HAServerPostRequestBody'
            examples:
              serverExampleAddServerToServerGroup:
                $ref: '#/components/examples/serverExampleAddServerToServerGroup'
            encoding: {}
      responses:
        "201":
          description: The linked server
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/Server'
                      - $ref: '#/components/schemas/HAServer'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ServerResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Server'
                  - $ref: '#/components/schemas/HAServer'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/servers/{collectionId}/servers:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of linked servers
      description: Retrieve a list of all servers that are part of a server group, DHCP zone group, or deployment schedule.
      operationId: getServerServers
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of linked servers
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ServerCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Server'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ServerResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Server'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/zoneGroups/{collectionId}/servers:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of linked servers
      description: Retrieve a list of all servers that are part of a server group, DHCP zone group, or deployment schedule.
      operationId: getZoneGroupServers
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of linked servers
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ServerCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/Server'
                            - $ref: '#/components/schemas/HAServer'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ServerResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/Server'
                        - $ref: '#/components/schemas/HAServer'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Server Resources
      summary: Link a server to a resource
      description: Add a server to a DHCP zone group.
      operationId: postZoneGroupServer
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  Server: '#/components/schemas/ServerPostRequestBody'
                  HAServer: '#/components/schemas/HAServerPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/ServerPostRequestBody'
                - $ref: '#/components/schemas/HAServerPostRequestBody'
            examples:
              serverExampleAddServerToZoneGroup:
                $ref: '#/components/examples/serverExampleAddServerToZoneGroup'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  Server: '#/components/schemas/ServerPostRequestBody'
                  HAServer: '#/components/schemas/HAServerPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/ServerPostRequestBody'
                - $ref: '#/components/schemas/HAServerPostRequestBody'
            examples:
              serverExampleAddServerToZoneGroup:
                $ref: '#/components/examples/serverExampleAddServerToZoneGroup'
            encoding: {}
      responses:
        "201":
          description: The linked server
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/Server'
                      - $ref: '#/components/schemas/HAServer'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ServerResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Server'
                  - $ref: '#/components/schemas/HAServer'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/databases/{collectionId}/servers/{id}:
    get:
      tags:
        - Database Management and Replication Resources
        - Server Resources
      summary: Retrieve a single database server
      description: Retrieve information about a specific Address Manager server.
      operationId: getDatabaseServer
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A database server
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/AddressManagerServer'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/AddressManagerServerResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/AddressManagerServer'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - Database Management and Replication Resources
        - Server Resources
      summary: Removes a server from a database replication cluster
      description: Remove an Address Manager standby server from a database replication cluster.
      operationId: deleteDatabaseServer
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-reset-replication
          in: header
          description: Indicates whether to reset replication on the Address Manager server, returning the server to its original stand-alone state.
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    patch:
      tags:
        - Database Management and Replication Resources
        - Server Resources
      summary: Partially update a server from a database replication cluster
      description: Update the information and configuration of an Address Manager server configured within a database replication cluster.
      operationId: patchDatabaseServer
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-force-failover
          in: header
          description: Indicates whether to initiate forced failover on the primary Address Manager server. Initiating an immediate forced failover overrides default graceful failover behaviour, where failover is not initiated until in-progress deployments are complete.
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: The current replication state of the Address Manager server.
                  enum:
                    - STANDALONE
                    - PRIMARY
                    - STANDBY
            examples:
              serverExampleReplicationFailover:
                $ref: '#/components/examples/serverExampleReplicationFailover'
            encoding: {}
      responses:
        "200":
          description: The updated server
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/AddressManagerServer'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/AddressManagerServerResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/AddressManagerServer'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/schedules/{collectionId}/servers/{id}:
    get:
      tags:
        - Server Resources
      summary: Retrieve a single linked server
      description: Retrieve information about a server that is part of a server group, DHCP zone group, or deployment schedule.
      operationId: getScheduleServer
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A linked server
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/Server'
                      - $ref: '#/components/schemas/HAServer'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ServerResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Server'
                  - $ref: '#/components/schemas/HAServer'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - Server Resources
      summary: Unlink a server from a resource
      description: Remove a specific server from a server group, DHCP zone group, or deployment schedule.
      operationId: deleteScheduleServer
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/serverGroups/{collectionId}/servers/{id}:
    delete:
      tags:
        - Server Resources
      summary: Unlink a server from a resource
      description: Remove a specific server from a server group, DHCP zone group, or deployment schedule.
      operationId: deleteServerGroupServer
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/servers/{collectionId}/servers/{id}:
    get:
      tags:
        - Server Resources
      summary: Retrieve a single linked server
      description: Retrieve information about a server that is part of a server group, DHCP zone group, or deployment schedule.
      operationId: getServerServer
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A linked server
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Server'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ServerResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/zoneGroups/{collectionId}/servers/{id}:
    get:
      tags:
        - Server Resources
      summary: Retrieve a single linked server
      description: Retrieve information about a server that is part of a server group, DHCP zone group, or deployment schedule.
      operationId: getZoneGroupServer
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A linked server
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/Server'
                      - $ref: '#/components/schemas/HAServer'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ServerResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Server'
                  - $ref: '#/components/schemas/HAServer'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - Server Resources
      summary: Unlink a server from a resource
      description: Remove a specific server from a server group, DHCP zone group, or deployment schedule.
      operationId: deleteZoneGroupServer
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/servicePrincipals:
    get:
      tags:
        - Authenticator Resources
      summary: Retrieve a collection of service principals
      description: Retrieve a list of service principal configurations. A service principal is the name by which a client uniquely identifies an instance of a service, and is associated with the security principal in whose security context the service executes.
      operationId: getServicePrincipals
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of service principals
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/KerberosServicePrincipalCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/KerberosServicePrincipal'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/KerberosServicePrincipalResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/KerberosServicePrincipal'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/servicePrincipals/{id}:
    get:
      tags:
        - Authenticator Resources
      summary: Retrieve a single service principal
      description: Retrieve information about a service principal configuration. A service principal is the name by which a client uniquely identifies an instance of a service, and is associated with the security principal in whose security context the service executes.
      operationId: getServicePrincipal
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A service principal
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/KerberosServicePrincipal'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/KerberosServicePrincipalResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosServicePrincipal'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Authenticator Resources
      summary: Update a service principal
      description: Update an existing service principal.
      operationId: putServicePrincipal
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/KerberosServicePrincipalPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/KerberosServicePrincipalPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated service principal
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/KerberosServicePrincipal'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/KerberosServicePrincipalResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosServicePrincipal'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - Authenticator Resources
      summary: Delete a service principal
      description: Delete an existing service principal.
      operationId: deleteServicePrincipal
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    patch:
      tags:
        - Authenticator Resources
      summary: Partially update a service principal
      description: Partially update an existing service principal.
      operationId: patchServicePrincipal
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              type: object
              properties:
                password:
                  minLength: 1
                  pattern: ^.*\S+.*$
                  type: string
                  description: The principal’s Kerberos password. This is the AD user account password created on Windows DC.
                  nullable: false
                  example: password
            examples:
              servicePrincipalExampleUpdatePassword:
                $ref: '#/components/examples/servicePrincipalExampleUpdatePassword'
            encoding: {}
      responses:
        "200":
          description: The updated service principal
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/KerberosServicePrincipal'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/KerberosServicePrincipalResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosServicePrincipal'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/realms/{collectionId}/servicePrincipals:
    get:
      tags:
        - Authenticator Resources
      summary: Retrieve a collection of service principals
      description: Retrieve a list of all service principals configured within a realm.
      operationId: getRealmServicePrincipals
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of service principals
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/KerberosServicePrincipalCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/KerberosServicePrincipal'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/KerberosServicePrincipalResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/KerberosServicePrincipal'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Authenticator Resources
      summary: Create a new service principal
      description: Create a new service principal within a realm. A service principal is the name by which a client uniquely identifies an instance of a service, and is associated with the security principal in whose security context the service executes.
      operationId: postRealmServicePrincipal
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/KerberosServicePrincipalPostRequestBody'
            examples:
              servicePrincipalExampleRequiredFields:
                $ref: '#/components/examples/servicePrincipalExampleRequiredFields'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/KerberosServicePrincipalPostRequestBody'
            examples:
              servicePrincipalExampleRequiredFields:
                $ref: '#/components/examples/servicePrincipalExampleRequiredFields'
            encoding: {}
      responses:
        "201":
          description: The newly created service principal
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/KerberosServicePrincipal'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/KerberosServicePrincipalResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosServicePrincipal'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/services:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve a collection of Address Manager services
      description: Retrieve a collection of all services configured on Address Manager
      operationId: getServices
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: A collection of Address Manager services
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DNSResolverServiceCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DNSResolverService'
                            - $ref: '#/components/schemas/FailoverAPIService'
                            - $ref: '#/components/schemas/FirewallService'
                            - $ref: '#/components/schemas/LicenseService'
                            - $ref: '#/components/schemas/NTPService'
                            - $ref: '#/components/schemas/SNMPService'
                            - $ref: '#/components/schemas/SSHService'
                            - $ref: '#/components/schemas/SyslogService'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DNSResolverServiceResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DNSResolverService'
                        - $ref: '#/components/schemas/FailoverAPIService'
                        - $ref: '#/components/schemas/FirewallService'
                        - $ref: '#/components/schemas/LicenseService'
                        - $ref: '#/components/schemas/NTPService'
                        - $ref: '#/components/schemas/SNMPService'
                        - $ref: '#/components/schemas/SSHService'
                        - $ref: '#/components/schemas/SyslogService'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
            text/cloud-config:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/services/{id}:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve a single Address Manager service
      description: Retrieve information about a service configured on Address Manager.
      operationId: getService
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: An Address Manager service
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DNSResolverService'
                      - $ref: '#/components/schemas/FailoverAPIService'
                      - $ref: '#/components/schemas/FirewallService'
                      - $ref: '#/components/schemas/LicenseService'
                      - $ref: '#/components/schemas/NTPService'
                      - $ref: '#/components/schemas/SNMPService'
                      - $ref: '#/components/schemas/SSHService'
                      - $ref: '#/components/schemas/SyslogService'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DNSResolverServiceResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DNSResolverService'
                  - $ref: '#/components/schemas/FailoverAPIService'
                  - $ref: '#/components/schemas/FirewallService'
                  - $ref: '#/components/schemas/LicenseService'
                  - $ref: '#/components/schemas/NTPService'
                  - $ref: '#/components/schemas/SNMPService'
                  - $ref: '#/components/schemas/SSHService'
                  - $ref: '#/components/schemas/SyslogService'
            text/html:
              schema:
                type: string
            text/cloud-config:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Administrator Resources
      summary: Update an Address Manager service
      description: Configure a service on Address Manager.
      operationId: putService
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DNSResolverService: '#/components/schemas/DNSResolverServicePutRequestBody'
                  FailoverAPIService: '#/components/schemas/FailoverAPIServicePutRequestBody'
                  FirewallService: '#/components/schemas/FirewallServicePutRequestBody'
                  LicenseService: '#/components/schemas/LicenseServicePutRequestBody'
                  NTPService: '#/components/schemas/NTPServicePutRequestBody'
                  SNMPService: '#/components/schemas/SNMPServicePutRequestBody'
                  SSHService: '#/components/schemas/SSHServicePutRequestBody'
                  SyslogService: '#/components/schemas/SyslogServicePutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DNSResolverServicePutRequestBody'
                - $ref: '#/components/schemas/FailoverAPIServicePutRequestBody'
                - $ref: '#/components/schemas/FirewallServicePutRequestBody'
                - $ref: '#/components/schemas/LicenseServicePutRequestBody'
                - $ref: '#/components/schemas/NTPServicePutRequestBody'
                - $ref: '#/components/schemas/SNMPServicePutRequestBody'
                - $ref: '#/components/schemas/SSHServicePutRequestBody'
                - $ref: '#/components/schemas/SyslogServicePutRequestBody'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DNSResolverService: '#/components/schemas/DNSResolverServicePutRequestBody'
                  FailoverAPIService: '#/components/schemas/FailoverAPIServicePutRequestBody'
                  FirewallService: '#/components/schemas/FirewallServicePutRequestBody'
                  LicenseService: '#/components/schemas/LicenseServicePutRequestBody'
                  NTPService: '#/components/schemas/NTPServicePutRequestBody'
                  SNMPService: '#/components/schemas/SNMPServicePutRequestBody'
                  SSHService: '#/components/schemas/SSHServicePutRequestBody'
                  SyslogService: '#/components/schemas/SyslogServicePutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DNSResolverServicePutRequestBody'
                - $ref: '#/components/schemas/FailoverAPIServicePutRequestBody'
                - $ref: '#/components/schemas/FirewallServicePutRequestBody'
                - $ref: '#/components/schemas/LicenseServicePutRequestBody'
                - $ref: '#/components/schemas/NTPServicePutRequestBody'
                - $ref: '#/components/schemas/SNMPServicePutRequestBody'
                - $ref: '#/components/schemas/SSHServicePutRequestBody'
                - $ref: '#/components/schemas/SyslogServicePutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated Address Manager service
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DNSResolverService'
                      - $ref: '#/components/schemas/FailoverAPIService'
                      - $ref: '#/components/schemas/FirewallService'
                      - $ref: '#/components/schemas/LicenseService'
                      - $ref: '#/components/schemas/NTPService'
                      - $ref: '#/components/schemas/SNMPService'
                      - $ref: '#/components/schemas/SSHService'
                      - $ref: '#/components/schemas/SyslogService'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DNSResolverServiceResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DNSResolverService'
                  - $ref: '#/components/schemas/FailoverAPIService'
                  - $ref: '#/components/schemas/FirewallService'
                  - $ref: '#/components/schemas/LicenseService'
                  - $ref: '#/components/schemas/NTPService'
                  - $ref: '#/components/schemas/SNMPService'
                  - $ref: '#/components/schemas/SSHService'
                  - $ref: '#/components/schemas/SyslogService'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/servers/{collectionId}/services:
    get:
      tags:
        - Server Resources
      summary: Retrieve a collection of server services
      description: Retrieve a collection of all services configured on a server. Service resources returned will depend on supported services for the DNS/DHCP Server version. The LicenseServer resource is only returned for DNS/DHCP Server version 9.5 and greater.
      operationId: getServerServices
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of server services
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/AnycastServiceCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/AnycastService'
                            - $ref: '#/components/schemas/DHCPActivityService'
                            - $ref: '#/components/schemas/DHCPStatisticsService'
                            - $ref: '#/components/schemas/DNSActivityService'
                            - $ref: '#/components/schemas/DNSResolverService'
                            - $ref: '#/components/schemas/DNSStatisticsService'
                            - $ref: '#/components/schemas/FirewallService'
                            - $ref: '#/components/schemas/GatewayService'
                            - $ref: '#/components/schemas/InterfacesService'
                            - $ref: '#/components/schemas/LicenseService'
                            - $ref: '#/components/schemas/NTPService'
                            - $ref: '#/components/schemas/SNMPService'
                            - $ref: '#/components/schemas/SSHService'
                            - $ref: '#/components/schemas/SyslogService'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/AnycastServiceResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/AnycastService'
                        - $ref: '#/components/schemas/DHCPActivityService'
                        - $ref: '#/components/schemas/DHCPStatisticsService'
                        - $ref: '#/components/schemas/DNSActivityService'
                        - $ref: '#/components/schemas/DNSResolverService'
                        - $ref: '#/components/schemas/DNSStatisticsService'
                        - $ref: '#/components/schemas/FirewallService'
                        - $ref: '#/components/schemas/GatewayService'
                        - $ref: '#/components/schemas/InterfacesService'
                        - $ref: '#/components/schemas/LicenseService'
                        - $ref: '#/components/schemas/NTPService'
                        - $ref: '#/components/schemas/SNMPService'
                        - $ref: '#/components/schemas/SSHService'
                        - $ref: '#/components/schemas/SyslogService'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
            text/cloud-config:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/servers/{collectionId}/services/{id}:
    get:
      tags:
        - Server Resources
      summary: Retrieve a single server service
      description: Retrieve information about a service configured on a server.
      operationId: getServerService
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A server service
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/AnycastService'
                      - $ref: '#/components/schemas/DHCPActivityService'
                      - $ref: '#/components/schemas/DHCPStatisticsService'
                      - $ref: '#/components/schemas/DNSActivityService'
                      - $ref: '#/components/schemas/DNSResolverService'
                      - $ref: '#/components/schemas/DNSStatisticsService'
                      - $ref: '#/components/schemas/FirewallService'
                      - $ref: '#/components/schemas/GatewayService'
                      - $ref: '#/components/schemas/InterfacesService'
                      - $ref: '#/components/schemas/LicenseService'
                      - $ref: '#/components/schemas/NTPService'
                      - $ref: '#/components/schemas/SNMPService'
                      - $ref: '#/components/schemas/SSHService'
                      - $ref: '#/components/schemas/SyslogService'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/AnycastServiceResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AnycastService'
                  - $ref: '#/components/schemas/DHCPActivityService'
                  - $ref: '#/components/schemas/DHCPStatisticsService'
                  - $ref: '#/components/schemas/DNSActivityService'
                  - $ref: '#/components/schemas/DNSResolverService'
                  - $ref: '#/components/schemas/DNSStatisticsService'
                  - $ref: '#/components/schemas/FirewallService'
                  - $ref: '#/components/schemas/GatewayService'
                  - $ref: '#/components/schemas/InterfacesService'
                  - $ref: '#/components/schemas/LicenseService'
                  - $ref: '#/components/schemas/NTPService'
                  - $ref: '#/components/schemas/SNMPService'
                  - $ref: '#/components/schemas/SSHService'
                  - $ref: '#/components/schemas/SyslogService'
            text/html:
              schema:
                type: string
            text/cloud-config:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Server Resources
      summary: Update a server service
      description: Configure a service on a server.
      operationId: putServerService
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  AnycastService: '#/components/schemas/AnycastServicePutRequestBody'
                  DHCPActivityService: '#/components/schemas/DHCPActivityServicePutRequestBody'
                  DHCPStatisticsService: '#/components/schemas/DHCPStatisticsServicePutRequestBody'
                  DNSActivityService: '#/components/schemas/DNSActivityServicePutRequestBody'
                  DNSResolverService: '#/components/schemas/DNSResolverServicePutRequestBody'
                  DNSStatisticsService: '#/components/schemas/DNSStatisticsServicePutRequestBody'
                  FirewallService: '#/components/schemas/FirewallServicePutRequestBody'
                  GatewayService: '#/components/schemas/GatewayServicePutRequestBody'
                  InterfacesService: '#/components/schemas/InterfacesServicePutRequestBody'
                  LicenseService: '#/components/schemas/LicenseServicePutRequestBody'
                  NTPService: '#/components/schemas/NTPServicePutRequestBody'
                  SNMPService: '#/components/schemas/SNMPServicePutRequestBody'
                  SSHService: '#/components/schemas/SSHServicePutRequestBody'
                  SyslogService: '#/components/schemas/SyslogServicePutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/AnycastServicePutRequestBody'
                - $ref: '#/components/schemas/DHCPActivityServicePutRequestBody'
                - $ref: '#/components/schemas/DHCPStatisticsServicePutRequestBody'
                - $ref: '#/components/schemas/DNSActivityServicePutRequestBody'
                - $ref: '#/components/schemas/DNSResolverServicePutRequestBody'
                - $ref: '#/components/schemas/DNSStatisticsServicePutRequestBody'
                - $ref: '#/components/schemas/FirewallServicePutRequestBody'
                - $ref: '#/components/schemas/GatewayServicePutRequestBody'
                - $ref: '#/components/schemas/InterfacesServicePutRequestBody'
                - $ref: '#/components/schemas/LicenseServicePutRequestBody'
                - $ref: '#/components/schemas/NTPServicePutRequestBody'
                - $ref: '#/components/schemas/SNMPServicePutRequestBody'
                - $ref: '#/components/schemas/SSHServicePutRequestBody'
                - $ref: '#/components/schemas/SyslogServicePutRequestBody'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  AnycastService: '#/components/schemas/AnycastServicePutRequestBody'
                  DHCPActivityService: '#/components/schemas/DHCPActivityServicePutRequestBody'
                  DHCPStatisticsService: '#/components/schemas/DHCPStatisticsServicePutRequestBody'
                  DNSActivityService: '#/components/schemas/DNSActivityServicePutRequestBody'
                  DNSResolverService: '#/components/schemas/DNSResolverServicePutRequestBody'
                  DNSStatisticsService: '#/components/schemas/DNSStatisticsServicePutRequestBody'
                  FirewallService: '#/components/schemas/FirewallServicePutRequestBody'
                  GatewayService: '#/components/schemas/GatewayServicePutRequestBody'
                  InterfacesService: '#/components/schemas/InterfacesServicePutRequestBody'
                  LicenseService: '#/components/schemas/LicenseServicePutRequestBody'
                  NTPService: '#/components/schemas/NTPServicePutRequestBody'
                  SNMPService: '#/components/schemas/SNMPServicePutRequestBody'
                  SSHService: '#/components/schemas/SSHServicePutRequestBody'
                  SyslogService: '#/components/schemas/SyslogServicePutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/AnycastServicePutRequestBody'
                - $ref: '#/components/schemas/DHCPActivityServicePutRequestBody'
                - $ref: '#/components/schemas/DHCPStatisticsServicePutRequestBody'
                - $ref: '#/components/schemas/DNSActivityServicePutRequestBody'
                - $ref: '#/components/schemas/DNSResolverServicePutRequestBody'
                - $ref: '#/components/schemas/DNSStatisticsServicePutRequestBody'
                - $ref: '#/components/schemas/FirewallServicePutRequestBody'
                - $ref: '#/components/schemas/GatewayServicePutRequestBody'
                - $ref: '#/components/schemas/InterfacesServicePutRequestBody'
                - $ref: '#/components/schemas/LicenseServicePutRequestBody'
                - $ref: '#/components/schemas/NTPServicePutRequestBody'
                - $ref: '#/components/schemas/SNMPServicePutRequestBody'
                - $ref: '#/components/schemas/SSHServicePutRequestBody'
                - $ref: '#/components/schemas/SyslogServicePutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated server service
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/AnycastService'
                      - $ref: '#/components/schemas/DHCPActivityService'
                      - $ref: '#/components/schemas/DHCPStatisticsService'
                      - $ref: '#/components/schemas/DNSActivityService'
                      - $ref: '#/components/schemas/DNSResolverService'
                      - $ref: '#/components/schemas/DNSStatisticsService'
                      - $ref: '#/components/schemas/FirewallService'
                      - $ref: '#/components/schemas/GatewayService'
                      - $ref: '#/components/schemas/InterfacesService'
                      - $ref: '#/components/schemas/LicenseService'
                      - $ref: '#/components/schemas/NTPService'
                      - $ref: '#/components/schemas/SNMPService'
                      - $ref: '#/components/schemas/SSHService'
                      - $ref: '#/components/schemas/SyslogService'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/AnycastServiceResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AnycastService'
                  - $ref: '#/components/schemas/DHCPActivityService'
                  - $ref: '#/components/schemas/DHCPStatisticsService'
                  - $ref: '#/components/schemas/DNSActivityService'
                  - $ref: '#/components/schemas/DNSResolverService'
                  - $ref: '#/components/schemas/DNSStatisticsService'
                  - $ref: '#/components/schemas/FirewallService'
                  - $ref: '#/components/schemas/GatewayService'
                  - $ref: '#/components/schemas/InterfacesService'
                  - $ref: '#/components/schemas/LicenseService'
                  - $ref: '#/components/schemas/NTPService'
                  - $ref: '#/components/schemas/SNMPService'
                  - $ref: '#/components/schemas/SSHService'
                  - $ref: '#/components/schemas/SyslogService'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/sessions:
    get:
      tags:
        - Monitoring Resources
        - User and Group Resources
      summary: Retrieve a collection of sessions
      description: Retrieve information about all user sessions including the user that logged in, the IP address of the device used to log in, the login and logout time, the state of the session, and authenticator used to log in.
      operationId: getSessions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of sessions
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/UserSessionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/UserSession'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/UserSessionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/UserSession'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Monitoring Resources
        - User and Group Resources
      summary: Create a new session
      description: Initiates a new user session.
      operationId: postSession
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/UserSessionPostRequestBody'
            examples:
              sessionExampleRequiredFields:
                $ref: '#/components/examples/sessionExampleRequiredFields'
              sessionExampleReadOnly:
                $ref: '#/components/examples/sessionExampleReadOnly'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/UserSessionPostRequestBody'
            examples:
              sessionExampleRequiredFields:
                $ref: '#/components/examples/sessionExampleRequiredFields'
              sessionExampleReadOnly:
                $ref: '#/components/examples/sessionExampleReadOnly'
            encoding: {}
      responses:
        "201":
          description: The newly created session
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserSession'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/UserSessionResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/UserSession'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/sessions/current:
    get:
      tags:
        - Monitoring Resources
        - User and Group Resources
      summary: Retrieve the current session
      description: Retrieve information about the current user session.
      operationId: getSessionCurrent
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: A session
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/UserSessionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/UserSession'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/UserSessionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/UserSession'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    patch:
      tags:
        - Monitoring Resources
        - User and Group Resources
      summary: Partially update the current session
      description: Update a user session.
      operationId: patchSessionCurrent
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: The state of the user session.
                  enum:
                    - LOGGED_IN
                    - LOGGED_OUT
                    - TIMED_OUT
                    - EXPIRED
                    - LOGIN_FAIL
                    - TERMINATED
            examples:
              sessionExampleLoggedOut:
                $ref: '#/components/examples/sessionExampleLoggedOut'
            encoding: {}
      responses:
        "200":
          description: The updated session
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserSession'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/UserSessionResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/UserSession'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/sessions/{id}:
    get:
      tags:
        - Monitoring Resources
        - User and Group Resources
      summary: Retrieve a single session
      description: Retrieve information about a user session.
      operationId: getSession
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A session
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserSession'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/UserSessionResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/UserSession'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    patch:
      tags:
        - Monitoring Resources
        - User and Group Resources
      summary: Partially update a session
      description: Update a user session.
      operationId: patchSession
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: The state of the user session.
                  enum:
                    - LOGGED_IN
                    - LOGGED_OUT
                    - TIMED_OUT
                    - EXPIRED
                    - LOGIN_FAIL
                    - TERMINATED
            examples:
              sessionExampleLoggedOut:
                $ref: '#/components/examples/sessionExampleLoggedOut'
              sessionExampleTerminated:
                $ref: '#/components/examples/sessionExampleTerminated'
            encoding: {}
      responses:
        "200":
          description: The updated session
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserSession'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/UserSessionResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/UserSession'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/users/{collectionId}/sessions:
    get:
      tags:
        - Monitoring Resources
        - User and Group Resources
      summary: Retrieve a collection of user sessions
      description: Retrieve a collection of all sessions of a user.
      operationId: getUserSessions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of user sessions
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/UserSessionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/UserSession'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/UserSessionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/UserSession'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/settings:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve a collection of settings resources
      description: Retrieve information about the Address Manager administration settings.
      operationId: getSettings
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: A collection of settings resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/AuditDataSettingsCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/AuditDataSettings'
                            - $ref: '#/components/schemas/DHCPAlertSettings'
                            - $ref: '#/components/schemas/GlobalSettings'
                            - $ref: '#/components/schemas/LogLevelSettings'
                            - $ref: '#/components/schemas/LoginPolicySettings'
                            - $ref: '#/components/schemas/MonitoringSettings'
                            - $ref: '#/components/schemas/PasswordPolicySettings'
                            - $ref: '#/components/schemas/SAMLServiceProviderSettings'
                            - $ref: '#/components/schemas/SSOEnforcementSettings'
                            - $ref: '#/components/schemas/SystemSettings'
                            - $ref: '#/components/schemas/WebAccessSettings'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/AuditDataSettingsResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/AuditDataSettings'
                        - $ref: '#/components/schemas/DHCPAlertSettings'
                        - $ref: '#/components/schemas/GlobalSettings'
                        - $ref: '#/components/schemas/LogLevelSettings'
                        - $ref: '#/components/schemas/LoginPolicySettings'
                        - $ref: '#/components/schemas/MonitoringSettings'
                        - $ref: '#/components/schemas/PasswordPolicySettings'
                        - $ref: '#/components/schemas/SAMLServiceProviderSettings'
                        - $ref: '#/components/schemas/SSOEnforcementSettings'
                        - $ref: '#/components/schemas/SystemSettings'
                        - $ref: '#/components/schemas/WebAccessSettings'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/settings/{id}:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve a single settings resource
      description: Retrieve information about a specific Address Manager administration setting.
      operationId: getSetting
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A settings resource
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/AuditDataSettings'
                      - $ref: '#/components/schemas/DHCPAlertSettings'
                      - $ref: '#/components/schemas/GlobalSettings'
                      - $ref: '#/components/schemas/LogLevelSettings'
                      - $ref: '#/components/schemas/LoginPolicySettings'
                      - $ref: '#/components/schemas/MonitoringSettings'
                      - $ref: '#/components/schemas/PasswordPolicySettings'
                      - $ref: '#/components/schemas/SAMLServiceProviderSettings'
                      - $ref: '#/components/schemas/SSOEnforcementSettings'
                      - $ref: '#/components/schemas/SystemSettings'
                      - $ref: '#/components/schemas/WebAccessSettings'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/AuditDataSettingsResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AuditDataSettings'
                  - $ref: '#/components/schemas/DHCPAlertSettings'
                  - $ref: '#/components/schemas/GlobalSettings'
                  - $ref: '#/components/schemas/LogLevelSettings'
                  - $ref: '#/components/schemas/LoginPolicySettings'
                  - $ref: '#/components/schemas/MonitoringSettings'
                  - $ref: '#/components/schemas/PasswordPolicySettings'
                  - $ref: '#/components/schemas/SAMLServiceProviderSettings'
                  - $ref: '#/components/schemas/SSOEnforcementSettings'
                  - $ref: '#/components/schemas/SystemSettings'
                  - $ref: '#/components/schemas/WebAccessSettings'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Administrator Resources
      summary: Updates a settings resource
      description: Update the Address Manager administration settings.
      operationId: putSetting
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-reapply-certificates
          in: header
          description: Indicates whether to reapply the previously configured custom server certificate.
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  AuditDataSettings: '#/components/schemas/AuditDataSettingsPutRequestBody'
                  DHCPAlertSettings: '#/components/schemas/DHCPAlertSettingsPutRequestBody'
                  GlobalSettings: '#/components/schemas/GlobalSettingsPutRequestBody'
                  LogLevelSettings: '#/components/schemas/LogLevelSettingsPutRequestBody'
                  LoginPolicySettings: '#/components/schemas/LoginPolicySettingsPutRequestBody'
                  MonitoringSettings: '#/components/schemas/MonitoringSettingsPutRequestBody'
                  PasswordPolicySettings: '#/components/schemas/PasswordPolicySettingsPutRequestBody'
                  SAMLServiceProviderSettings: '#/components/schemas/SAMLServiceProviderSettingsPutRequestBody'
                  SSOEnforcementSettings: '#/components/schemas/SSOEnforcementSettingsPutRequestBody'
                  SystemSettings: '#/components/schemas/SystemSettingsPutRequestBody'
                  WebAccessSettings: '#/components/schemas/WebAccessSettingsPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/AuditDataSettingsPutRequestBody'
                - $ref: '#/components/schemas/DHCPAlertSettingsPutRequestBody'
                - $ref: '#/components/schemas/GlobalSettingsPutRequestBody'
                - $ref: '#/components/schemas/LogLevelSettingsPutRequestBody'
                - $ref: '#/components/schemas/LoginPolicySettingsPutRequestBody'
                - $ref: '#/components/schemas/MonitoringSettingsPutRequestBody'
                - $ref: '#/components/schemas/PasswordPolicySettingsPutRequestBody'
                - $ref: '#/components/schemas/SAMLServiceProviderSettingsPutRequestBody'
                - $ref: '#/components/schemas/SSOEnforcementSettingsPutRequestBody'
                - $ref: '#/components/schemas/SystemSettingsPutRequestBody'
                - $ref: '#/components/schemas/WebAccessSettingsPutRequestBody'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  AuditDataSettings: '#/components/schemas/AuditDataSettingsPutRequestBody'
                  DHCPAlertSettings: '#/components/schemas/DHCPAlertSettingsPutRequestBody'
                  GlobalSettings: '#/components/schemas/GlobalSettingsPutRequestBody'
                  LogLevelSettings: '#/components/schemas/LogLevelSettingsPutRequestBody'
                  LoginPolicySettings: '#/components/schemas/LoginPolicySettingsPutRequestBody'
                  MonitoringSettings: '#/components/schemas/MonitoringSettingsPutRequestBody'
                  PasswordPolicySettings: '#/components/schemas/PasswordPolicySettingsPutRequestBody'
                  SAMLServiceProviderSettings: '#/components/schemas/SAMLServiceProviderSettingsPutRequestBody'
                  SSOEnforcementSettings: '#/components/schemas/SSOEnforcementSettingsPutRequestBody'
                  SystemSettings: '#/components/schemas/SystemSettingsPutRequestBody'
                  WebAccessSettings: '#/components/schemas/WebAccessSettingsPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/AuditDataSettingsPutRequestBody'
                - $ref: '#/components/schemas/DHCPAlertSettingsPutRequestBody'
                - $ref: '#/components/schemas/GlobalSettingsPutRequestBody'
                - $ref: '#/components/schemas/LogLevelSettingsPutRequestBody'
                - $ref: '#/components/schemas/LoginPolicySettingsPutRequestBody'
                - $ref: '#/components/schemas/MonitoringSettingsPutRequestBody'
                - $ref: '#/components/schemas/PasswordPolicySettingsPutRequestBody'
                - $ref: '#/components/schemas/SAMLServiceProviderSettingsPutRequestBody'
                - $ref: '#/components/schemas/SSOEnforcementSettingsPutRequestBody'
                - $ref: '#/components/schemas/SystemSettingsPutRequestBody'
                - $ref: '#/components/schemas/WebAccessSettingsPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated settings resource
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/AuditDataSettings'
                      - $ref: '#/components/schemas/DHCPAlertSettings'
                      - $ref: '#/components/schemas/GlobalSettings'
                      - $ref: '#/components/schemas/LogLevelSettings'
                      - $ref: '#/components/schemas/LoginPolicySettings'
                      - $ref: '#/components/schemas/MonitoringSettings'
                      - $ref: '#/components/schemas/PasswordPolicySettings'
                      - $ref: '#/components/schemas/SAMLServiceProviderSettings'
                      - $ref: '#/components/schemas/SSOEnforcementSettings'
                      - $ref: '#/components/schemas/SystemSettings'
                      - $ref: '#/components/schemas/WebAccessSettings'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/AuditDataSettingsResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AuditDataSettings'
                  - $ref: '#/components/schemas/DHCPAlertSettings'
                  - $ref: '#/components/schemas/GlobalSettings'
                  - $ref: '#/components/schemas/LogLevelSettings'
                  - $ref: '#/components/schemas/LoginPolicySettings'
                  - $ref: '#/components/schemas/MonitoringSettings'
                  - $ref: '#/components/schemas/PasswordPolicySettings'
                  - $ref: '#/components/schemas/SAMLServiceProviderSettings'
                  - $ref: '#/components/schemas/SSOEnforcementSettings'
                  - $ref: '#/components/schemas/SystemSettings'
                  - $ref: '#/components/schemas/WebAccessSettings'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/tags/{collectionId}/sharedResources:
    get:
      tags:
        - Tag Resources
      summary: Retrieve a collection of shared resources
      description: Retrieve a list of shared resources.
      operationId: getTagSharedResources
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of shared resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ResourceCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Resource'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ResourceResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Resource'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Tag Resources
      summary: Create a new shared resource
      description: Add a shared resource
      operationId: postTagSharedResource
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ResourcePostRequestBody'
            examples:
              sharedResourceExampleAddSharedNetwork:
                $ref: '#/components/examples/sharedResourceExampleAddSharedNetwork'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePostRequestBody'
            examples:
              sharedResourceExampleAddSharedNetwork:
                $ref: '#/components/examples/sharedResourceExampleAddSharedNetwork'
            encoding: {}
      responses:
        "201":
          description: The newly created shared resource
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Resource'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ResourceResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/tags/{collectionId}/sharedResources/{id}:
    delete:
      tags:
        - Tag Resources
      summary: Delete a shared resource
      description: Delete a shared resource.
      operationId: deleteTagSharedResource
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/signingKeys:
    get:
      tags:
        - DNSSEC Resources
      summary: Retrieve a collection of signing keys
      description: Retrieve the list of all TSIG keys, key signing keys and zone signing keys of Address Manager.
      operationId: getSigningKeys
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of signing keys
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/KeySigningKeyCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/KeySigningKey'
                            - $ref: '#/components/schemas/TSIGKey'
                            - $ref: '#/components/schemas/ZoneSigningKey'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/KeySigningKeyResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/KeySigningKey'
                        - $ref: '#/components/schemas/TSIGKey'
                        - $ref: '#/components/schemas/ZoneSigningKey'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/signingKeys/{id}:
    get:
      tags:
        - DNSSEC Resources
      summary: Retrieve a single signing key
      description: Retrieve a specific TSIG key, key signing key or zone signing key.
      operationId: getSigningKey
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A signing key
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/KeySigningKey'
                      - $ref: '#/components/schemas/TSIGKey'
                      - $ref: '#/components/schemas/ZoneSigningKey'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/KeySigningKeyResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/KeySigningKey'
                  - $ref: '#/components/schemas/TSIGKey'
                  - $ref: '#/components/schemas/ZoneSigningKey'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - DNSSEC Resources
      summary: Update a signing key
      description: Update an existing TSIG key.
      operationId: putSigningKey
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TSIGKeyPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/TSIGKeyPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated signing key
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/TSIGKey'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TSIGKeyResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/TSIGKey'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - DNSSEC Resources
      summary: Delete a signing key
      description: Delete an existing TSIG key, key signing key or zone signing key.
      operationId: deleteSigningKey
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    patch:
      tags:
        - DNSSEC Resources
      summary: Partially update a signing key
      description: Partially update an existing TSIG key, key signing key or zone signing key.
      operationId: patchSigningKey
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: The state of the key.
                  enum:
                    - GENERATED
                    - NOT_GENERATED
                    - REGENERATE
            examples:
              signingKeyExampleRegenerateTsig:
                $ref: '#/components/examples/signingKeyExampleRegenerateTsig'
            encoding: {}
      responses:
        "200":
          description: The updated signing key
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/KeySigningKey'
                      - $ref: '#/components/schemas/TSIGKey'
                      - $ref: '#/components/schemas/ZoneSigningKey'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/KeySigningKeyResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/KeySigningKey'
                  - $ref: '#/components/schemas/TSIGKey'
                  - $ref: '#/components/schemas/ZoneSigningKey'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/blocks/{collectionId}/signingKeys:
    get:
      tags:
        - DNSSEC Resources
      summary: Retrieve a collection of signing keys
      description: Retrieve a list of key signing keys and zone signing keys applied to an IPv4 block.
      operationId: getBlockSigningKeys
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of signing keys
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/KeySigningKeyCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/KeySigningKey'
                            - $ref: '#/components/schemas/ZoneSigningKey'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/KeySigningKeyResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/KeySigningKey'
                        - $ref: '#/components/schemas/ZoneSigningKey'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/configurations/{collectionId}/signingKeys:
    get:
      tags:
        - DNSSEC Resources
      summary: Retrieve a collection of signing keys
      description: Retrieve a list of TSIG keys of a configuration.
      operationId: getConfigurationSigningKeys
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of signing keys
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/TSIGKeyCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/TSIGKey'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/TSIGKeyResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/TSIGKey'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - DNSSEC Resources
      summary: Create a new signing key
      description: Create a new TSIG key for a configuration.
      operationId: postConfigurationSigningKey
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TSIGKeyPostRequestBody'
            examples:
              signingKeyExampleTsig:
                $ref: '#/components/examples/signingKeyExampleTsig'
              signingKeyExampleGeneratedTsig:
                $ref: '#/components/examples/signingKeyExampleGeneratedTsig'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/TSIGKeyPostRequestBody'
            examples:
              signingKeyExampleTsig:
                $ref: '#/components/examples/signingKeyExampleTsig'
              signingKeyExampleGeneratedTsig:
                $ref: '#/components/examples/signingKeyExampleGeneratedTsig'
            encoding: {}
      responses:
        "201":
          description: The newly created signing key
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/TSIGKey'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TSIGKeyResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/TSIGKey'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/networks/{collectionId}/signingKeys:
    get:
      tags:
        - DNSSEC Resources
      summary: Retrieve a collection of signing keys
      description: Retrieve a list of key signing keys and zone signing keys applied to an IPv4 network.
      operationId: getNetworkSigningKeys
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of signing keys
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/KeySigningKeyCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/KeySigningKey'
                            - $ref: '#/components/schemas/ZoneSigningKey'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/KeySigningKeyResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/KeySigningKey'
                        - $ref: '#/components/schemas/ZoneSigningKey'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/zones/{collectionId}/signingKeys:
    get:
      tags:
        - DNSSEC Resources
      summary: Retrieve a collection of signing keys
      description: Retrieve a list of key signing keys and zone signing keys applied to a zone.
      operationId: getZoneSigningKeys
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of signing keys
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/KeySigningKeyCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/KeySigningKey'
                            - $ref: '#/components/schemas/ZoneSigningKey'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/KeySigningKeyResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/KeySigningKey'
                        - $ref: '#/components/schemas/ZoneSigningKey'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/signingPolicies:
    get:
      tags:
        - DNSSEC Resources
      summary: Retrieve a collection of signing policies
      description: Retrieve a collection of all DNSSEC signing policies.
      operationId: getSigningPolicies
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of signing policies
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DNSSECSigningPolicyCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/DNSSECSigningPolicy'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DNSSECSigningPolicyResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/DNSSECSigningPolicy'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - DNSSEC Resources
      summary: Create a new signing policy
      description: Create a new DNSSEC signing policy. DNSSEC signing policies simplify administration by allowing you to configure DNSSEC settings in one place, and then apply the policy to forward and reverse zones. A DNSSEC signing policy contains all of the parameters needed to define the Key Signing Key and Zone Signing Key for a zone, including the settings for automatic key rollover.
      operationId: postSigningPolicy
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DNSSECSigningPolicyPostRequestBody'
            examples:
              signingPolicyExampleRequiredFields:
                $ref: '#/components/examples/signingPolicyExampleRequiredFields'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/DNSSECSigningPolicyPostRequestBody'
            examples:
              signingPolicyExampleRequiredFields:
                $ref: '#/components/examples/signingPolicyExampleRequiredFields'
            encoding: {}
      responses:
        "201":
          description: The newly created signing policy
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DNSSECSigningPolicy'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DNSSECSigningPolicyResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DNSSECSigningPolicy'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/signingPolicies/{id}:
    get:
      tags:
        - DNSSEC Resources
      summary: Retrieve a single signing policy
      description: Retrieve information about a DNSSEC signing policy.
      operationId: getSigningPolicy
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A signing policy
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DNSSECSigningPolicy'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DNSSECSigningPolicyResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DNSSECSigningPolicy'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - DNSSEC Resources
      summary: Update a signing policy
      description: Update an existing DNSSEC signing policy.
      operationId: putSigningPolicy
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DNSSECSigningPolicyPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/DNSSECSigningPolicyPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated signing policy
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DNSSECSigningPolicy'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DNSSECSigningPolicyResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DNSSECSigningPolicy'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - DNSSEC Resources
      summary: Delete a signing policy
      description: Delete an existing DNSSEC signing policy.
      operationId: deleteSigningPolicy
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/splits:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of split resources
      description: Retrieve a collection of all split IPv4 or IPv6 blocks and networks.
      operationId: getSplits
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of split resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4BlockSplitCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4BlockSplit'
                            - $ref: '#/components/schemas/IPv4NetworkSplit'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4BlockSplitResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4BlockSplit'
                        - $ref: '#/components/schemas/IPv4NetworkSplit'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/splits/{id}:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a single split resource
      description: Retrieve a split IPv4 or IPv6 block or network.
      operationId: getSplit
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A split resource
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4BlockSplit'
                      - $ref: '#/components/schemas/IPv4NetworkSplit'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4BlockSplitResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4BlockSplit'
                  - $ref: '#/components/schemas/IPv4NetworkSplit'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/blocks/{collectionId}/splits:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of split resources
      description: Retrieve a collection of split IPv4 blocks and networks.
      operationId: getBlockSplits
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of split resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4BlockSplitCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4BlockSplit'
                            - $ref: '#/components/schemas/IPv4NetworkSplit'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4BlockSplitResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4BlockSplit'
                        - $ref: '#/components/schemas/IPv4NetworkSplit'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new split resource
      description: Split an IPv4 block or network into multiple smaller blocks or networks. A block or network can be split exponentially into two block or networks, up to a maximum of 1024.
      operationId: postBlockSplit
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4BlockSplit: '#/components/schemas/IPv4BlockSplitPostRequestBody'
                  IPv4NetworkSplit: '#/components/schemas/IPv4NetworkSplitPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4BlockSplitPostRequestBody'
                - $ref: '#/components/schemas/IPv4NetworkSplitPostRequestBody'
            examples:
              splitExampleIpv4Block:
                $ref: '#/components/examples/splitExampleIpv4Block'
              splitExampleIpv4Network:
                $ref: '#/components/examples/splitExampleIpv4Network'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4BlockSplit: '#/components/schemas/IPv4BlockSplitPostRequestBody'
                  IPv4NetworkSplit: '#/components/schemas/IPv4NetworkSplitPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4BlockSplitPostRequestBody'
                - $ref: '#/components/schemas/IPv4NetworkSplitPostRequestBody'
            examples:
              splitExampleIpv4Block:
                $ref: '#/components/examples/splitExampleIpv4Block'
              splitExampleIpv4Network:
                $ref: '#/components/examples/splitExampleIpv4Network'
            encoding: {}
      responses:
        "201":
          description: The newly created split resource
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4BlockSplit'
                      - $ref: '#/components/schemas/IPv4NetworkSplit'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4BlockSplitResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4BlockSplit'
                  - $ref: '#/components/schemas/IPv4NetworkSplit'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/configurations/{collectionId}/splits:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of split resources
      description: Retrieve a collection of split IPv4 blocks.
      operationId: getConfigurationSplits
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of split resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4BlockSplitCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/IPv4BlockSplit'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4BlockSplitResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/IPv4BlockSplit'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new split resource
      description: Split an IPv4 or IPv6 block or network into multiple smaller blocks or networks. A block or network can be split exponentially into two block or networks, up to a maximum of 1024.
      operationId: postConfigurationSplit
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/IPv4BlockSplitPostRequestBody'
            examples:
              splitExampleIpv4Block:
                $ref: '#/components/examples/splitExampleIpv4Block'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/IPv4BlockSplitPostRequestBody'
            examples:
              splitExampleIpv4Block:
                $ref: '#/components/examples/splitExampleIpv4Block'
            encoding: {}
      responses:
        "201":
          description: The newly created split resource
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/IPv4BlockSplit'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4BlockSplitResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/IPv4BlockSplit'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/subclasses:
    get:
      tags:
        - DHCP Resources
      summary: Retrieve a collection of subclasses
      description: Retrieve a collection of all DHCP subclasses for all configurations.
      operationId: getSubclasses
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of subclient classes
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPv4SubclassCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/DHCPv4Subclass'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPv4SubclassResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/DHCPv4Subclass'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/subclasses/{id}:
    get:
      tags:
        - DHCP Resources
      summary: Retrieve a single subclass
      description: Retrieve a single DHCP subclass.
      operationId: getSubclass
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A subclass
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DHCPv4Subclass'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPv4SubclassResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DHCPv4Subclass'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - DHCP Resources
      summary: Update a subclass
      description: Update a DHCP subclass.
      operationId: putSubclass
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DHCPv4SubclassPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/DHCPv4SubclassPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated subclass
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DHCPv4Subclass'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPv4SubclassResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DHCPv4Subclass'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - DHCP Resources
      summary: Delete a subclass
      description: Delete a DHCP subclass.
      operationId: deleteSubclass
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/clientClasses/{collectionId}/subclasses:
    get:
      tags:
        - DHCP Resources
      summary: Retrieve a collection of subclasses
      description: Retrieve a collection of all DHCP subclasses for a DHCP client class.
      operationId: getClientClassSubclasses
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of subclasses
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPv4SubclassCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/DHCPv4Subclass'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPv4SubclassResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/DHCPv4Subclass'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - DHCP Resources
      summary: Create a new subclass
      description: Add a new DHCP subclass to a DHCP client class.
      operationId: postClientClassSubclass
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DHCPv4SubclassPostRequestBody'
            examples:
              subclassExampleRequiredFields:
                $ref: '#/components/examples/subclassExampleRequiredFields'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/DHCPv4SubclassPostRequestBody'
            examples:
              subclassExampleRequiredFields:
                $ref: '#/components/examples/subclassExampleRequiredFields'
            encoding: {}
      responses:
        "201":
          description: The newly created subclass
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DHCPv4Subclass'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPv4SubclassResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DHCPv4Subclass'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/notificationGroups/{collectionId}/subjects:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve users and groups that are linked a notification group
      description: Retrieve a list of users and groups that are linked to a notification group.
      operationId: getNotificationGroupSubjects
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of linked users and groups
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/UserCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/User'
                            - $ref: '#/components/schemas/UserGroup'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/UserResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/User'
                        - $ref: '#/components/schemas/UserGroup'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Administrator Resources
      summary: Add users and groups to a notification group
      description: Link users and groups to an existing notification group.
      operationId: postNotificationGroupSubject
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  User: '#/components/schemas/UserPostRequestBody'
                  UserGroup: '#/components/schemas/UserGroupPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/UserPostRequestBody'
                - $ref: '#/components/schemas/UserGroupPostRequestBody'
            examples:
              subjectExampleLinkUserWithNotificationGroup:
                $ref: '#/components/examples/subjectExampleLinkUserWithNotificationGroup'
              subjectExampleLinkUserGroupWithNotificationGroup:
                $ref: '#/components/examples/subjectExampleLinkUserGroupWithNotificationGroup'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  User: '#/components/schemas/UserPostRequestBody'
                  UserGroup: '#/components/schemas/UserGroupPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/UserPostRequestBody'
                - $ref: '#/components/schemas/UserGroupPostRequestBody'
            examples:
              subjectExampleLinkUserWithNotificationGroup:
                $ref: '#/components/examples/subjectExampleLinkUserWithNotificationGroup'
              subjectExampleLinkUserGroupWithNotificationGroup:
                $ref: '#/components/examples/subjectExampleLinkUserGroupWithNotificationGroup'
            encoding: {}
      responses:
        "201":
          description: The linked user or group
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/User'
                      - $ref: '#/components/schemas/UserGroup'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/UserResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/User'
                  - $ref: '#/components/schemas/UserGroup'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/notificationGroups/{collectionId}/subjects/{id}:
    delete:
      tags:
        - Administrator Resources
      summary: Remove users and groups from a notification group.
      description: Unlink users and groups from an existing notification group.
      operationId: deleteNotificationGroupSubject
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/tagGroups:
    get:
      tags:
        - Tag Resources
      summary: Retrieve a collection of tag groups
      description: Retrieve a list of all tag groups.
      operationId: getTagGroups
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of tag groups
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/TagGroupCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/TagGroup'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/TagGroupResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/TagGroup'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Tag Resources
      summary: Create a new tag group
      description: Create a new tag group. Tags help you apply existing business practices and organizational structures to your network design. Tags are arranged in a hierarchical tree structure and any number of elements are supported at each level of the hierarchy below the top-level tag group.
      operationId: postTagGroup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TagGroupPostRequestBody'
            examples:
              tagGroupExampleRequiredFields:
                $ref: '#/components/examples/tagGroupExampleRequiredFields'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/TagGroupPostRequestBody'
            examples:
              tagGroupExampleRequiredFields:
                $ref: '#/components/examples/tagGroupExampleRequiredFields'
            encoding: {}
      responses:
        "201":
          description: The newly created tag group
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/TagGroup'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TagGroupResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/TagGroup'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/tagGroups/{id}:
    get:
      tags:
        - Tag Resources
      summary: Retrieve a single tag group
      description: Retrieve information about a tag group.
      operationId: getTagGroup
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A tag group
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/TagGroup'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TagGroupResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/TagGroup'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Tag Resources
      summary: Update a tag group
      description: Update an existing tag group.
      operationId: putTagGroup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TagGroupPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/TagGroupPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated tag group
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/TagGroup'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TagGroupResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/TagGroup'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - Tag Resources
      summary: Delete a tag group
      description: Delete an existing tag group.
      operationId: deleteTagGroup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/tags/{collectionId}/taggedResources:
    get:
      tags:
        - Tag Resources
      summary: Retrieve a collection of tagged resources
      description: Retrieve a list of resources that a tag has been applied to.
      operationId: getTagTaggedResources
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of tagged resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ResourceCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Resource'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ResourceResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Resource'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Tag Resources
      summary: Create a new tagged resource
      description: Add a tag to a specified resource.
      operationId: postTagTaggedResource
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ResourcePostRequestBody'
            examples:
              taggedResourceExampleTagResource:
                $ref: '#/components/examples/taggedResourceExampleTagResource'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePostRequestBody'
            examples:
              taggedResourceExampleTagResource:
                $ref: '#/components/examples/taggedResourceExampleTagResource'
            encoding: {}
      responses:
        "201":
          description: The newly created tagged resource
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Resource'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ResourceResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/tags/{collectionId}/taggedResources/{id}:
    get:
      tags:
        - Tag Resources
      summary: Retrieve a single tagged resource
      description: Retrieve information about a resource that a tag has been applied to.
      operationId: getTagTaggedResource
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A tagged resource
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Resource'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ResourceResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - Tag Resources
      summary: Delete a tagged resource
      description: Delete a tag from a resource.
      operationId: deleteTagTaggedResource
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/tags:
    get:
      tags:
        - Tag Resources
      summary: Retrieve a collection of tags
      description: Retrieve a list of all tags.
      operationId: getTags
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of tags
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/TagCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Tag'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/TagResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Tag'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/tags/{id}:
    get:
      tags:
        - Tag Resources
      summary: Retrieve a single tag
      description: Retrieve information about a tag.
      operationId: getTag
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A tag
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Tag'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TagResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Tag Resources
      summary: Update a tag
      description: Update an existing tag.
      operationId: putTag
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  Tag: '#/components/schemas/TagPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/TagPutRequestBody'
                - $ref: '#/components/schemas/TagPutRequestBody'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  Tag: '#/components/schemas/TagPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/TagPutRequestBody'
                - $ref: '#/components/schemas/TagPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated tag
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/Tag'
                      - $ref: '#/components/schemas/Tag'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TagResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Tag'
                  - $ref: '#/components/schemas/Tag'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - Tag Resources
      summary: Delete a tag
      description: Delete an existing tag.
      operationId: deleteTag
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/{collection}/{collectionId}/tags:
    get:
      tags:
        - Tag Resources
      summary: Retrieve a collection of linked tags
      description: Retrieve a list of all tags that are linked to a resource.
      operationId: getCollectionTags
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - name: collection
          in: path
          description: The name of the collection.
          required: true
          schema:
            type: string
            enum:
              - accessControlLists
              - addresses
              - authenticators
              - blocks
              - clientClasses
              - clientIdentifiers
              - configurations
              - deploymentOptions
              - deploymentRoles
              - deviceSubtypes
              - deviceTypes
              - devices
              - dns64
              - files
              - groups
              - hsmConfigurations
              - hsmServers
              - interfaces
              - ipGroups
              - keyDistributionCenters
              - locations
              - macAddresses
              - namingPolicies
              - networks
              - notificationGroups
              - ranges
              - realms
              - reconciliationPolicies
              - reports
              - resourceRecords
              - responsePolicies
              - schedules
              - serverGroups
              - servers
              - servicePrincipals
              - signingKeys
              - signingPolicies
              - subclasses
              - tagGroups
              - tags
              - templates
              - tftpGroups
              - users
              - vendorProfiles
              - views
              - zoneDeclarations
              - zoneGroups
              - zones
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of linked tags
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/TagCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Tag'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/TagResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Tag'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Tag Resources
      summary: Link a tag to a resource
      description: Link a tag to a resource.
      operationId: postCollectionTag
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: collection
          in: path
          description: The name of the collection.
          required: true
          schema:
            type: string
            enum:
              - accessControlLists
              - addresses
              - authenticators
              - blocks
              - clientClasses
              - clientIdentifiers
              - configurations
              - deploymentOptions
              - deploymentRoles
              - deviceSubtypes
              - deviceTypes
              - devices
              - dns64
              - files
              - groups
              - hsmConfigurations
              - hsmServers
              - interfaces
              - ipGroups
              - keyDistributionCenters
              - locations
              - macAddresses
              - namingPolicies
              - networks
              - notificationGroups
              - ranges
              - realms
              - reconciliationPolicies
              - reports
              - resourceRecords
              - responsePolicies
              - schedules
              - serverGroups
              - servers
              - servicePrincipals
              - signingKeys
              - signingPolicies
              - subclasses
              - tagGroups
              - tags
              - templates
              - tftpGroups
              - users
              - vendorProfiles
              - views
              - zoneDeclarations
              - zoneGroups
              - zones
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TagPostRequestBody'
            examples:
              tagExampleTagResource:
                $ref: '#/components/examples/tagExampleTagResource'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/TagPostRequestBody'
            examples:
              tagExampleTagResource:
                $ref: '#/components/examples/tagExampleTagResource'
            encoding: {}
      responses:
        "201":
          description: The linked tag
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Tag'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TagResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/tagGroups/{collectionId}/tags:
    get:
      tags:
        - Tag Resources
      summary: Retrieve a collection of tags
      description: Retrieve a list of all tags within a tag group.
      operationId: getTagGroupTags
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of tags
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/TagCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Tag'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/TagResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Tag'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Tag Resources
      summary: Create a new tag
      description: Create a new tag under a tag group. Tags help you apply existing business practices and organizational structures to your network design. Tags are arranged in a hierarchical tree structure and any number of elements are supported at each level of the hierarchy below the top-level tag group.
      operationId: postTagGroupTag
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TagPostRequestBody'
            examples:
              tagExampleRequiredFields:
                $ref: '#/components/examples/tagExampleRequiredFields'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/TagPostRequestBody'
            examples:
              tagExampleRequiredFields:
                $ref: '#/components/examples/tagExampleRequiredFields'
            encoding: {}
      responses:
        "201":
          description: The newly created tag
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Tag'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TagResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/tags/{collectionId}/tags:
    get:
      tags:
        - Tag Resources
      summary: Retrieve a collection of tags
      description: Retrieve a list of all child tags under a parent tag.
      operationId: getTagTags
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of tags
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/TagCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Tag'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/TagResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Tag'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Tag Resources
      summary: Create a new tag
      description: Create a new child tag under a parent tag.
      operationId: postTagTag
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TagPostRequestBody'
            examples:
              tagExampleRequiredFields:
                $ref: '#/components/examples/tagExampleRequiredFields'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/TagPostRequestBody'
            examples:
              tagExampleRequiredFields:
                $ref: '#/components/examples/tagExampleRequiredFields'
            encoding: {}
      responses:
        "201":
          description: The newly created tag
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Tag'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TagResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/{collection}/{collectionId}/tags/{id}:
    delete:
      tags:
        - Tag Resources
      summary: Unlink a tag from a resource
      description: Unlink a tag from a resource.
      operationId: deleteCollectionTag
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: collection
          in: path
          description: The name of the collection.
          required: true
          schema:
            type: string
            enum:
              - accessControlLists
              - addresses
              - authenticators
              - blocks
              - clientClasses
              - clientIdentifiers
              - configurations
              - deploymentOptions
              - deploymentRoles
              - deviceSubtypes
              - deviceTypes
              - devices
              - dns64
              - files
              - groups
              - hsmConfigurations
              - hsmServers
              - interfaces
              - ipGroups
              - keyDistributionCenters
              - locations
              - macAddresses
              - namingPolicies
              - networks
              - notificationGroups
              - ranges
              - realms
              - reconciliationPolicies
              - reports
              - resourceRecords
              - responsePolicies
              - schedules
              - serverGroups
              - servers
              - servicePrincipals
              - signingKeys
              - signingPolicies
              - subclasses
              - tagGroups
              - tags
              - templates
              - tftpGroups
              - users
              - vendorProfiles
              - views
              - zoneDeclarations
              - zoneGroups
              - zones
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/users/{collectionId}/tasks:
    get:
      tags:
        - User and Group Resources
      summary: Retrieve a collection of tasks
      description: Retrieve a collection of all tasks for a user.
      operationId: getUserTasks
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of tasks
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/TaskCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Task'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/TaskResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Task'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - User and Group Resources
      summary: Create a new task
      description: Create a new task for a user.
      operationId: postUserTask
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TaskPostRequestBody'
            examples:
              taskExampleRequiredFields:
                $ref: '#/components/examples/taskExampleRequiredFields'
              taskExampleOptionalFields:
                $ref: '#/components/examples/taskExampleOptionalFields'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/TaskPostRequestBody'
            examples:
              taskExampleRequiredFields:
                $ref: '#/components/examples/taskExampleRequiredFields'
              taskExampleOptionalFields:
                $ref: '#/components/examples/taskExampleOptionalFields'
            encoding: {}
      responses:
        "201":
          description: The newly created task
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Task'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TaskResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/users/{collectionId}/tasks/{id}:
    get:
      tags:
        - User and Group Resources
      summary: Retrieve a single task
      description: Retrieve a single task for a user.
      operationId: getUserTask
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A task
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Task'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TaskResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - User and Group Resources
      summary: Update a task
      description: Update a task for a user.
      operationId: putUserTask
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TaskPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/TaskPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated task
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Task'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TaskResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - User and Group Resources
      summary: Delete a task
      description: Delete a task for a user.
      operationId: deleteUserTask
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/templateApplications:
    get:
      tags:
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Retrieve a collection of template applications
      description: Retrieve a collection of all IPv4 template and DNS zone template applications to resources.
      operationId: getTemplateApplications
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of template applications
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4TemplateApplicationCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4TemplateApplication'
                            - $ref: '#/components/schemas/ZoneTemplateApplication'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4TemplateApplicationResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4TemplateApplication'
                        - $ref: '#/components/schemas/ZoneTemplateApplication'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/templateApplications/{id}:
    get:
      tags:
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Retrieve a single template application
      description: Retrieve information about an IPv4 template or DNS zone template application to a resource.
      operationId: getTemplateApplication
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A template application
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4TemplateApplication'
                      - $ref: '#/components/schemas/ZoneTemplateApplication'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4TemplateApplicationResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4TemplateApplication'
                  - $ref: '#/components/schemas/ZoneTemplateApplication'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/addresses/{collectionId}/templateApplications:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of template applications
      description: Retrieve a collection of all IPv4 template applications for an address resource.
      operationId: getAddressTemplateApplications
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of template applications
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4TemplateApplicationCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/IPv4TemplateApplication'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4TemplateApplicationResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/IPv4TemplateApplication'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new template application
      description: Apply an IPv4 template to an address resource.
      operationId: postAddressTemplateApplication
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/IPv4TemplateApplicationPostRequestBody'
            examples:
              templateApplicationExampleIpv4Template:
                $ref: '#/components/examples/templateApplicationExampleIpv4Template'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/IPv4TemplateApplicationPostRequestBody'
            examples:
              templateApplicationExampleIpv4Template:
                $ref: '#/components/examples/templateApplicationExampleIpv4Template'
            encoding: {}
      responses:
        "201":
          description: The newly created template application
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/IPv4TemplateApplication'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4TemplateApplicationResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/IPv4TemplateApplication'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/blocks/{collectionId}/templateApplications:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of template applications
      description: Retrieve a collection of all IPv4 template applications for a block resource.
      operationId: getBlockTemplateApplications
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of template applications
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4TemplateApplicationCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/IPv4TemplateApplication'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4TemplateApplicationResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/IPv4TemplateApplication'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new template application
      description: Apply an IPv4 template to a block resource.
      operationId: postBlockTemplateApplication
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/IPv4TemplateApplicationPostRequestBody'
            examples:
              templateApplicationExampleIpv4Template:
                $ref: '#/components/examples/templateApplicationExampleIpv4Template'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/IPv4TemplateApplicationPostRequestBody'
            examples:
              templateApplicationExampleIpv4Template:
                $ref: '#/components/examples/templateApplicationExampleIpv4Template'
            encoding: {}
      responses:
        "201":
          description: The newly created template application
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/IPv4TemplateApplication'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4TemplateApplicationResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/IPv4TemplateApplication'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/networks/{collectionId}/templateApplications:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of template applications
      description: Retrieve a collection of all IPv4 template applications for a network resource.
      operationId: getNetworkTemplateApplications
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of template applications
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4TemplateApplicationCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/IPv4TemplateApplication'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4TemplateApplicationResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/IPv4TemplateApplication'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new template application
      description: Apply an IPv4 template to a network resource.
      operationId: postNetworkTemplateApplication
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/IPv4TemplateApplicationPostRequestBody'
            examples:
              templateApplicationExampleIpv4Template:
                $ref: '#/components/examples/templateApplicationExampleIpv4Template'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/IPv4TemplateApplicationPostRequestBody'
            examples:
              templateApplicationExampleIpv4Template:
                $ref: '#/components/examples/templateApplicationExampleIpv4Template'
            encoding: {}
      responses:
        "201":
          description: The newly created template application
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/IPv4TemplateApplication'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4TemplateApplicationResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/IPv4TemplateApplication'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/ranges/{collectionId}/templateApplications:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of template applications
      description: Retrieve a collection of all IPv4 template applications for a DHCP range resource.
      operationId: getRangeTemplateApplications
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of template applications
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4TemplateApplicationCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/IPv4TemplateApplication'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4TemplateApplicationResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/IPv4TemplateApplication'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new template application
      description: Apply an IPv4 template to a DHCP range resource.
      operationId: postRangeTemplateApplication
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/IPv4TemplateApplicationPostRequestBody'
            examples:
              templateApplicationExampleIpv4Template:
                $ref: '#/components/examples/templateApplicationExampleIpv4Template'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/IPv4TemplateApplicationPostRequestBody'
            examples:
              templateApplicationExampleIpv4Template:
                $ref: '#/components/examples/templateApplicationExampleIpv4Template'
            encoding: {}
      responses:
        "201":
          description: The newly created template application
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/IPv4TemplateApplication'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4TemplateApplicationResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/IPv4TemplateApplication'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/templates/{collectionId}/templateApplications:
    get:
      tags:
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Retrieve a collection of template applications
      description: Retrieve a collection of all template applications for an IPv4 template or DNS zone template resource.
      operationId: getTemplateTemplateApplications
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of template applications
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4TemplateApplicationCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4TemplateApplication'
                            - $ref: '#/components/schemas/ZoneTemplateApplication'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4TemplateApplicationResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4TemplateApplication'
                        - $ref: '#/components/schemas/ZoneTemplateApplication'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Create a new template application
      description: Apply an IPv4 template or DNS zone template to all resources linked to the template.
      operationId: postTemplateTemplateApplication
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4TemplateApplication: '#/components/schemas/IPv4TemplateApplicationPostRequestBody'
                  ZoneTemplateApplication: '#/components/schemas/ZoneTemplateApplicationPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4TemplateApplicationPostRequestBody'
                - $ref: '#/components/schemas/ZoneTemplateApplicationPostRequestBody'
            examples:
              templateApplicationExampleIpv4Template:
                $ref: '#/components/examples/templateApplicationExampleIpv4Template'
              templateApplicationExampleZoneTemplate:
                $ref: '#/components/examples/templateApplicationExampleZoneTemplate'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4TemplateApplication: '#/components/schemas/IPv4TemplateApplicationPostRequestBody'
                  ZoneTemplateApplication: '#/components/schemas/ZoneTemplateApplicationPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4TemplateApplicationPostRequestBody'
                - $ref: '#/components/schemas/ZoneTemplateApplicationPostRequestBody'
            examples:
              templateApplicationExampleIpv4Template:
                $ref: '#/components/examples/templateApplicationExampleIpv4Template'
              templateApplicationExampleZoneTemplate:
                $ref: '#/components/examples/templateApplicationExampleZoneTemplate'
            encoding: {}
      responses:
        "201":
          description: The newly created template application
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4TemplateApplication'
                      - $ref: '#/components/schemas/ZoneTemplateApplication'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4TemplateApplicationResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4TemplateApplication'
                  - $ref: '#/components/schemas/ZoneTemplateApplication'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/zones/{collectionId}/templateApplications:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a collection of template applications
      description: Retrieve a collection of all DNS zone template applications for a zone resource.
      operationId: getZoneTemplateApplications
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of template applications
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ZoneTemplateApplicationCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ZoneTemplateApplication'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ZoneTemplateApplicationResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/ZoneTemplateApplication'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - View and Zone Resources
      summary: Create a new template application
      description: Apply a DNS zone template to a zone resource.
      operationId: postZoneTemplateApplication
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ZoneTemplateApplicationPostRequestBody'
            examples:
              templateApplicationExampleZoneTemplate:
                $ref: '#/components/examples/templateApplicationExampleZoneTemplate'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneTemplateApplicationPostRequestBody'
            examples:
              templateApplicationExampleZoneTemplate:
                $ref: '#/components/examples/templateApplicationExampleZoneTemplate'
            encoding: {}
      responses:
        "201":
          description: The newly created template application
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ZoneTemplateApplication'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ZoneTemplateApplicationResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneTemplateApplication'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/templateItems:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of template items
      description: Retrieve a collection of all configured IPv4 template items.
      operationId: getTemplateItems
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of template items
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4DHCPRangeTemplateItemCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4DHCPRangeTemplateItem'
                            - $ref: '#/components/schemas/IPv4GatewayTemplateItem'
                            - $ref: '#/components/schemas/IPv4GroupTemplateItem'
                            - $ref: '#/components/schemas/IPv4ReservedRangeTemplateItem'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4DHCPRangeTemplateItemResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4DHCPRangeTemplateItem'
                        - $ref: '#/components/schemas/IPv4GatewayTemplateItem'
                        - $ref: '#/components/schemas/IPv4GroupTemplateItem'
                        - $ref: '#/components/schemas/IPv4ReservedRangeTemplateItem'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/templateItems/{id}:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a single template item
      description: Retrieve information about an IPv4 template item.
      operationId: getTemplateItem
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A template item
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4DHCPRangeTemplateItem'
                      - $ref: '#/components/schemas/IPv4GatewayTemplateItem'
                      - $ref: '#/components/schemas/IPv4GroupTemplateItem'
                      - $ref: '#/components/schemas/IPv4ReservedRangeTemplateItem'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4DHCPRangeTemplateItemResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4DHCPRangeTemplateItem'
                  - $ref: '#/components/schemas/IPv4GatewayTemplateItem'
                  - $ref: '#/components/schemas/IPv4GroupTemplateItem'
                  - $ref: '#/components/schemas/IPv4ReservedRangeTemplateItem'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - IPv4 and IPv6 Resources
      summary: Update a template item
      description: Update an existing IPv4 template item.
      operationId: putTemplateItem
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4DHCPRangeTemplateItem: '#/components/schemas/IPv4DHCPRangeTemplateItemPutRequestBody'
                  IPv4GatewayTemplateItem: '#/components/schemas/IPv4GatewayTemplateItemPutRequestBody'
                  IPv4GroupTemplateItem: '#/components/schemas/IPv4GroupTemplateItemPutRequestBody'
                  IPv4ReservedRangeTemplateItem: '#/components/schemas/IPv4ReservedRangeTemplateItemPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4DHCPRangeTemplateItemPutRequestBody'
                - $ref: '#/components/schemas/IPv4GatewayTemplateItemPutRequestBody'
                - $ref: '#/components/schemas/IPv4GroupTemplateItemPutRequestBody'
                - $ref: '#/components/schemas/IPv4ReservedRangeTemplateItemPutRequestBody'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4DHCPRangeTemplateItem: '#/components/schemas/IPv4DHCPRangeTemplateItemPutRequestBody'
                  IPv4GatewayTemplateItem: '#/components/schemas/IPv4GatewayTemplateItemPutRequestBody'
                  IPv4GroupTemplateItem: '#/components/schemas/IPv4GroupTemplateItemPutRequestBody'
                  IPv4ReservedRangeTemplateItem: '#/components/schemas/IPv4ReservedRangeTemplateItemPutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4DHCPRangeTemplateItemPutRequestBody'
                - $ref: '#/components/schemas/IPv4GatewayTemplateItemPutRequestBody'
                - $ref: '#/components/schemas/IPv4GroupTemplateItemPutRequestBody'
                - $ref: '#/components/schemas/IPv4ReservedRangeTemplateItemPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated template item
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4DHCPRangeTemplateItem'
                      - $ref: '#/components/schemas/IPv4GatewayTemplateItem'
                      - $ref: '#/components/schemas/IPv4GroupTemplateItem'
                      - $ref: '#/components/schemas/IPv4ReservedRangeTemplateItem'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4DHCPRangeTemplateItemResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4DHCPRangeTemplateItem'
                  - $ref: '#/components/schemas/IPv4GatewayTemplateItem'
                  - $ref: '#/components/schemas/IPv4GroupTemplateItem'
                  - $ref: '#/components/schemas/IPv4ReservedRangeTemplateItem'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - IPv4 and IPv6 Resources
      summary: Delete a template item
      description: Delete an existing IPv4 template item.
      operationId: deleteTemplateItem
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/templates/{collectionId}/templateItems:
    get:
      tags:
        - IPv4 and IPv6 Resources
      summary: Retrieve a collection of template items
      description: Retrieve a collection of IPv4 template items within an IPv4 template.
      operationId: getTemplateTemplateItems
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of template items
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4DHCPRangeTemplateItemCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4DHCPRangeTemplateItem'
                            - $ref: '#/components/schemas/IPv4GatewayTemplateItem'
                            - $ref: '#/components/schemas/IPv4GroupTemplateItem'
                            - $ref: '#/components/schemas/IPv4ReservedRangeTemplateItem'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4DHCPRangeTemplateItemResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4DHCPRangeTemplateItem'
                        - $ref: '#/components/schemas/IPv4GatewayTemplateItem'
                        - $ref: '#/components/schemas/IPv4GroupTemplateItem'
                        - $ref: '#/components/schemas/IPv4ReservedRangeTemplateItem'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
      summary: Create a new template item
      description: Create a new IPv4 template item within an IPv4 template.
      operationId: postTemplateTemplateItem
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4DHCPRangeTemplateItem: '#/components/schemas/IPv4DHCPRangeTemplateItemPostRequestBody'
                  IPv4GroupTemplateItem: '#/components/schemas/IPv4GroupTemplateItemPostRequestBody'
                  IPv4ReservedRangeTemplateItem: '#/components/schemas/IPv4ReservedRangeTemplateItemPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4DHCPRangeTemplateItemPostRequestBody'
                - $ref: '#/components/schemas/IPv4GroupTemplateItemPostRequestBody'
                - $ref: '#/components/schemas/IPv4ReservedRangeTemplateItemPostRequestBody'
            examples:
              templateItemExampleIpv4DhcpRange:
                $ref: '#/components/examples/templateItemExampleIpv4DhcpRange'
              templateItemExampleIpv4Group:
                $ref: '#/components/examples/templateItemExampleIpv4Group'
              templateItemExampleIpv4ReservedRange:
                $ref: '#/components/examples/templateItemExampleIpv4ReservedRange'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4DHCPRangeTemplateItem: '#/components/schemas/IPv4DHCPRangeTemplateItemPostRequestBody'
                  IPv4GroupTemplateItem: '#/components/schemas/IPv4GroupTemplateItemPostRequestBody'
                  IPv4ReservedRangeTemplateItem: '#/components/schemas/IPv4ReservedRangeTemplateItemPostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4DHCPRangeTemplateItemPostRequestBody'
                - $ref: '#/components/schemas/IPv4GroupTemplateItemPostRequestBody'
                - $ref: '#/components/schemas/IPv4ReservedRangeTemplateItemPostRequestBody'
            examples:
              templateItemExampleIpv4DhcpRange:
                $ref: '#/components/examples/templateItemExampleIpv4DhcpRange'
              templateItemExampleIpv4Group:
                $ref: '#/components/examples/templateItemExampleIpv4Group'
              templateItemExampleIpv4ReservedRange:
                $ref: '#/components/examples/templateItemExampleIpv4ReservedRange'
            encoding: {}
      responses:
        "201":
          description: The newly created template item
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4DHCPRangeTemplateItem'
                      - $ref: '#/components/schemas/IPv4GroupTemplateItem'
                      - $ref: '#/components/schemas/IPv4ReservedRangeTemplateItem'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4DHCPRangeTemplateItemResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4DHCPRangeTemplateItem'
                  - $ref: '#/components/schemas/IPv4GroupTemplateItem'
                  - $ref: '#/components/schemas/IPv4ReservedRangeTemplateItem'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/templates:
    get:
      tags:
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Retrieve a collection of templates
      description: Retrieve a collection of all IPv4 templates and DNS zone templates.
      operationId: getTemplates
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of templates
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4TemplateCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4Template'
                            - $ref: '#/components/schemas/ZoneTemplate'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4TemplateResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4Template'
                        - $ref: '#/components/schemas/ZoneTemplate'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/templates/{id}:
    get:
      tags:
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Retrieve a single template
      description: Retrieve information about an IPv4 template or DNS zone template.
      operationId: getTemplate
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A template
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Template'
                      - $ref: '#/components/schemas/ZoneTemplate'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4TemplateResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Template'
                  - $ref: '#/components/schemas/ZoneTemplate'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Update a template
      description: Update an existing IPv4 template or DNS zone template.
      operationId: putTemplate
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Template: '#/components/schemas/IPv4TemplatePutRequestBody'
                  ZoneTemplate: '#/components/schemas/ZoneTemplatePutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4TemplatePutRequestBody'
                - $ref: '#/components/schemas/ZoneTemplatePutRequestBody'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Template: '#/components/schemas/IPv4TemplatePutRequestBody'
                  ZoneTemplate: '#/components/schemas/ZoneTemplatePutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4TemplatePutRequestBody'
                - $ref: '#/components/schemas/ZoneTemplatePutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated template
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Template'
                      - $ref: '#/components/schemas/ZoneTemplate'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4TemplateResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Template'
                  - $ref: '#/components/schemas/ZoneTemplate'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Delete a template
      description: Delete an existing IPv4 template or DNS zone template.
      operationId: deleteTemplate
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/configurations/{collectionId}/templates:
    get:
      tags:
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Retrieve a collection of templates
      description: Retrieve a collection of all IPv4 templates or DNS zone templates.
      operationId: getConfigurationTemplates
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of templates
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/IPv4TemplateCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/IPv4Template'
                            - $ref: '#/components/schemas/ZoneTemplate'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/IPv4TemplateResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/IPv4Template'
                        - $ref: '#/components/schemas/ZoneTemplate'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Create a new template
      description: Create a new IPv4 template or DNS zone template.
      operationId: postConfigurationTemplate
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Template: '#/components/schemas/IPv4TemplatePostRequestBody'
                  ZoneTemplate: '#/components/schemas/ZoneTemplatePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4TemplatePostRequestBody'
                - $ref: '#/components/schemas/ZoneTemplatePostRequestBody'
            examples:
              templateExampleIpv4Template:
                $ref: '#/components/examples/templateExampleIpv4Template'
              templateExampleIpv4TemplateWithTemplateItems:
                $ref: '#/components/examples/templateExampleIpv4TemplateWithTemplateItems'
              templateExampleZoneTemplate:
                $ref: '#/components/examples/templateExampleZoneTemplate'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  IPv4Template: '#/components/schemas/IPv4TemplatePostRequestBody'
                  ZoneTemplate: '#/components/schemas/ZoneTemplatePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/IPv4TemplatePostRequestBody'
                - $ref: '#/components/schemas/ZoneTemplatePostRequestBody'
            examples:
              templateExampleIpv4Template:
                $ref: '#/components/examples/templateExampleIpv4Template'
              templateExampleIpv4TemplateWithTemplateItems:
                $ref: '#/components/examples/templateExampleIpv4TemplateWithTemplateItems'
              templateExampleZoneTemplate:
                $ref: '#/components/examples/templateExampleZoneTemplate'
            encoding: {}
      responses:
        "201":
          description: The newly created template
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/IPv4Template'
                      - $ref: '#/components/schemas/ZoneTemplate'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/IPv4TemplateResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IPv4Template'
                  - $ref: '#/components/schemas/ZoneTemplate'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/views/{collectionId}/templates:
    get:
      tags:
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Retrieve a collection of templates
      description: Retrieve a collection of all DNS zone templates of a view.
      operationId: getViewTemplates
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of templates
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ZoneTemplateCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ZoneTemplate'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ZoneTemplateResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/ZoneTemplate'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - IPv4 and IPv6 Resources
        - View and Zone Resources
      summary: Create a new template
      description: Create a new DNS zone template in a view.
      operationId: postViewTemplate
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ZoneTemplatePostRequestBody'
            examples:
              templateExampleZoneTemplate:
                $ref: '#/components/examples/templateExampleZoneTemplate'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneTemplatePostRequestBody'
            examples:
              templateExampleZoneTemplate:
                $ref: '#/components/examples/templateExampleZoneTemplate'
            encoding: {}
      responses:
        "201":
          description: The newly created template
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ZoneTemplate'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ZoneTemplateResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneTemplate'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/tftpGroups:
    get:
      tags:
        - TFTP Resources
      summary: Retrieve a collection of TFTP groups
      description: Retrieve a list of all TFTP groups.
      operationId: getTftpGroups
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of TFTP groups
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/TFTPGroupCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/TFTPGroup'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/TFTPGroupResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/TFTPGroup'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/tftpGroups/{id}:
    get:
      tags:
        - TFTP Resources
      summary: Retrieve a single TFTP group
      description: Retrieve information about a TFTP group.
      operationId: getTftpGroup
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A TFTP group
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/TFTPGroup'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TFTPGroupResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/TFTPGroup'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - TFTP Resources
      summary: Update a TFTP group
      description: Update an existing TFTP group.
      operationId: putTftpGroup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TFTPGroupPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/TFTPGroupPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated TFTP group
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/TFTPGroup'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TFTPGroupResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/TFTPGroup'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - TFTP Resources
      summary: Delete a TFTP group
      description: Delete an existing TFTP group.
      operationId: deleteTftpGroup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/configurations/{collectionId}/tftpGroups:
    get:
      tags:
        - TFTP Resources
      summary: Retrieve a collection of TFTP groups
      description: Retrieve information about all TFTP groups within a configuration.
      operationId: getConfigurationTftpGroups
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of TFTP groups
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/TFTPGroupCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/TFTPGroup'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/TFTPGroupResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/TFTPGroup'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - TFTP Resources
      summary: Create a new TFTP group
      description: Create a new TFTP group within a configuration. A TFTP group can contain a folder or directory structure and the files for the service.
      operationId: postConfigurationTftpGroup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TFTPGroupPostRequestBody'
            examples:
              tftpGroupExampleRequiredFields:
                $ref: '#/components/examples/tftpGroupExampleRequiredFields'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/TFTPGroupPostRequestBody'
            examples:
              tftpGroupExampleRequiredFields:
                $ref: '#/components/examples/tftpGroupExampleRequiredFields'
            encoding: {}
      responses:
        "201":
          description: The newly created TFTP group
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/TFTPGroup'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TFTPGroupResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/TFTPGroup'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/transactions:
    get:
      tags:
        - Monitoring Resources
      summary: Retrieve a collection of transactions
      description: Retrieve information about all transaction history events.
      operationId: getTransactions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of transactions
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/TransactionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Transaction'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/TransactionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Transaction'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Monitoring Resources
      summary: Create a new transaction
      description: Undo a specific transaction.
      operationId: postTransaction
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-force-undo
          in: header
          description: Indicates whether to force undo a transaction if the undo operation is blocked due to broken optional resource dependencies.
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TransactionPostRequestBody'
            examples:
              transactionExampleUndo:
                $ref: '#/components/examples/transactionExampleUndo'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionPostRequestBody'
            examples:
              transactionExampleUndo:
                $ref: '#/components/examples/transactionExampleUndo'
            encoding: {}
      responses:
        "201":
          description: The newly created transaction
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Transaction'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TransactionResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/transactions/{id}:
    get:
      tags:
        - Monitoring Resources
      summary: Retrieve a single transaction
      description: Retrieve information about a transaction history event.
      operationId: getTransaction
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A transaction
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Transaction'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TransactionResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/{collection}/{collectionId}/transactions:
    get:
      tags:
        - Monitoring Resources
      summary: Retrieve a collection of transactions
      description: Retrieve information about transaction history events that occurred within a configuration.
      operationId: getCollectionTransactions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - name: collection
          in: path
          description: The name of the collection.
          required: true
          schema:
            type: string
            enum:
              - accessControlLists
              - addresses
              - authenticators
              - blocks
              - clientClasses
              - clientIdentifiers
              - configurations
              - deploymentOptionDefinitions
              - deploymentOptions
              - deploymentRoles
              - deviceSubtypes
              - deviceTypes
              - devices
              - dns64
              - files
              - groups
              - hsmConfigurations
              - hsmServers
              - interfaces
              - ipGroups
              - keyDistributionCenters
              - locations
              - macAddresses
              - macPools
              - namingPolicies
              - namingPolicyRestrictions
              - namingPolicyValues
              - networks
              - notificationGroups
              - ranges
              - realms
              - reconciliationPolicies
              - reports
              - resourceRecords
              - responsePolicies
              - schedules
              - serverGroups
              - servers
              - servicePrincipals
              - signingKeys
              - signingPolicies
              - subclasses
              - tagGroups
              - tags
              - tasks
              - templateItems
              - templates
              - tftpGroups
              - users
              - vendorProfiles
              - views
              - zoneDeclarations
              - zoneGroups
              - zones
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of transactions
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/TransactionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Transaction'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/TransactionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Transaction'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/trustRelationships:
    get:
      tags:
        - Database Management and Replication Resources
      summary: Retrieve a collection of trust relationships
      description: Retrieve information about the trust relationships configured between this Address Manager server and another Address Manager server.
      operationId: getTrustRelationships
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: A collection of trust relationships
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/TrustRelationshipCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/TrustRelationship'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/TrustRelationshipResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/TrustRelationship'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Database Management and Replication Resources
      summary: Create a trust relationship
      description: Configure trust relationship between this Address Manager server and another Address Manager server. You can configure a trust relationship between a maximum of 3 remote Address Manager servers. You must configure a trust relationship with at least one remote Address Manager server before you can configure database replication.
      operationId: postTrustRelationship
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TrustRelationshipPostRequestBody'
            examples:
              trustRelationshipExampleCreateTrustRelationship:
                $ref: '#/components/examples/trustRelationshipExampleCreateTrustRelationship'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/TrustRelationshipPostRequestBody'
            examples:
              trustRelationshipExampleCreateTrustRelationship:
                $ref: '#/components/examples/trustRelationshipExampleCreateTrustRelationship'
            encoding: {}
      responses:
        "201":
          description: The newly created trust relationship
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/TrustRelationship'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TrustRelationshipResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/TrustRelationship'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/trustRelationships/{id}:
    get:
      tags:
        - Database Management and Replication Resources
      summary: Retrieve a single trust relationship
      description: Retrieve information about a trust relationship configured between this Address Manager server and another Address Manager server.
      operationId: getTrustRelationship
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A trust relationship
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/TrustRelationship'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TrustRelationshipResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/TrustRelationship'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - Database Management and Replication Resources
      summary: Delete a trust relationship
      description: Remove a trust relationship between remote Address Manager servers.
      operationId: deleteTrustRelationship
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    patch:
      tags:
        - Database Management and Replication Resources
      summary: Partially update a trust relationship
      description: Update an existing trust relationship.
      operationId: patchTrustRelationship
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: The state of the trust relationship.
                  enum:
                    - TRUSTED
                    - UNTRUSTED
                    - REFRESH_KEYS
            examples:
              trustRelationshipExampleRefreshTrustRelationship:
                $ref: '#/components/examples/trustRelationshipExampleRefreshTrustRelationship'
            encoding: {}
      responses:
        "200":
          description: The updated trust relationship
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/TrustRelationship'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/TrustRelationshipResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/TrustRelationship'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/deployments/{collectionId}/updatedResources:
    get:
      tags:
        - Resource Record Resources
      summary: Retrieve a collection of resources
      description: Retrieve a list of all updated resources for a specified selective deployment.
      operationId: getDeploymentUpdatedResources
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/GenericRecordCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/GenericRecord'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/GenericRecordResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/GenericRecord'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/deployments/{collectionId}/updatedResources/{id}:
    get:
      tags:
        - Resource Record Resources
      summary: Retrieve a single resource
      description: Retrieve an updated resource for a specified selective deployment.
      operationId: getDeploymentUpdatedResource
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A resource
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/GenericRecord'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/GenericRecordResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericRecord'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/userDefinedFieldDefinitions:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve a collection of user-defined field definitions
      description: Retrieve information about all user defined fields.
      operationId: getUserDefinedFieldDefinitions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of user-defined field definitions
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/UserDefinedFieldDefinitionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/UserDefinedFieldDefinition'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/UserDefinedFieldDefinitionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/UserDefinedFieldDefinition'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Administrator Resources
      summary: Create a new user-defined field definition
      description: Create a new user defined field to capture and track information associated with objects when the information for each object is unique. User defined fields are used only within Address Manager and aren't deployed to managed servers.
      operationId: postUserDefinedFieldDefinition
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/UserDefinedFieldDefinitionPostRequestBody'
            examples:
              userDefinedFieldDefinitionExampleText:
                $ref: '#/components/examples/userDefinedFieldDefinitionExampleText'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/UserDefinedFieldDefinitionPostRequestBody'
            examples:
              userDefinedFieldDefinitionExampleText:
                $ref: '#/components/examples/userDefinedFieldDefinitionExampleText'
            encoding: {}
      responses:
        "201":
          description: The newly created user-defined field definition
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserDefinedFieldDefinition'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/UserDefinedFieldDefinitionResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldDefinition'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/userDefinedFieldDefinitions/{id}:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve a single user-defined field definition
      description: Retrieve information about a user defined field.
      operationId: getUserDefinedFieldDefinition
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A user-defined field definition
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserDefinedFieldDefinition'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/UserDefinedFieldDefinitionResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldDefinition'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Administrator Resources
      summary: Update a user-defined field definition
      description: Update an existing user defined field.
      operationId: putUserDefinedFieldDefinition
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/UserDefinedFieldDefinitionPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/UserDefinedFieldDefinitionPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated user-defined field definition
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserDefinedFieldDefinition'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/UserDefinedFieldDefinitionResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldDefinition'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - Administrator Resources
      summary: Delete a user-defined field definition
      description: Delete an existing user defined field.
      operationId: deleteUserDefinedFieldDefinition
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/userDefinedLinkDefinitions:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve a collection of user-defined link definitions
      description: Retrieves a list of all user-defined link definitions.
      operationId: getUserDefinedLinkDefinitions
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of user-defined link definitions
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/UserDefinedLinkDefinitionCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/UserDefinedLinkDefinition'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/UserDefinedLinkDefinitionResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/UserDefinedLinkDefinition'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Administrator Resources
      summary: Create a new user-defined link definition
      description: Creates a new user-defined link definition to provide a logical link between two objects in Address Manager. Once you have created a user-defined link definition, you can create a create the user-defined link to link the eligible entities.
      operationId: postUserDefinedLinkDefinition
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/UserDefinedLinkDefinitionPostRequestBody'
            examples:
              userDefinedLinkDefinitionExampleUndo:
                $ref: '#/components/examples/userDefinedLinkDefinitionExampleUndo'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/UserDefinedLinkDefinitionPostRequestBody'
            examples:
              userDefinedLinkDefinitionExampleUndo:
                $ref: '#/components/examples/userDefinedLinkDefinitionExampleUndo'
            encoding: {}
      responses:
        "201":
          description: The newly created user-defined link definition
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserDefinedLinkDefinition'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/UserDefinedLinkDefinitionResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedLinkDefinition'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/userDefinedLinkDefinitions/{id}:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve a single user-defined link definition
      description: Retrieve information about a specific user-defined link definition by passing in the ID of the user-defined link definition.
      operationId: getUserDefinedLinkDefinition
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A user-defined link definition
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserDefinedLinkDefinition'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/UserDefinedLinkDefinitionResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedLinkDefinition'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - Administrator Resources
      summary: Update a user-defined link definition
      description: Update an existing user-defined link definition by passing in the ID of the user-defined link definition that you would like to update.
      operationId: putUserDefinedLinkDefinition
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/UserDefinedLinkDefinitionPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/UserDefinedLinkDefinitionPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated user-defined link definition
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserDefinedLinkDefinition'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/UserDefinedLinkDefinitionResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedLinkDefinition'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - Administrator Resources
      summary: Delete a user-defined link definition
      description: Delete an existing user-defined link definition by passing in the ID of the user-defined link definition that you would like to delete.
      operationId: deleteUserDefinedLinkDefinition
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/{collection}/{collectionId}/userDefinedLinks:
    get:
      tags:
        - Device Resources
        - IPv4 and IPv6 Resources
        - MAC Address and Client Identifier Resources
        - Server Resources
        - View and Zone Resources
      summary: Retrieve a collection of user-defined links
      description: Retrieve a collection of all user-defined links for a linked resource.
      operationId: getCollectionUserDefinedLinks
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - name: collection
          in: path
          description: The name of the collection.
          required: true
          schema:
            type: string
            enum:
              - addresses
              - blocks
              - devices
              - ipGroups
              - macAddresses
              - macPools
              - networks
              - ranges
              - serverGroups
              - servers
              - views
              - zones
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of user-defined link
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ResourceCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Resource'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ResourceResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Resource'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Device Resources
        - IPv4 and IPv6 Resources
        - MAC Address and Client Identifier Resources
        - Server Resources
        - View and Zone Resources
      summary: Create a new user-defined link
      description: Create a new user-defined link between a source and destination resource. The resource in the path is the destination resource for the user-defined link.
      operationId: postCollectionUserDefinedLink
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: collection
          in: path
          description: The name of the collection.
          required: true
          schema:
            type: string
            enum:
              - addresses
              - blocks
              - devices
              - ipGroups
              - macAddresses
              - macPools
              - networks
              - ranges
              - serverGroups
              - servers
              - views
              - zones
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ResourcePostRequestBody'
            examples:
              userDefinedLinkExampleLinkResource:
                $ref: '#/components/examples/userDefinedLinkExampleLinkResource'
              userDefinedLinkExampleLinkResourceWithDescription:
                $ref: '#/components/examples/userDefinedLinkExampleLinkResourceWithDescription'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePostRequestBody'
            examples:
              userDefinedLinkExampleLinkResource:
                $ref: '#/components/examples/userDefinedLinkExampleLinkResource'
              userDefinedLinkExampleLinkResourceWithDescription:
                $ref: '#/components/examples/userDefinedLinkExampleLinkResourceWithDescription'
            encoding: {}
      responses:
        "201":
          description: The newly created user-defined link
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Resource'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ResourceResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/{collection}/{collectionId}/userDefinedLinks/{id}:
    get:
      tags:
        - Device Resources
        - IPv4 and IPv6 Resources
        - MAC Address and Client Identifier Resources
        - Server Resources
        - View and Zone Resources
      summary: Retrieve a single user-defined link
      description: Retrieve a single user-defined link for a linked resource.
      operationId: getCollectionUserDefinedLink
      parameters:
        - $ref: '#/components/parameters/fields'
        - name: collection
          in: path
          description: The name of the collection.
          required: true
          schema:
            type: string
            enum:
              - addresses
              - blocks
              - devices
              - ipGroups
              - macAddresses
              - macPools
              - networks
              - ranges
              - serverGroups
              - servers
              - views
              - zones
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A user-defined link
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Resource'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ResourceResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - Device Resources
        - IPv4 and IPv6 Resources
        - MAC Address and Client Identifier Resources
        - Server Resources
        - View and Zone Resources
      summary: Delete a user-defined link
      description: Delete a user-defined link for a linked resource.
      operationId: deleteCollectionUserDefinedLink
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: collection
          in: path
          description: The name of the collection.
          required: true
          schema:
            type: string
            enum:
              - addresses
              - blocks
              - devices
              - ipGroups
              - macAddresses
              - macPools
              - networks
              - ranges
              - serverGroups
              - servers
              - views
              - zones
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/users:
    get:
      tags:
        - User and Group Resources
      summary: Retrieve a collection of users
      description: Retrieve information about all Address Manager users.
      operationId: getUsers
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of users
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/UserCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/User'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/UserResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/User'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - User and Group Resources
      summary: Create a new user
      description: Create a new Address Manager user.
      operationId: postUser
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/UserPostRequestBody'
            examples:
              userExampleAddNonAdminUser:
                $ref: '#/components/examples/userExampleAddNonAdminUser'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/UserPostRequestBody'
            examples:
              userExampleAddNonAdminUser:
                $ref: '#/components/examples/userExampleAddNonAdminUser'
            encoding: {}
      responses:
        "201":
          description: The newly created user
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/User'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/UserResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/users/{id}:
    get:
      tags:
        - User and Group Resources
      summary: Retrieve a single user
      description: Retrieve information about an Address Manager user by passing in the ID of the user.
      operationId: getUser
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A user
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/User'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/UserResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - User and Group Resources
      summary: Update a user
      description: Update an Address Manager user.
      operationId: putUser
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/UserPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/UserPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated user
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/User'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/UserResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - User and Group Resources
      summary: Delete a user
      description: Delete an Address Manager user.
      operationId: deleteUser
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    patch:
      tags:
        - User and Group Resources
      summary: Partially update a user
      description: Partially update a user.
      operationId: patchUser
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              type: object
              properties:
                password:
                  minLength: 1
                  pattern: ^.*\S+.*$
                  type: string
                  description: The password of the user.
                  writeOnly: true
                  example: password
            examples:
              userExampleChangePassword:
                $ref: '#/components/examples/userExampleChangePassword'
            encoding: {}
      responses:
        "200":
          description: The updated user
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/User'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/UserResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/groups/{collectionId}/users:
    get:
      tags:
        - User and Group Resources
      summary: Retrieve a collection of linked users
      description: Retrieve information about all Address Manager users that are part of a user, LDAP, TACACS+, or SSO group.
      operationId: getGroupUsers
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of linked users
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/UserCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/User'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/UserResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/User'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - User and Group Resources
      summary: Link a user to a group
      description: Link an Address Manager users to a user, LDAP, TACACS+, or SSO group.
      operationId: postGroupUser
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/UserPostRequestBody'
            examples:
              userExampleAddUserToGroup:
                $ref: '#/components/examples/userExampleAddUserToGroup'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/UserPostRequestBody'
            examples:
              userExampleAddUserToGroup:
                $ref: '#/components/examples/userExampleAddUserToGroup'
            encoding: {}
      responses:
        "201":
          description: The linked user
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/User'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/UserResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/groups/{collectionId}/users/{id}:
    get:
      tags:
        - User and Group Resources
      summary: Retrieve a single linked user
      description: Retrieve information about an Address Manager user that is part of a user, LDAP, TACACS+, or SSO group.
      operationId: getGroupUser
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A linked user
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/User'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/UserResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - User and Group Resources
      summary: Unlink a user from a group
      description: Remove an Address Manager user from a user, LDAP, TACACS+, or SSO group.
      operationId: deleteGroupUser
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve a collection of resources
      description: Retrieve a collection of all resources matching a filter.
      operationId: getResources
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: A collection of resources
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ResourceCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Resource'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ResourceResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Resource'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/{id}:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve the root resource
      description: Retrieve information about the root resource.
      operationId: getRoot
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: The root resource
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/AddressManager'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/AddressManagerResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/AddressManager'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/vendorProfiles:
    get:
      tags:
        - DHCP Resources
      summary: Retrieve a collection of vendor profiles
      description: Retrieve a list of all configured DHCP vendor profiles.
      operationId: getVendorProfiles
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of vendor profiles
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/VendorProfileCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/VendorProfile'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/VendorProfileResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/VendorProfile'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - DHCP Resources
      summary: Create a new vendor profile
      description: Create a new DHCP vendor profile. Vendor profiles are sets of DHCP options required by particular devices. For example, a VoIP phone might need a very specific set of DHCP options.
      operationId: postVendorProfile
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/VendorProfilePostRequestBody'
            examples:
              vendorProfileExampleRequiredFields:
                $ref: '#/components/examples/vendorProfileExampleRequiredFields'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/VendorProfilePostRequestBody'
            examples:
              vendorProfileExampleRequiredFields:
                $ref: '#/components/examples/vendorProfileExampleRequiredFields'
            encoding: {}
      responses:
        "201":
          description: The newly created vendor profile
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/VendorProfile'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/VendorProfileResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/VendorProfile'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/vendorProfiles/{id}:
    get:
      tags:
        - DHCP Resources
      summary: Retrieve a single vendor profile
      description: Retrieve information about a DHCP vendor profile.
      operationId: getVendorProfile
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A vendor profile
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/VendorProfile'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/VendorProfileResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/VendorProfile'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - DHCP Resources
      summary: Update a vendor profile
      description: Update an existing DHCP vendor profile.
      operationId: putVendorProfile
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/VendorProfilePutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/VendorProfilePutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated vendor profile
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/VendorProfile'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/VendorProfileResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/VendorProfile'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - DHCP Resources
      summary: Delete a vendor profile
      description: Delete a DHCP vendor profile.
      operationId: deleteVendorProfile
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/views:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a collection of views
      description: Retrieve information about all DNS views.
      operationId: getViews
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of views
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ViewCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/View'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ViewResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/View'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/views/{id}:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a single view
      description: Retrieve information about a DNS view.
      operationId: getView
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A view
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/View'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ViewResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/View'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - View and Zone Resources
      summary: Update a view
      description: Update an existing DNS view.
      operationId: putView
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ViewPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ViewPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated view
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/View'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ViewResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/View'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - View and Zone Resources
      summary: Delete a view
      description: Delete an existing DNS view.
      operationId: deleteView
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/configurations/{collectionId}/views:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a collection of views
      description: Retrieve information about all DNS views within a configuration.
      operationId: getConfigurationViews
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of views
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ViewCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/View'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ViewResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/View'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - View and Zone Resources
      summary: Create a new view
      description: Create a new DNS view within a configuration. In Address Manager, a DNS view is the container object for DNS zones and resource records. You must create a view before you can create any DNS zones or resource records.
      operationId: postConfigurationView
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ViewPostRequestBody'
            examples:
              viewExampleRequiredFields:
                $ref: '#/components/examples/viewExampleRequiredFields'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ViewPostRequestBody'
            examples:
              viewExampleRequiredFields:
                $ref: '#/components/examples/viewExampleRequiredFields'
            encoding: {}
      responses:
        "201":
          description: The newly created view
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/View'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ViewResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/View'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/workflowRequests:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve a collection of workflow requests
      description: Retrieve a collection of all workflow requests for all configurations.
      operationId: getWorkflowRequests
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: A collection of workflow requests
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/WorkflowRequestCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/WorkflowRequest'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/WorkflowRequestResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/WorkflowRequest'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/workflowRequests/{id}:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve a single workflow request
      description: Retrieve a single workflow request.
      operationId: getWorkflowRequest
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A workflow request
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/WorkflowRequest'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/WorkflowRequestResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowRequest'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - Administrator Resources
      summary: Delete a workflow request
      description: Delete a workflow request.
      operationId: deleteWorkflowRequest
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    patch:
      tags:
        - Administrator Resources
      summary: Partially update a workflow request
      description: Process a workflow request. A workflow request can be approved or denied by changing the resource state value.
      operationId: patchWorkflowRequest
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-allow-address-overlap
          in: header
          description: Indicates whether IP address overlap detection will be overridden for IPv4 blocks/networks created or modified by the workflow request.
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: The approval state of the workflow request. The state will be PENDING if the workflow request has not yet been processed by an authorized user.
                  enum:
                    - APPROVED
                    - DENIED
            examples:
              workflowRequestExampleApproveWorkflowRequest:
                $ref: '#/components/examples/workflowRequestExampleApproveWorkflowRequest'
              workflowRequestExampleDenyWorkflowRequest:
                $ref: '#/components/examples/workflowRequestExampleDenyWorkflowRequest'
            encoding: {}
      responses:
        "200":
          description: The updated workflow request
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/WorkflowRequest'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/WorkflowRequestResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowRequest'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/{collection}/{collectionId}/workflowRequests:
    get:
      tags:
        - Administrator Resources
      summary: Retrieve a collection of workflow requests
      description: Retrieve a collection of all workflow requests for a resource.
      operationId: getCollectionWorkflowRequests
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - name: collection
          in: path
          description: The name of the collection.
          required: true
          schema:
            type: string
            enum:
              - addresses
              - blocks
              - configurations
              - networks
              - resourceRecords
              - views
              - zones
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of workflow requests
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/WorkflowRequestCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/WorkflowRequest'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/WorkflowRequestResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/WorkflowRequest'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/zoneDeclarations:
    get:
      tags:
        - DHCP Resources
      summary: Retrieve a collection of zone declarations
      description: Retrieve information about all DHCP forward and reverse zone declarations.
      operationId: getZoneDeclarations
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of zone declarations
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPForwardZoneCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPForwardZone'
                            - $ref: '#/components/schemas/DHCPReverseZone'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPForwardZoneResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPForwardZone'
                        - $ref: '#/components/schemas/DHCPReverseZone'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/zoneDeclarations/{id}:
    get:
      tags:
        - DHCP Resources
      summary: Retrieve a single zone declaration
      description: Retrieve information about a DHCP forward or reverse zone declaration.
      operationId: getZoneDeclaration
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A zone declaration
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPForwardZone'
                      - $ref: '#/components/schemas/DHCPReverseZone'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPForwardZoneResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPForwardZone'
                  - $ref: '#/components/schemas/DHCPReverseZone'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - DHCP Resources
      summary: Update a zone declaration
      description: Update an existing DHCP forward or reverse zone declaration.
      operationId: putZoneDeclaration
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPForwardZone: '#/components/schemas/DHCPForwardZonePutRequestBody'
                  DHCPReverseZone: '#/components/schemas/DHCPReverseZonePutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPForwardZonePutRequestBody'
                - $ref: '#/components/schemas/DHCPReverseZonePutRequestBody'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPForwardZone: '#/components/schemas/DHCPForwardZonePutRequestBody'
                  DHCPReverseZone: '#/components/schemas/DHCPReverseZonePutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPForwardZonePutRequestBody'
                - $ref: '#/components/schemas/DHCPReverseZonePutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated zone declaration
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPForwardZone'
                      - $ref: '#/components/schemas/DHCPReverseZone'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPForwardZoneResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPForwardZone'
                  - $ref: '#/components/schemas/DHCPReverseZone'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - DHCP Resources
      summary: Delete a zone declaration
      description: Delete an existing DHCP forward or reverse zone declaration.
      operationId: deleteZoneDeclaration
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/zoneGroups/{collectionId}/zoneDeclarations:
    get:
      tags:
        - DHCP Resources
      summary: Retrieve a collection of zone declarations
      description: Retrieve information about all DHCP forward and reverse zone declarations of a DHCP zone group.
      operationId: getZoneGroupZoneDeclarations
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of zone declarations
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPForwardZoneCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/DHCPForwardZone'
                            - $ref: '#/components/schemas/DHCPReverseZone'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPForwardZoneResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DHCPForwardZone'
                        - $ref: '#/components/schemas/DHCPReverseZone'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - DHCP Resources
      summary: Create a new zone declaration
      description: Create a new DHCP forward or reverse zone declaration within a DHCP zone group.
      operationId: postZoneGroupZoneDeclaration
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPForwardZone: '#/components/schemas/DHCPForwardZonePostRequestBody'
                  DHCPReverseZone: '#/components/schemas/DHCPReverseZonePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPForwardZonePostRequestBody'
                - $ref: '#/components/schemas/DHCPReverseZonePostRequestBody'
            examples:
              zoneDeclarationExampleForwardZoneDeclarationWithManagedZone:
                $ref: '#/components/examples/zoneDeclarationExampleForwardZoneDeclarationWithManagedZone'
              zoneDeclarationExampleForwardZoneDeclarationWithUnmanagedZone:
                $ref: '#/components/examples/zoneDeclarationExampleForwardZoneDeclarationWithUnmanagedZone'
              zoneDeclarationExampleReverseZoneDeclarationWithManagedNetwork:
                $ref: '#/components/examples/zoneDeclarationExampleReverseZoneDeclarationWithManagedNetwork'
              zoneDeclarationExampleReverseZoneDeclarationWithUnmanagedNetwork:
                $ref: '#/components/examples/zoneDeclarationExampleReverseZoneDeclarationWithUnmanagedNetwork'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  DHCPForwardZone: '#/components/schemas/DHCPForwardZonePostRequestBody'
                  DHCPReverseZone: '#/components/schemas/DHCPReverseZonePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/DHCPForwardZonePostRequestBody'
                - $ref: '#/components/schemas/DHCPReverseZonePostRequestBody'
            examples:
              zoneDeclarationExampleForwardZoneDeclarationWithManagedZone:
                $ref: '#/components/examples/zoneDeclarationExampleForwardZoneDeclarationWithManagedZone'
              zoneDeclarationExampleForwardZoneDeclarationWithUnmanagedZone:
                $ref: '#/components/examples/zoneDeclarationExampleForwardZoneDeclarationWithUnmanagedZone'
              zoneDeclarationExampleReverseZoneDeclarationWithManagedNetwork:
                $ref: '#/components/examples/zoneDeclarationExampleReverseZoneDeclarationWithManagedNetwork'
              zoneDeclarationExampleReverseZoneDeclarationWithUnmanagedNetwork:
                $ref: '#/components/examples/zoneDeclarationExampleReverseZoneDeclarationWithUnmanagedNetwork'
            encoding: {}
      responses:
        "201":
          description: The newly created zone declaration
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/DHCPForwardZone'
                      - $ref: '#/components/schemas/DHCPReverseZone'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPForwardZoneResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DHCPForwardZone'
                  - $ref: '#/components/schemas/DHCPReverseZone'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/zoneGroups:
    get:
      tags:
        - DHCP Resources
      summary: Retrieve a collection of zone groups
      description: Retrieve information about all DHCP zone groups.
      operationId: getZoneGroups
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of zone groups
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPZoneGroupCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/DHCPZoneGroup'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPZoneGroupResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/DHCPZoneGroup'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/zoneGroups/{id}:
    get:
      tags:
        - DHCP Resources
      summary: Retrieve a single zone group
      description: Retrieve information about a DHCP zone group.
      operationId: getZoneGroup
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A zone group
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DHCPZoneGroup'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPZoneGroupResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DHCPZoneGroup'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - DHCP Resources
      summary: Update a zone group
      description: Update an existing DHCP zone group.
      operationId: putZoneGroup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DHCPZoneGroupPutRequestBody'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/DHCPZoneGroupPutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated zone group
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DHCPZoneGroup'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPZoneGroupResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DHCPZoneGroup'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - DHCP Resources
      summary: Delete a zone group
      description: Delete an existing DHCP zone group.
      operationId: deleteZoneGroup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/configurations/{collectionId}/zoneGroups:
    get:
      tags:
        - DHCP Resources
      summary: Retrieve a collection of zone groups
      description: Retrieve information about all DHCP zone groups within a configuration.
      operationId: getConfigurationZoneGroups
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of zone groups
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/DHCPZoneGroupCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/DHCPZoneGroup'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/DHCPZoneGroupResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/DHCPZoneGroup'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - DHCP Resources
      summary: Create a new zone group
      description: Create a new DHCP zone group within a configuration. DHCP zone groups are container objects for DHCP zone declarations. You use forward and reverse DHCP zone declarations to configure TSIG or GSS-TSIG signing of Dynamic DNS updates.
      operationId: postConfigurationZoneGroup
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DHCPZoneGroupPostRequestBody'
            examples:
              zoneGroupExampleAddZoneGroup:
                $ref: '#/components/examples/zoneGroupExampleAddZoneGroup'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/DHCPZoneGroupPostRequestBody'
            examples:
              zoneGroupExampleAddZoneGroup:
                $ref: '#/components/examples/zoneGroupExampleAddZoneGroup'
            encoding: {}
      responses:
        "201":
          description: The newly created zone group
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DHCPZoneGroup'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/DHCPZoneGroupResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/DHCPZoneGroup'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/zones:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a collection of zones
      description: Retrieve information about all DNS zones.
      operationId: getZones
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
      responses:
        "200":
          description: The root collection of zones
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ENUMNumberZoneCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/ENUMNumberZone'
                            - $ref: '#/components/schemas/ENUMZone'
                            - $ref: '#/components/schemas/ExternalHostsZone'
                            - $ref: '#/components/schemas/InternalRootZone'
                            - $ref: '#/components/schemas/ResponsePolicyZone'
                            - $ref: '#/components/schemas/Zone'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ENUMNumberZoneResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/ENUMNumberZone'
                        - $ref: '#/components/schemas/ENUMZone'
                        - $ref: '#/components/schemas/ExternalHostsZone'
                        - $ref: '#/components/schemas/InternalRootZone'
                        - $ref: '#/components/schemas/ResponsePolicyZone'
                        - $ref: '#/components/schemas/Zone'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/zones/{id}:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a single zone
      description: Retrieve information about a DNS zone.
      operationId: getZone
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: A zone
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/ENUMNumberZone'
                      - $ref: '#/components/schemas/ENUMZone'
                      - $ref: '#/components/schemas/ExternalHostsZone'
                      - $ref: '#/components/schemas/InternalRootZone'
                      - $ref: '#/components/schemas/ResponsePolicyZone'
                      - $ref: '#/components/schemas/Zone'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ENUMNumberZoneResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ENUMNumberZone'
                  - $ref: '#/components/schemas/ENUMZone'
                  - $ref: '#/components/schemas/ExternalHostsZone'
                  - $ref: '#/components/schemas/InternalRootZone'
                  - $ref: '#/components/schemas/ResponsePolicyZone'
                  - $ref: '#/components/schemas/Zone'
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    put:
      tags:
        - View and Zone Resources
      summary: Update a zone
      description: Update an existing DNS zone.
      operationId: putZone
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-allow-multi-label-zone-names
          in: header
          description: Indicates whether a dotted zone name will be allowed when specifying a zone name using the name field. Also indicates whether a dotted zone name will be used when specifying an absolute name using the absoluteName field, instead of creating non-existent subzones.
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  ENUMNumberZone: '#/components/schemas/ENUMNumberZonePutRequestBody'
                  ENUMZone: '#/components/schemas/ENUMZonePutRequestBody'
                  InternalRootZone: '#/components/schemas/InternalRootZonePutRequestBody'
                  ResponsePolicyZone: '#/components/schemas/ResponsePolicyZonePutRequestBody'
                  Zone: '#/components/schemas/ZonePutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/ENUMNumberZonePutRequestBody'
                - $ref: '#/components/schemas/ENUMZonePutRequestBody'
                - $ref: '#/components/schemas/InternalRootZonePutRequestBody'
                - $ref: '#/components/schemas/ResponsePolicyZonePutRequestBody'
                - $ref: '#/components/schemas/ZonePutRequestBody'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  ENUMNumberZone: '#/components/schemas/ENUMNumberZonePutRequestBody'
                  ENUMZone: '#/components/schemas/ENUMZonePutRequestBody'
                  InternalRootZone: '#/components/schemas/InternalRootZonePutRequestBody'
                  ResponsePolicyZone: '#/components/schemas/ResponsePolicyZonePutRequestBody'
                  Zone: '#/components/schemas/ZonePutRequestBody'
              oneOf:
                - $ref: '#/components/schemas/ENUMNumberZonePutRequestBody'
                - $ref: '#/components/schemas/ENUMZonePutRequestBody'
                - $ref: '#/components/schemas/InternalRootZonePutRequestBody'
                - $ref: '#/components/schemas/ResponsePolicyZonePutRequestBody'
                - $ref: '#/components/schemas/ZonePutRequestBody'
            encoding: {}
      responses:
        "200":
          description: The updated zone
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/ENUMNumberZone'
                      - $ref: '#/components/schemas/ENUMZone'
                      - $ref: '#/components/schemas/InternalRootZone'
                      - $ref: '#/components/schemas/ResponsePolicyZone'
                      - $ref: '#/components/schemas/Zone'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ENUMNumberZoneResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ENUMNumberZone'
                  - $ref: '#/components/schemas/ENUMZone'
                  - $ref: '#/components/schemas/InternalRootZone'
                  - $ref: '#/components/schemas/ResponsePolicyZone'
                  - $ref: '#/components/schemas/Zone'
        "202":
          description: The workflow request for the pending zone update
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/ENUMNumberZone'
                      - $ref: '#/components/schemas/ENUMZone'
                      - $ref: '#/components/schemas/InternalRootZone'
                      - $ref: '#/components/schemas/ResponsePolicyZone'
                      - $ref: '#/components/schemas/Zone'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ENUMNumberZoneResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ENUMNumberZone'
                  - $ref: '#/components/schemas/ENUMZone'
                  - $ref: '#/components/schemas/InternalRootZone'
                  - $ref: '#/components/schemas/ResponsePolicyZone'
                  - $ref: '#/components/schemas/Zone'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
    delete:
      tags:
        - View and Zone Resources
      summary: Delete a zone
      description: Delete an existing DNS zone.
      operationId: deleteZone
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - $ref: '#/components/parameters/id'
      responses:
        "202":
          description: The workflow request for the zone deletion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowRequest'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WorkflowRequest'
        "204":
          description: None
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/responsePolicies/{collectionId}/zones:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a collection of zones
      description: Retrieve information about all linked response policy zones of a response policy.
      operationId: getResponsePolicyZones
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of zones
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ResponsePolicyZoneCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ResponsePolicyZone'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ResponsePolicyZoneResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/ResponsePolicyZone'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /api/v2/views/{collectionId}/zones:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a collection of zones
      description: Retrieve information about all top-level DNS, ENUM, external hosts, internal root and response policy zones within a view.
      operationId: getViewZones
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of zones
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ENUMZoneCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/ENUMZone'
                            - $ref: '#/components/schemas/ExternalHostsZone'
                            - $ref: '#/components/schemas/InternalRootZone'
                            - $ref: '#/components/schemas/ResponsePolicyZone'
                            - $ref: '#/components/schemas/Zone'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ENUMZoneResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/ENUMZone'
                        - $ref: '#/components/schemas/ExternalHostsZone'
                        - $ref: '#/components/schemas/InternalRootZone'
                        - $ref: '#/components/schemas/ResponsePolicyZone'
                        - $ref: '#/components/schemas/Zone'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - View and Zone Resources
      summary: Create a new zone
      description: Create a new DNS, ENUM, response policy or internal root zone within a view.
      operationId: postViewZone
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-allow-multi-label-zone-names
          in: header
          description: Indicates whether a dotted zone name will be allowed when specifying a zone name using the name field. Also indicates whether a dotted zone name will be used when specifying an absolute name using the absoluteName field, instead of creating non-existent subzones.
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  ENUMZone: '#/components/schemas/ENUMZonePostRequestBody'
                  InternalRootZone: '#/components/schemas/InternalRootZonePostRequestBody'
                  ResponsePolicyZone: '#/components/schemas/ResponsePolicyZonePostRequestBody'
                  Zone: '#/components/schemas/ZonePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/ENUMZonePostRequestBody'
                - $ref: '#/components/schemas/InternalRootZonePostRequestBody'
                - $ref: '#/components/schemas/ResponsePolicyZonePostRequestBody'
                - $ref: '#/components/schemas/ZonePostRequestBody'
            examples:
              zoneExampleAddZoneToView:
                $ref: '#/components/examples/zoneExampleAddZoneToView'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  ENUMZone: '#/components/schemas/ENUMZonePostRequestBody'
                  InternalRootZone: '#/components/schemas/InternalRootZonePostRequestBody'
                  ResponsePolicyZone: '#/components/schemas/ResponsePolicyZonePostRequestBody'
                  Zone: '#/components/schemas/ZonePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/ENUMZonePostRequestBody'
                - $ref: '#/components/schemas/InternalRootZonePostRequestBody'
                - $ref: '#/components/schemas/ResponsePolicyZonePostRequestBody'
                - $ref: '#/components/schemas/ZonePostRequestBody'
            examples:
              zoneExampleAddZoneToView:
                $ref: '#/components/examples/zoneExampleAddZoneToView'
            encoding: {}
      responses:
        "201":
          description: The newly created zone
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/ENUMZone'
                      - $ref: '#/components/schemas/InternalRootZone'
                      - $ref: '#/components/schemas/ResponsePolicyZone'
                      - $ref: '#/components/schemas/Zone'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ENUMZoneResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ENUMZone'
                  - $ref: '#/components/schemas/InternalRootZone'
                  - $ref: '#/components/schemas/ResponsePolicyZone'
                  - $ref: '#/components/schemas/Zone'
        "202":
          description: The workflow request for the pending zone
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/ENUMZone'
                      - $ref: '#/components/schemas/InternalRootZone'
                      - $ref: '#/components/schemas/ResponsePolicyZone'
                      - $ref: '#/components/schemas/Zone'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ENUMZoneResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ENUMZone'
                  - $ref: '#/components/schemas/InternalRootZone'
                  - $ref: '#/components/schemas/ResponsePolicyZone'
                  - $ref: '#/components/schemas/Zone'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/workflowRequests/{collectionId}/zones:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a collection of dependent zone workflow requests
      description: Retrieve information about all sub zone workflow requests under a parent zone that is pending workflow request approval.
      operationId: getWorkflowRequestZones
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of dependent zone workflow requests
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ZoneCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Zone'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ZoneResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      $ref: '#/components/schemas/Zone'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - View and Zone Resources
      summary: Create a new dependent zone workflow request
      description: Create a new sub zone workflow request under a parent zone that is pending workflow request approval.
      operationId: postWorkflowRequestZone
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-allow-multi-label-zone-names
          in: header
          description: Indicates whether a dotted zone name will be allowed when specifying a zone name using the name field. Also indicates whether a dotted zone name will be used when specifying an absolute name using the absoluteName field, instead of creating non-existent subzones.
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ZonePostRequestBody'
            examples:
              zoneExampleAddZoneToPendingZone:
                $ref: '#/components/examples/zoneExampleAddZoneToPendingZone'
            encoding: {}
          application/json:
            schema:
              $ref: '#/components/schemas/ZonePostRequestBody'
            examples:
              zoneExampleAddZoneToPendingZone:
                $ref: '#/components/examples/zoneExampleAddZoneToPendingZone'
            encoding: {}
      responses:
        "202":
          description: The workflow request for the pending zone
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Zone'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ZoneResourceLinks'
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  /api/v2/zones/{collectionId}/zones:
    get:
      tags:
        - View and Zone Resources
      summary: Retrieve a collection of zones
      description: Retrieve information about all sub zones within a zone.
      operationId: getZoneZones
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/total'
        - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          description: A collection of zones
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    $ref: '#/components/schemas/ENUMNumberZoneCollectionHalLinks'
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      allOf:
                        - oneOf:
                            - $ref: '#/components/schemas/ENUMNumberZone'
                            - $ref: '#/components/schemas/ENUMZone'
                            - $ref: '#/components/schemas/Zone'
                        - type: object
                          properties:
                            _links:
                              $ref: '#/components/schemas/ENUMNumberZoneResourceLinks'
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/CollectionCount'
                  totalCount:
                    $ref: '#/components/schemas/CollectionTotalCount'
                  data:
                    type: array
                    nullable: false
                    readOnly: true
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/ENUMNumberZone'
                        - $ref: '#/components/schemas/ENUMZone'
                        - $ref: '#/components/schemas/Zone'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - View and Zone Resources
      summary: Create a new zone
      description: Create a new DNS, ENUM or ENUM number sub zone within a zone.
      operationId: postZoneZone
      parameters:
        - $ref: '#/components/parameters/x-bcn-change-control-comment'
        - name: x-bcn-allow-multi-label-zone-names
          in: header
          description: Indicates whether a dotted zone name will be allowed when specifying a zone name using the name field. Also indicates whether a dotted zone name will be used when specifying an absolute name using the absoluteName field, instead of creating non-existent subzones.
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/hal+json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  ENUMNumberZone: '#/components/schemas/ENUMNumberZonePostRequestBody'
                  ENUMZone: '#/components/schemas/ENUMZonePostRequestBody'
                  Zone: '#/components/schemas/ZonePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/ENUMNumberZonePostRequestBody'
                - $ref: '#/components/schemas/ENUMZonePostRequestBody'
                - $ref: '#/components/schemas/ZonePostRequestBody'
            examples:
              zoneExampleAddZoneToZone:
                $ref: '#/components/examples/zoneExampleAddZoneToZone'
            encoding: {}
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  ENUMNumberZone: '#/components/schemas/ENUMNumberZonePostRequestBody'
                  ENUMZone: '#/components/schemas/ENUMZonePostRequestBody'
                  Zone: '#/components/schemas/ZonePostRequestBody'
              oneOf:
                - $ref: '#/components/schemas/ENUMNumberZonePostRequestBody'
                - $ref: '#/components/schemas/ENUMZonePostRequestBody'
                - $ref: '#/components/schemas/ZonePostRequestBody'
            examples:
              zoneExampleAddZoneToZone:
                $ref: '#/components/examples/zoneExampleAddZoneToZone'
            encoding: {}
      responses:
        "201":
          description: The newly created zone
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/ENUMNumberZone'
                      - $ref: '#/components/schemas/ENUMZone'
                      - $ref: '#/components/schemas/Zone'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ENUMNumberZoneResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ENUMNumberZone'
                  - $ref: '#/components/schemas/ENUMZone'
                  - $ref: '#/components/schemas/Zone'
        "202":
          description: The workflow request for the pending zone
          content:
            application/hal+json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: '#/components/schemas/ENUMNumberZone'
                      - $ref: '#/components/schemas/ENUMZone'
                      - $ref: '#/components/schemas/Zone'
                  - type: object
                    properties:
                      _links:
                        $ref: '#/components/schemas/ENUMNumberZoneResourceLinks'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ENUMNumberZone'
                  - $ref: '#/components/schemas/ENUMZone'
                  - $ref: '#/components/schemas/Zone'
        "400":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        "401":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        "403":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        "404":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "409":
          description: The error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
components:
  schemas:
    ACL:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ACL
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        predefined:
          type: boolean
          description: Indicates whether the access control list is predefined by the system (true) or user-created (false).
          readOnly: true
        matchElements:
          minItems: 1
          type: array
          description: The elements in the ACL match statement that indicate which hosts will be allowed or denied access.
          nullable: false
          items:
            type: string
            description: The elements in the ACL match statement that indicate which hosts will be allowed or denied access.
    Configuration:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - Configuration
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configurationGroup:
          type: string
          description: The configuration group that the configuration is part of.
          example: Test Configuration Group
        description:
          type: string
          description: The description of the configuration.
          example: Main configuration
        snmp:
          $ref: '#/components/schemas/SNMP'
        serverMonitoringEnabled:
          type: boolean
          description: Indicates whether monitoring service is enabled for the configuration.
          nullable: false
        dhcpConfigurationValidationEnabled:
          type: boolean
          description: Indicates whether the syntax of the dhcpd.conf file is validated before data is deployed from Address Manager.
          nullable: false
        dnsConfigurationValidationEnabled:
          type: boolean
          description: Indicates whether the syntax of the named.conf file is validated before data is deployed from Address Manager.
          nullable: false
        dnsZoneValidationEnabled:
          type: boolean
          description: Indicates whether the syntax of each DNS zone file is validated before data is deployed from Address Manager.
          nullable: false
        checkIntegrityValidation:
          type: string
          description: Indicates the type of DNS zone validation check performed on the configuration.
          nullable: false
          enum:
            - NONE
            - LOCAL
            - LOCAL_SIBLING
            - FULL
            - FULL_SIBLING
        checkMxCnameValidation:
          type: string
          description: This option checks that MX records point to a CNAME record rather than an A or AAAA record. This is equivalent to setting the -M switch for the named-checkzone tool.
          nullable: false
          enum:
            - IGNORE
            - WARN
            - FAIL
        checkMxValidation:
          type: string
          description: This option checks that MX records point to an IP address rather than an A or AAAA record. This is equivalent to setting the -m switch for the named-checkzone tool.
          nullable: false
          enum:
            - IGNORE
            - WARN
            - FAIL
        checkNamesValidation:
          type: string
          description: This option checks that A, AAAA, and MX record names are legal hostnames. It also checks that domain names in the RDATA of NS, SOA, and MX records are legal. This is equivalent to setting the -k switch for the named-checkzone tool.
          nullable: false
          enum:
            - IGNORE
            - WARN
            - FAIL
        checkNsValidation:
          type: string
          description: This option checks that NS records point to an IP address rather than an A or AAAA record. This is equivalent to setting the -n switch for the named-checkzone tool.
          nullable: false
          enum:
            - IGNORE
            - WARN
            - FAIL
        checkSrvCnameValidation:
          type: string
          description: This option checks that SRV records point to a CNAME record rather than A or AAAA record. This is equivalent to setting the -S switch for the named-checkzone tool.
          nullable: false
          enum:
            - IGNORE
            - WARN
            - FAIL
        checkWildcardValidation:
          type: string
          description: 'This option checks for wildcards in zone names that don''t appear as the left-most segment of a zone name: for example, mail.*.example.com. Non-terminal wildcards are permissible, but you may want to be alerted to their presence. This is equivalent to setting the -W switch for the named-checkzone tool.'
          nullable: false
          enum:
            - IGNORE
            - WARN
        dnsOptionInheritanceEnabled:
          type: boolean
          description: Controls whether DNS options are inherited by child zones within a configuration. When DNS option inheritance is disabled, DNS options that have been configured on a zone aren't inherited by the child zone. In the reverse space, DNS options that have been configured on a block aren't inherited by the child block or network when DNS option inheritance is disabled.
          nullable: false
        dnsFeedEnabled:
          type: boolean
          description: Defines whether the BlueCat Security Feed is enabled.
          nullable: false
        dnsFeedLicense:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The BlueCat Security Feed license.
          example: License Feed information
        sharedNetworkTagGroup:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedTagGroup'
        keyAutoRegenerationEnabled:
          type: boolean
          description: Indicates whether Address Manager will regenerate ZSKs and KSKs. When a zone is signed with a DNSSEC signing policy, Address Manager enables this option automatically.
          nullable: false
      description: The configuration the resource belongs to.
    InlinedConfiguration:
      title: Configuration
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - Configuration
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
    InlinedTagGroup:
      title: TagGroup
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - TagGroup
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the tag group.
          nullable: false
          example: EMEA Tag Group
    List:
      type: array
      description: The list of IPv4 blocks and networks of which resources within this zone are restricted to.
      items:
        $ref: '#/components/schemas/Prefix'
    Map:
      type: object
      additionalProperties:
        type: integer
        description: Values indicating the current amount of static, DHCP allocated, DHCP abandoned, DHCP reserved, reserved, gateway, and unassigned IP addresses within the network.
        format: int64
      description: Values indicating the current amount of static, DHCP allocated, DHCP abandoned, DHCP reserved, reserved, gateway, and unassigned IP addresses within the network.
    SNMP:
      type: object
      properties:
        version:
          type: string
          description: The SNMP version for the router or switch.
          nullable: false
          enum:
            - v1
            - v2c
            - v3
        enabled:
          type: boolean
          description: Indicates whether SNMP service is enabled.
        port:
          maximum: 65535
          minimum: 1
          type: integer
          description: The SNMP port that is used to communicate with the router or switch.
          format: int32
          example: 161
      description: Defines the SNMP settings of the configuration.
      discriminator:
        propertyName: version
    Snmpv1Bean:
      type: object
      allOf:
        - $ref: '#/components/schemas/SNMP'
        - type: object
          properties:
            version:
              type: string
              description: The SNMP protocol version.
              nullable: false
              enum:
                - v1
                - v2c
                - v3
            communities:
              minItems: 1
              type: array
              items:
                type: string
                description: The SNMP community string name. This string is used to authenticate the polling request.
                example: SNMP Community String
    Snmpv2cBean:
      type: object
      allOf:
        - $ref: '#/components/schemas/SNMP'
        - type: object
          properties:
            version:
              type: string
              description: The SNMP protocol version.
              nullable: false
              enum:
                - v1
                - v2c
                - v3
            communities:
              minItems: 1
              type: array
              items:
                type: string
                description: The SNMP community string name. This string is used to authenticate the polling request.
                example: SNMP Community String
    Snmpv3Bean:
      type: object
      allOf:
        - $ref: '#/components/schemas/SNMP'
        - type: object
          properties:
            version:
              type: string
              description: The SNMP protocol version.
              nullable: false
              enum:
                - v1
                - v2c
                - v3
            securityLevel:
              type: string
              description: The SNMP security level.
              enum:
                - NOAUTH_NOPRIV
                - AUTH_NOPRIV
                - AUTH_PRIV
            usernames:
              type: array
              items:
                type: string
                description: The SNMP username.
                example: adminUser
            context:
              type: string
              description: The SNMPv3 context that includes information accessible by the SNMP agent.
            authenticationProtocol:
              type: string
              description: The authentication protocol to use with SNMP version 3.
              enum:
                - MD5
                - SHA
            authenticationPassphrase:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The user authentication password of the SNMP user.
              example: UserPassword
            privacyProtocol:
              type: string
              description: The user authentication protocol used to encrypt the SNMP messages.
              enum:
                - DES
                - AES128
            privacyPassphrase:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The privacy authentication password used to encrypt the SNMP data.
              example: EncryptedPassphrase
    TagGroup:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - TagGroup
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the tag group.
          nullable: false
          example: EMEA Tag Group
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
      description: The Shared Network Tag Group assigned to the configuration.
    AccessRight:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          readOnly: true
          enum:
            - AccessRight
        userScope:
          required:
            - id
          nullable: false
          allOf:
            - $ref: '#/components/schemas/InlinedUserScope'
        defaultAccessLevel:
          type: string
          description: The default access right assigned to the user or group.
          nullable: false
          enum:
            - HIDE
            - VIEW
            - CHANGE
            - ADD
            - FULL
        resource:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedResource'
        deploymentsAllowed:
          type: boolean
          description: Indicates whether or not the user or group can perform a full deployment of data from the configuration to a managed server.
          nullable: false
        quickDeploymentsAllowed:
          type: boolean
          description: Indicates whether or not the user or group can instantly deploy changed DNS resource records.
          nullable: false
        selectiveDeploymentsAllowed:
          type: boolean
          description: Indicates whether a user or group can perform a selection deployment of data to a managed server, and dynamically deploy resource records that are added, updated, and deleted within a DNS zone that has the Dynamic Update feature enabled.
          nullable: false
        workflowLevel:
          type: string
          description: The workflow level assigned to the user.
          nullable: false
          enum:
            - NONE
            - RECOMMEND
            - APPROVE
        accessOverrides:
          type: array
          description: A list of overridden access rights.
          nullable: false
          items:
            $ref: '#/components/schemas/AccessRightOverrideBean'
    AccessRightOverrideBean:
      type: object
      properties:
        resourceType:
          type: string
          description: The resource type of the overridden access right.
          nullable: false
          enum:
            - ACL
            - AddressManagerAuthenticator
            - AliasRecord
            - Configuration
            - DHCPClientIdentifier
            - DHCPDeploymentRole
            - DHCPForwardZone
            - DHCPReverseZone
            - DHCPUniqueIdentifier
            - DHCPVendorOption
            - DHCPVendorOptionDefinition
            - DHCPZoneGroup
            - DHCPv4ClientClass
            - DHCPv4ClientOption
            - DHCPv4ClientOptionDefinition
            - DHCPv4CustomClientOptionDefinition
            - DHCPv4RawOption
            - DHCPv4ServiceOption
            - DHCPv4ServiceOptionDefinition
            - DHCPv4Subclass
            - DHCPv6ClientOption
            - DHCPv6ClientOptionDefinition
            - DHCPv6RawOption
            - DHCPv6ServiceOption
            - DHCPv6ServiceOptionDefinition
            - DNS64
            - DNSDeploymentRole
            - DNSOption
            - DNSOptionDefinition
            - DNSRawOption
            - DNSSECSigningPolicy
            - DenyMACPool
            - DeploymentSchedule
            - Device
            - DeviceSubtype
            - DeviceType
            - ENUMNumberZone
            - ENUMZone
            - EntrustKeySigningKey
            - EntrustZoneSigningKey
            - ExternalHostRecord
            - ExternalHostsZone
            - GenericRecord
            - HAServer
            - HINFORecord
            - HSMConfiguration
            - HSMServer
            - HTTPSRecord
            - HostRecord
            - IPv4Address
            - IPv4Block
            - IPv4DHCPRange
            - IPv4DHCPRangeTemplateItem
            - IPv4GatewayTemplateItem
            - IPv4Group
            - IPv4GroupTemplateItem
            - IPv4Network
            - IPv4ReconciliationPolicy
            - IPv4ReservedRangeTemplateItem
            - IPv4Template
            - IPv6Address
            - IPv6Block
            - IPv6DHCPRange
            - IPv6Network
            - IPv6ReconciliationPolicy
            - IPv6Template
            - InternalRootZone
            - KerberosAuthenticator
            - KerberosRealm
            - KerberosServicePrincipal
            - KeyDistributionCenter
            - KeySigningKey
            - LDAPAuthenticator
            - Location
            - MACAddress
            - MACPool
            - MXRecord
            - NAPTRRecord
            - NamingPolicy
            - NamingPolicyConnectorValue
            - NamingPolicyIncrementalValue
            - NamingPolicyIntegerValue
            - NamingPolicyRequiredValue
            - NamingPolicyRestriction
            - NamingPolicyTextValue
            - NetworkInterface
            - NotificationGroup
            - OAuthAuthorizationServer
            - PublishedInterface
            - RADIUSAuthenticator
            - Report
            - ReportSchedule
            - ResponsePolicy
            - ResponsePolicyZone
            - SAMLIdentityProvider
            - SRVRecord
            - SVCBRecord
            - Server
            - ServerGroup
            - ServerGroupInterface
            - ServerInterface
            - ServiceOption
            - SigningKey
            - StartOfAuthority
            - StartOfAuthorityDefinition
            - TACACSPlusAuthenticator
            - TFTPDeploymentRole
            - TFTPFile
            - TFTPFolder
            - TFTPGroup
            - TSIGKey
            - TXTRecord
            - Tag
            - TagGroup
            - Task
            - URIRecord
            - User
            - UserGroup
            - VendorProfile
            - View
            - VirtualInterface
            - X509Authenticator
            - Zone
            - ZoneSigningKey
            - ZoneTemplate
        accessLevel:
          type: string
          description: The access right level applied to the object type.
          nullable: false
          enum:
            - HIDE
            - VIEW
            - CHANGE
            - ADD
            - FULL
      description: A list of overridden access rights.
    AddressManagerAuthenticator:
      type: object
      allOf:
        - $ref: '#/components/schemas/Authenticator'
        - type: object
          properties:
            type:
              type: string
              description: The type of authenticator.
              enum:
                - AddressManagerAuthenticator
            hostname:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The fully qualified domain name or IP address for the authenticator.
              nullable: false
              example: https://hostname.com
    AdministrativeAccessRight:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          readOnly: true
          enum:
            - AdministrativeAccessRight
        userScope:
          required:
            - id
          nullable: false
          allOf:
            - $ref: '#/components/schemas/InlinedUserScope'
        administrativeAccessRights:
          type: array
          description: A list of administrative access rights.
          nullable: false
          items:
            $ref: '#/components/schemas/AdministrativeResourceAccessRightBean'
    AdministrativeResourceAccessRightBean:
      type: object
      properties:
        resourceType:
          type: string
          description: The resource type the access right is applied to.
          nullable: false
          enum:
            - Event
            - Log
            - Report
        accessLevel:
          type: string
          description: The administrative action access level associated with the access right.
          nullable: false
          enum:
            - HIDE
            - VIEW
            - FULL
      description: The administrative access right levels that the user has for the events list, log management, and reporting.
    Authenticator:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of authenticator.
          enum:
            - Authenticator
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name for the authenticator.
          nullable: false
          example: LDAP authenticator
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
      description: The authenticator that manages the user.
      discriminator:
        propertyName: type
    InlinedAuthenticator:
      title: Authenticator
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of authenticator.
          enum:
            - Authenticator
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name for the authenticator.
          nullable: false
          example: LDAP authenticator
    InlinedResource:
      title: Resource
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ACL
            - AddressManagerAuthenticator
            - AliasRecord
            - Configuration
            - DHCPClientIdentifier
            - DHCPDeploymentRole
            - DHCPForwardZone
            - DHCPReverseZone
            - DHCPUniqueIdentifier
            - DHCPVendorOption
            - DHCPVendorOptionDefinition
            - DHCPZoneGroup
            - DHCPv4ClientClass
            - DHCPv4ClientOption
            - DHCPv4ClientOptionDefinition
            - DHCPv4CustomClientOptionDefinition
            - DHCPv4RawOption
            - DHCPv4ServiceOption
            - DHCPv4ServiceOptionDefinition
            - DHCPv4Subclass
            - DHCPv6ClientOption
            - DHCPv6ClientOptionDefinition
            - DHCPv6RawOption
            - DHCPv6ServiceOption
            - DHCPv6ServiceOptionDefinition
            - DNS64
            - DNSDeploymentRole
            - DNSOption
            - DNSOptionDefinition
            - DNSRawOption
            - DNSSECSigningPolicy
            - DenyMACPool
            - DeploymentSchedule
            - Device
            - DeviceSubtype
            - DeviceType
            - ENUMNumberZone
            - ENUMZone
            - EntrustKeySigningKey
            - EntrustZoneSigningKey
            - ExternalHostRecord
            - ExternalHostsZone
            - GenericRecord
            - HAServer
            - HINFORecord
            - HSMConfiguration
            - HSMServer
            - HTTPSRecord
            - HostRecord
            - IPv4Address
            - IPv4Block
            - IPv4DHCPRange
            - IPv4DHCPRangeTemplateItem
            - IPv4GatewayTemplateItem
            - IPv4Group
            - IPv4GroupTemplateItem
            - IPv4Network
            - IPv4ReconciliationPolicy
            - IPv4ReservedRangeTemplateItem
            - IPv4Template
            - IPv6Address
            - IPv6Block
            - IPv6DHCPRange
            - IPv6Network
            - IPv6ReconciliationPolicy
            - IPv6Template
            - InternalRootZone
            - KerberosAuthenticator
            - KerberosRealm
            - KerberosServicePrincipal
            - KeyDistributionCenter
            - KeySigningKey
            - LDAPAuthenticator
            - Location
            - MACAddress
            - MACPool
            - MXRecord
            - NAPTRRecord
            - NamingPolicy
            - NamingPolicyConnectorValue
            - NamingPolicyIncrementalValue
            - NamingPolicyIntegerValue
            - NamingPolicyRequiredValue
            - NamingPolicyRestriction
            - NamingPolicyTextValue
            - NetworkInterface
            - NotificationGroup
            - OAuthAuthorizationServer
            - PublishedInterface
            - RADIUSAuthenticator
            - Report
            - ReportSchedule
            - ResponsePolicy
            - ResponsePolicyZone
            - SAMLIdentityProvider
            - SRVRecord
            - SVCBRecord
            - Server
            - ServerGroup
            - ServerGroupInterface
            - ServerInterface
            - ServiceOption
            - SigningKey
            - StartOfAuthority
            - StartOfAuthorityDefinition
            - TACACSPlusAuthenticator
            - TFTPDeploymentRole
            - TFTPFile
            - TFTPFolder
            - TFTPGroup
            - TSIGKey
            - TXTRecord
            - Tag
            - TagGroup
            - Task
            - URIRecord
            - User
            - UserGroup
            - VendorProfile
            - View
            - VirtualInterface
            - X509Authenticator
            - Zone
            - ZoneSigningKey
            - ZoneTemplate
        name:
          type: string
          description: The name of the resource.
          example: name
    InlinedUserScope:
      title: UserScope
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The user or user group resource identifier.
          format: int64
          example: 103307
        type:
          type: string
          description: The user scope resource type.
        name:
          type: string
          description: The name of the resource.
          example: name
    KerberosAuthenticator:
      type: object
      allOf:
        - $ref: '#/components/schemas/Authenticator'
        - type: object
          properties:
            type:
              type: string
              description: The type of authenticator.
              enum:
                - KerberosAuthenticator
            secondaryAuthenticator:
              required:
                - id
              allOf:
                - $ref: '#/components/schemas/InlinedAuthenticator'
            hostname:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The fully qualified domain name or IP address for the authenticator.
              nullable: false
              example: https://hostname.com
            realm:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The administrative domain for the Kerberos server.
              nullable: false
              example: DOMAIN.COM
    LDAPAuthenticator:
      type: object
      allOf:
        - $ref: '#/components/schemas/Authenticator'
        - type: object
          properties:
            type:
              type: string
              description: The type of authenticator.
              enum:
                - LDAPAuthenticator
            secondaryAuthenticator:
              required:
                - id
              allOf:
                - $ref: '#/components/schemas/Authenticator'
            hostname:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The fully qualified domain name or IP address for the authenticator.
              nullable: false
              example: https://hostname.com
            port:
              maximum: 65535
              minimum: 1
              type: integer
              description: The TCP port used for communication between Address Manager and the default LDAP server.
              format: int32
              nullable: false
              example: 1389
            adminDn:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The distinguished name or relative distinguished name of a user with rights to search the LDAP directory.
              nullable: false
              example: user1
            adminPassword:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The password for the distinguished name or relative distinguished name.
              nullable: false
              example: pass1
            sslEnabled:
              type: boolean
              description: Determines whether SSL communication is enabled between Address Manager and the LDAP server.
              nullable: false
            schemaType:
              type: string
              description: The type of LDAP schema.
              nullable: false
              enum:
                - ACTIVE_DIRECTORY
                - OPENLDAP
                - OTHER_LDAP
            searchBase:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The search base distinguished name location from which the search for users on the LDAP server begins.
              nullable: false
              example: cn=users,dc=example,dc=com
            userObjectClass:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The user object class used to locate an LDAP user.
              nullable: false
              example: person
            groupObjectClass:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The group object class used to indicate that a DN is a group.
              nullable: false
              example: group
            userPrefix:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The user attribute for user accounts in the LDAP tree.
              nullable: false
              example: samAccountName
            emailPrefix:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The variable to be used for the email prefix.
              nullable: false
              example: userPrincipalName
            memberOfPrefix:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The attribute used to store user-group membership information.
              nullable: false
              example: memberOf
            referralPolicy:
              type: string
              description: The environment property that indicates how to handle referrals from external resources to the service providers.
              nullable: false
              enum:
                - IGNORE
                - FOLLOW
                - THROW
            aliasDereferencePolicy:
              type: string
              description: The environment property that indicates whether alias entries are dereferenced.
              nullable: false
              enum:
                - ALWAYS
                - NEVER
                - FINDING
                - SEARCHING
    NameValuePairBean:
      type: object
      properties:
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name for the value.
          nullable: false
          example: Test
        value:
          type: string
          description: The value to be inserted.
          example: Text
      description: An attribute-value pair defined for the custom service in the TACACS+ server.
    OAuthAuthorizationServer:
      type: object
      allOf:
        - $ref: '#/components/schemas/Authenticator'
        - type: object
          properties:
            type:
              type: string
              description: The type of authenticator.
              enum:
                - OAuthAuthorizationServer
            description:
              type: string
              description: The description of the authorization server.
              example: OAuth server
            enabled:
              type: boolean
              description: Indicates whether OAuth authentication is enabled.
              nullable: false
            userClaim:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The user claim name of the authorization server.
              nullable: false
              example: sub
            groupClaim:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The group claim name of the authorization server.
              nullable: false
              example: group
            emailClaim:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The email claim name of the authorization server.
              nullable: false
              example: email
            validationMethod:
              type: string
              description: The method that indicates where the token validation occurs.
              nullable: false
              enum:
                - AUTHORIZATION_SERVER
                - LOCAL
            clientId:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The public identifier of the application.
              example: a1b2c3d4e5f6
            clientSecret:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The client secret known only to the application and authorization server.
              example: 18a42498e37480952a1e7f412539f93ce0dfa042d57a95e3ce915516ead51a2
            introspectionUrl:
              type: string
              description: The introspection endpoint that allows Address Manager to check the validity of access tokens.
              example: https://auth-server.com
            userInfoUrl:
              type: string
              description: The endpoint containing information about the user, including the group membership information and user ID.
              example: https://auth-server.com/userinfo
            authorizationOption:
              type: string
              description: The authorization method used when Address Manager sends the client ID and client secret to the authorization server.
              enum:
                - BASIC
                - POST
            audience:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The name of the BAM API bearer token obtained from the authorization server.
            issuer:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The name of the token issuer.
              example: https://auth-server.com
            signingCertificate:
              type: string
              description: The authoritative server signing certificate.
              format: byte
    RADIUSAuthenticator:
      type: object
      allOf:
        - $ref: '#/components/schemas/Authenticator'
        - type: object
          properties:
            type:
              type: string
              description: The type of authenticator.
              enum:
                - RADIUSAuthenticator
            secondaryAuthenticator:
              required:
                - id
              allOf:
                - $ref: '#/components/schemas/Authenticator'
            hostname:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The fully qualified domain name or IP address for the authenticator.
              nullable: false
              example: https://hostname.com
            timeout:
              type: string
              description: The value that overrides the timeout setting used for authentication requests sent to the RADIUS server.
              nullable: false
              example: PT6S
            port:
              maximum: 65535
              minimum: 1
              type: integer
              description: The port number used for authenticating users against the RADIUS server.
              format: int32
              nullable: false
              example: 1812
            retries:
              maximum: 10
              minimum: 1
              type: integer
              description: The number of times Address Manager attempts to retransmit a failed authentication request sent to the RADIUS server.
              format: int32
              nullable: false
              example: 1
            sharedSecret:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The shared secret used to encrypt and decrypt packets between the client and the server.
              nullable: false
              example: Shar3dS3cret!
            authenticationProtocol:
              type: string
              description: The authentication protocol.
              nullable: false
              enum:
                - CHAP
                - PAP
    Resource:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ACL
            - AddressManagerAuthenticator
            - AliasRecord
            - Configuration
            - DHCPClientIdentifier
            - DHCPDeploymentRole
            - DHCPForwardZone
            - DHCPReverseZone
            - DHCPUniqueIdentifier
            - DHCPVendorOption
            - DHCPVendorOptionDefinition
            - DHCPZoneGroup
            - DHCPv4ClientClass
            - DHCPv4ClientOption
            - DHCPv4ClientOptionDefinition
            - DHCPv4CustomClientOptionDefinition
            - DHCPv4RawOption
            - DHCPv4ServiceOption
            - DHCPv4ServiceOptionDefinition
            - DHCPv4Subclass
            - DHCPv6ClientOption
            - DHCPv6ClientOptionDefinition
            - DHCPv6RawOption
            - DHCPv6ServiceOption
            - DHCPv6ServiceOptionDefinition
            - DNS64
            - DNSDeploymentRole
            - DNSOption
            - DNSOptionDefinition
            - DNSRawOption
            - DNSSECSigningPolicy
            - DenyMACPool
            - DeploymentSchedule
            - Device
            - DeviceSubtype
            - DeviceType
            - ENUMNumberZone
            - ENUMZone
            - EntrustKeySigningKey
            - EntrustZoneSigningKey
            - ExternalHostRecord
            - ExternalHostsZone
            - GenericRecord
            - HAServer
            - HINFORecord
            - HSMConfiguration
            - HSMServer
            - HTTPSRecord
            - HostRecord
            - IPv4Address
            - IPv4Block
            - IPv4DHCPRange
            - IPv4DHCPRangeTemplateItem
            - IPv4GatewayTemplateItem
            - IPv4Group
            - IPv4GroupTemplateItem
            - IPv4Network
            - IPv4ReconciliationPolicy
            - IPv4ReservedRangeTemplateItem
            - IPv4Template
            - IPv6Address
            - IPv6Block
            - IPv6DHCPRange
            - IPv6Network
            - IPv6ReconciliationPolicy
            - IPv6Template
            - InternalRootZone
            - KerberosAuthenticator
            - KerberosRealm
            - KerberosServicePrincipal
            - KeyDistributionCenter
            - KeySigningKey
            - LDAPAuthenticator
            - Location
            - MACAddress
            - MACPool
            - MXRecord
            - NAPTRRecord
            - NamingPolicy
            - NamingPolicyConnectorValue
            - NamingPolicyIncrementalValue
            - NamingPolicyIntegerValue
            - NamingPolicyRequiredValue
            - NamingPolicyRestriction
            - NamingPolicyTextValue
            - NetworkInterface
            - NotificationGroup
            - OAuthAuthorizationServer
            - PublishedInterface
            - RADIUSAuthenticator
            - Report
            - ReportSchedule
            - ResponsePolicy
            - ResponsePolicyZone
            - SAMLIdentityProvider
            - SRVRecord
            - SVCBRecord
            - Server
            - ServerGroup
            - ServerGroupInterface
            - ServerInterface
            - ServiceOption
            - SigningKey
            - StartOfAuthority
            - StartOfAuthorityDefinition
            - TACACSPlusAuthenticator
            - TFTPDeploymentRole
            - TFTPFile
            - TFTPFolder
            - TFTPGroup
            - TSIGKey
            - TXTRecord
            - Tag
            - TagGroup
            - Task
            - URIRecord
            - User
            - UserGroup
            - VendorProfile
            - View
            - VirtualInterface
            - X509Authenticator
            - Zone
            - ZoneSigningKey
            - ZoneTemplate
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
      description: The base resource type
    Right:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          readOnly: true
        userScope:
          required:
            - id
          nullable: false
          allOf:
            - $ref: '#/components/schemas/InlinedUserScope'
      discriminator:
        propertyName: type
    SAMLIdentityProvider:
      type: object
      allOf:
        - $ref: '#/components/schemas/Authenticator'
        - type: object
          properties:
            type:
              type: string
              description: The type of authenticator.
              enum:
                - SAMLIdentityProvider
            secondaryAuthenticator:
              required:
                - id
              allOf:
                - $ref: '#/components/schemas/Authenticator'
            description:
              type: string
              description: The description of the SAML IdP configuration.
              example: IdP configuration
            enabled:
              type: boolean
              description: Indicates whether SAML IdP authentication is enabled.
              nullable: false
            groupAttribute:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The attribute name for group in the SAML response.
              nullable: false
              example: http://schemas.xmlsoap.org/claims/Group
            emailAttribute:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The attribute name for email in the SAML response.
              nullable: false
              example: http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress
            signOnUrl:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The sign-in URL of the SAMP IdP.
              nullable: false
              example: https://example-idp.com/SSORedirect/idp
            logoutUrl:
              type: string
              description: The logout URL of the SAMP IdP.
              example: https://example-idp.com/SSORedirect/logout
            entityId:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The entity ID of the SAMP IdP.
              nullable: false
              example: example-idp.com
            signingCertificate:
              type: string
              description: The SAML IdP server signing certificate.
              format: byte
              nullable: false
    TACACSPlusAuthenticator:
      type: object
      allOf:
        - $ref: '#/components/schemas/Authenticator'
        - type: object
          properties:
            type:
              type: string
              description: The type of authenticator.
              enum:
                - TACACSPlusAuthenticator
            secondaryAuthenticator:
              required:
                - id
              allOf:
                - $ref: '#/components/schemas/Authenticator'
            hostname:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The fully qualified domain name or IP address for the authenticator.
              nullable: false
              example: https://hostname.com
            timeout:
              type: string
              description: The value that overrides the timeout setting used for authentication requests sent to the TACACS+ server.
              nullable: false
              example: PT2S
            port:
              maximum: 65535
              minimum: 1
              type: integer
              description: The TCP port number used for communication between the client and server.
              format: int32
              nullable: false
              example: 49
            sharedSecret:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The shared secret used to encrypt and decrypt packets between the client and the server.
              nullable: false
              example: Shar3dS3cret!
            authenticationProtocol:
              type: string
              description: The authentication protocol.
              nullable: false
              enum:
                - CHAP
                - PAP
            groupAttribute:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The special attribute used for the custom service in the TACACS+ server. This attribute is used to get the group name defined in the TACACS+ server.
              example: Example group
            attributes:
              type: array
              nullable: false
              items:
                $ref: '#/components/schemas/NameValuePairBean'
    User:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The user or user group resource identifier.
          format: int64
          example: 103307
        type:
          type: string
          description: The user scope resource type.
          enum:
            - User
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the user.
          nullable: false
          example: admin
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        password:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The password of the user.
          writeOnly: true
          example: password
        authenticator:
          required:
            - id
          nullable: false
          allOf:
            - $ref: '#/components/schemas/InlinedAuthenticator'
        email:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The email address of the user.
          nullable: false
          example: user@example.com
        phoneNumber:
          type: string
          description: The phone number of the user.
          example: 555-1234
        securityPrivilege:
          type: string
          description: The configured security privilege of the user.
          nullable: false
          enum:
            - NO_ACCESS
            - VIEW_MY_ACCESS_RIGHTS
            - VIEW_OTHERS_ACCESS_RIGHTS
            - CHANGE_ACCESS_RIGHTS
            - ADD_ACCESS_RIGHTS
            - DELETE_ACCESS_RIGHTS
            - ADMINISTRATOR
        historyPrivilege:
          type: string
          description: The configured history privilege of the user.
          nullable: false
          enum:
            - HIDE
            - VIEW_HISTORY_LIST
            - ADMINISTRATOR
        accessType:
          type: string
          description: The access type of the user. The access type can be GUI, API, or both.
          nullable: false
          enum:
            - GUI
            - API
            - GUI_AND_API
        passwordResetRequired:
          type: boolean
          description: Indicates whether the user must reset their password upon their initial log in to Address Manager.
          nullable: false
        accountLocked:
          type: boolean
          description: Indicates whether the user account has been locked.
          nullable: false
        x509Required:
          type: boolean
          description: Indicates whether the user must access Address Manager using X.509 authentication only.
          nullable: false
        administrativeAccessRights:
          type: array
          description: The administrative access right levels that the user has for the events list, log management, and reporting.
          readOnly: true
          items:
            $ref: '#/components/schemas/AdministrativeResourceAccessRightBean'
      description: The user who modified the workflow request. For example, the authorized user who approved the workflow request.
    UserGroup:
      type: object
      allOf:
        - $ref: '#/components/schemas/UserScope'
        - type: object
          properties:
            type:
              type: string
              description: The user scope resource type.
              enum:
                - UserGroup
            name:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The name for the user, LDAP, TACACS+, or SSO group.
              nullable: false
              example: Test group
            groupType:
              type: string
              description: The import file contents
              nullable: false
              enum:
                - ADDRESS_MANAGER
                - LDAP
                - SSO
                - TACACS_PLUS
            description:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The description of the SSO group.
              example: SSO Group 1
            administratorPrivilege:
              type: boolean
              description: Indicates whether the users within the group have administrative user privileges.
              nullable: false
            administrativeAccessRights:
              type: array
              description: A list of administrative access rights associated to the user group.
              readOnly: true
              items:
                $ref: '#/components/schemas/AdministrativeResourceAccessRightBean'
            authenticator:
              required:
                - id
              allOf:
                - $ref: '#/components/schemas/InlinedAuthenticator'
    UserScope:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The user or user group resource identifier.
          format: int64
          example: 103307
        type:
          type: string
          description: The user scope resource type.
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
      description: The users and user groups that are part of the notification group.
      discriminator:
        propertyName: type
    X509Authenticator:
      type: object
      allOf:
        - $ref: '#/components/schemas/Authenticator'
        - type: object
          properties:
            type:
              type: string
              description: The type of authenticator.
              enum:
                - X509Authenticator
            secondaryAuthenticator:
              required:
                - id
              allOf:
                - $ref: '#/components/schemas/Authenticator'
            primaryServerUrl:
              type: string
              description: The HTTP URL of the primary OCSP responder, used for testing the status and validity of client certificates issued by the certificate authority.
              nullable: false
            secondaryServerUrl:
              type: string
              description: The URL of the secondary OCSP responder. The server will be contacted only if the primary cannot be contacted.
            ldapUserMatchOption:
              type: string
              description: Indicates how matching of users in LDAP is performed. If the value is CUSTOM_USER_PREFIX_MATCH, matching of users in LDAP will be performed using the Subject CN from the client certificate and the attribute specified in the User Prefix field of the LDAP authenticator. If the value is STRICT_DN_MATCH, matching of users in LDAP will be performed using the full Subject DN from the client certificate.
              nullable: false
              enum:
                - NONE
                - CUSTOM_USER_PREFIX_MATCH
                - STRICT_DN_MATCH
            caCertificates:
              minItems: 1
              type: array
              nullable: false
              items:
                type: string
                description: The certificate for the CA issuing client certificates. If an issuing CA is an intermediate (or sub-) CA, the chain of CA certificates up to and including a root CA must also be present. All certificates must be  base64-encoded with any PEM headers removed.
                format: byte
    FieldUpdateBean:
      type: object
      properties:
        name:
          type: string
          description: The name of the field.
          readOnly: true
        value:
          type: object
          readOnly: true
        previousValue:
          type: object
          readOnly: true
      description: A list of updated fields in the workflow request.
    WorkflowRequest:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - WorkflowRequest
        state:
          type: string
          description: The approval state of the workflow request. The state will be PENDING if the workflow request has not yet been processed by an authorized user.
          enum:
            - APPROVED
            - DENIED
        operation:
          type: string
          description: The requested operation for the workflow request.
          readOnly: true
          enum:
            - ADD_ALIAS_RECORD
            - ADD_HOST_RECORD
            - ADD_IPV4_NETWORK
            - ADD_RESOURCE_RECORD
            - ADD_ZONE
            - ASSIGN_IPV4_ADDRESS
            - CHANGE_IPV4_ADDRESS_STATE
            - DELETE_RESOURCE
            - RENAME_RESOURCE_RECORD
            - UPDATE_ALIAS_RECORD
            - UPDATE_HOST_RECORD
            - UPDATE_IPV4_ADDRESS
            - UPDATE_IPV4_NETWORK
            - UPDATE_READONLY_IPV4_NETWORK
            - UPDATE_RESOURCE_RECORD
            - UPDATE_ZONE
        creator:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/User'
        resourceId:
          type: integer
          description: The ID of the resource that is being created, modified, or deleted in the workflow request.
          format: int64
          readOnly: true
        resourceType:
          type: string
          description: The type of resource that is being created, modified, or deleted in the workflow request.
          readOnly: true
          enum:
            - ACL
            - AbstractKeySigningKey
            - AbstractNetworkInterface
            - AbstractServer
            - AbstractZoneSigningKey
            - AccessRight
            - AddressManager
            - AddressManagerAuthenticator
            - AddressManagerDatabase
            - AddressManagerServer
            - AdministrativeAccessRight
            - AliasRecord
            - AnycastService
            - AuditDataSettings
            - Authenticator
            - Configuration
            - DHCPActivityService
            - DHCPAlertSettings
            - DHCPClientIdentifier
            - DHCPClientOption
            - DHCPDeploymentRole
            - DHCPForwardZone
            - DHCPReverseZone
            - DHCPServiceOption
            - DHCPStatisticsService
            - DHCPUniqueIdentifier
            - DHCPVendorOption
            - DHCPVendorOptionDefinition
            - DHCPZone
            - DHCPZoneGroup
            - DHCPv4ClientClass
            - DHCPv4ClientOption
            - DHCPv4ClientOptionDefinition
            - DHCPv4CustomClientOptionDefinition
            - DHCPv4Lease
            - DHCPv4RawOption
            - DHCPv4ServiceOption
            - DHCPv4ServiceOptionDefinition
            - DHCPv4Subclass
            - DHCPv6ClientOption
            - DHCPv6ClientOptionDefinition
            - DHCPv6Lease
            - DHCPv6RawOption
            - DHCPv6ServiceOption
            - DHCPv6ServiceOptionDefinition
            - DNS64
            - DNSActivityService
            - DNSDeploymentRole
            - DNSOption
            - DNSOptionDefinition
            - DNSRawOption
            - DNSResolverService
            - DNSSECSigningPolicy
            - DNSStatisticsService
            - Dashboard
            - DatabaseBackupFile
            - DatabaseBackupSchedule
            - DatabaseLog
            - DefaultClientOption
            - DefaultDHCPOption
            - DefaultDHCPServiceOption
            - DefaultDNSOption
            - DenyMACPool
            - DeploymentRole
            - DeploymentRoleMove
            - DeploymentSchedule
            - Device
            - DeviceSubtype
            - DeviceType
            - DifferentialDeployment
            - DiscoveredARPEntry
            - DiscoveredHost
            - DiscoveredInterface
            - DiscoveredMACAddress
            - DiscoveredNetwork
            - DiscoveredRouter
            - DiscoveredSwitch
            - DiscoveredVLAN
            - ENUMNumberZone
            - ENUMZone
            - EntrustKeySigningKey
            - EntrustZoneSigningKey
            - Event
            - ExternalHostRecord
            - ExternalHostsZone
            - FailoverAPIService
            - FirewallService
            - FullDeployment
            - GatewayService
            - GenericRecord
            - GlobalSettings
            - HAServer
            - HINFORecord
            - HSMConfiguration
            - HSMKeySigningKey
            - HSMServer
            - HSMZoneSigningKey
            - HTTPSRecord
            - HostRecord
            - IPServerInterface
            - IPv4Address
            - IPv4AddressImport
            - IPv4AddressMove
            - IPv4Block
            - IPv4BlockImport
            - IPv4BlockMerge
            - IPv4BlockMove
            - IPv4BlockSplit
            - IPv4DHCPRange
            - IPv4DHCPRangeMerge
            - IPv4DHCPRangeTemplateItem
            - IPv4GatewayTemplateItem
            - IPv4Group
            - IPv4GroupTemplateItem
            - IPv4HiddenTemplateItemChild
            - IPv4Network
            - IPv4NetworkImport
            - IPv4NetworkMerge
            - IPv4NetworkMove
            - IPv4NetworkSplit
            - IPv4Prefix
            - IPv4Range
            - IPv4ReconciliationPolicy
            - IPv4ReservedRangeTemplateItem
            - IPv4Template
            - IPv4TemplateApplication
            - IPv6Address
            - IPv6AddressImport
            - IPv6AddressMove
            - IPv6Block
            - IPv6BlockImport
            - IPv6BlockMove
            - IPv6DHCPRange
            - IPv6Network
            - IPv6NetworkImport
            - IPv6NetworkMove
            - IPv6Prefix
            - IPv6ReconciliationPolicy
            - IPv6Template
            - IPv6TemplateItem
            - ImportLog
            - InterfacesService
            - InternalRootZone
            - KerberosAuthenticator
            - KerberosRealm
            - KerberosServicePrincipal
            - KeyDistributionCenter
            - KeySigningKey
            - LDAPAuthenticator
            - LicenseService
            - Location
            - LocationGroup
            - Log
            - LogLevelSettings
            - LoginPolicySettings
            - MACAddress
            - MACPool
            - MXRecord
            - MonitoringSettings
            - NAPTRRecord
            - NTPService
            - NamingPolicy
            - NamingPolicyConnectorValue
            - NamingPolicyIncrementalValue
            - NamingPolicyIntegerValue
            - NamingPolicyRequiredValue
            - NamingPolicyRestriction
            - NamingPolicyTextValue
            - NetworkInterface
            - NotificationGroup
            - OAuthAuthorizationServer
            - Operation
            - PasswordPolicySettings
            - Preference
            - PublishedInterface
            - QuickDeployment
            - RADIUSAuthenticator
            - RawOption
            - Report
            - ReportSchedule
            - Resource
            - ResourceImport
            - ResourceRecord
            - ResourceRecordImport
            - ResourceRecordMove
            - ResponsePolicy
            - ResponsePolicyItem
            - ResponsePolicyItemImport
            - ResponsePolicyZone
            - ResponsePolicyZoneFeedCategory
            - SAMLIdentityProvider
            - SAMLServiceProviderSettings
            - SNMPService
            - SRVRecord
            - SSHService
            - SSOEnforcementSettings
            - SVCBRecord
            - SelectiveDeployment
            - Server
            - ServerFile
            - ServerGroup
            - ServerGroupInterface
            - ServerInterface
            - ServerLog
            - ServerPatch
            - ServerPatchApplication
            - ServiceOption
            - SigningKey
            - StartOfAuthority
            - StartOfAuthorityDefinition
            - SyslogService
            - SystemLog
            - SystemSettings
            - TACACSPlusAuthenticator
            - TFTPDeploymentRole
            - TFTPFile
            - TFTPFolder
            - TFTPGroup
            - TFTPNode
            - TSIGKey
            - TXTRecord
            - Tag
            - TagGroup
            - Task
            - Transaction
            - TrustRelationship
            - URIRecord
            - User
            - UserDefinedFieldDefinition
            - UserDefinedLinkDefinition
            - UserGroup
            - UserSession
            - ValidationDeployment
            - VendorProfile
            - View
            - VirtualInterface
            - WebAccessSettings
            - Widget
            - WorkflowRequest
            - X509Authenticator
            - Zone
            - ZoneImport
            - ZoneMove
            - ZoneSigningKey
            - ZoneTemplate
            - ZoneTemplateApplication
        fieldUpdates:
          type: array
          description: A list of updated fields in the workflow request.
          readOnly: true
          items:
            $ref: '#/components/schemas/FieldUpdateBean'
        dependentRequest:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/WorkflowRequest'
        modifier:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/User'
        creationDateTime:
          type: string
          description: The time the workflow request was created.
          format: date-time
          readOnly: true
          example: "2022-10-17T19:11:45Z"
        modificationDateTime:
          type: string
          description: The time the workflow request was modified.
          format: date-time
          readOnly: true
          example: "2022-10-18T19:11:45Z"
        comment:
          type: string
          description: The change control comment added during creation of the workflow request.
          readOnly: true
          example: Sample comment.
    AbstractMacPool:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
      description: The MAC pool that the MAC address is associated with.
      discriminator:
        propertyName: type
    Address:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of IP address.
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        state:
          type: string
          description: The state of the IP address.
          enum:
            - UNASSIGNED
            - DHCP_ABANDONED
            - DHCP_ALLOCATED
            - DHCP_EXCLUDED
            - DHCP_FREE
            - DHCP_LEASED
            - DHCP_RESERVED
            - DHCP_UNASSIGNED
            - GATEWAY
            - RESERVED
            - RESTRICTED
            - STATIC
        address:
          type: string
          description: The IP address.
        macAddress:
          anyOf:
            - required:
                - id
              allOf:
                - $ref: '#/components/schemas/InlinedMACAddress'
            - required:
                - address
              allOf:
                - $ref: '#/components/schemas/InlinedMACAddress'
        device:
          anyOf:
            - required:
                - id
              allOf:
                - $ref: '#/components/schemas/InlinedDevice'
            - required:
                - name
              allOf:
                - $ref: '#/components/schemas/InlinedDevice'
        location:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedLocation'
        resourceRecords:
          type: array
          description: The list of resource records to associate with the address.
          writeOnly: true
          items:
            required:
              - absoluteName
            allOf:
              - $ref: '#/components/schemas/InlinedResourceRecord'
        leaseDateTime:
          type: string
          description: The timestamp detailing when the lease for the IP address was offered.
          format: date-time
          readOnly: true
          example: "2022-01-15T00:00:00Z"
        leaseExpirationDateTime:
          type: string
          description: The timestamp detailing when the lease for the IP address expires.
          format: date-time
          readOnly: true
          example: "2022-01-25T00:00:00Z"
        remoteId:
          type: string
          description: The ID of the relay agent.
          readOnly: true
          example: "1234"
      description: An IP address assigned to the host record.
      discriminator:
        propertyName: type
    AliasRecord:
      type: object
      allOf:
        - $ref: '#/components/schemas/ResourceRecord'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              enum:
                - AliasRecord
            recordType:
              type: string
              description: The resource record type.
              readOnly: true
              enum:
                - CNAME
            linkedRecord:
              nullable: false
              anyOf:
                - required:
                    - id
                  allOf:
                    - $ref: '#/components/schemas/InlinedResourceRecord'
                - required:
                    - absoluteName
                  allOf:
                    - $ref: '#/components/schemas/InlinedResourceRecord'
    BlockUsageAllocationBean:
      type: object
      properties:
        assigned:
          type: integer
          description: The percentage of assigned space within the block.
          format: int32
        unassigned:
          type: integer
          description: The percentage of unassigned space within the block.
          format: int32
      description: The percentage of the used and available block space based on the network sizes within the block.
    BlockUsageBean:
      type: object
      properties:
        addressAllocation:
          $ref: '#/components/schemas/BlockUsageAllocationBean'
        networkAllocation:
          $ref: '#/components/schemas/BlockUsageAllocationBean'
      description: Percentage values indicating the current amount of allocated and unallocated IPv4 addresses within the block.
    ConfigurationChild:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
      description: The DNS views and zones restricted to this IPv4 block.
    DHCPClientIdentifier:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DHCPClientIdentifier
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        uid:
          $ref: '#/components/schemas/UID'
      description: The UID of the DHCP client identifier.
    DHCPUniqueIdentifier:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DHCPUniqueIdentifier
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        duid:
          type: string
          description: The DHCP unique identifier.
          nullable: false
      description: The DHCP Unique Identifier (DUID) of the client.
    DNSSECSigningPolicy:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DNSSECSigningPolicy
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        keyProvider:
          type: string
          description: The system that created the DNSSEC signing key.
          nullable: false
          enum:
            - ADDRESS_MANAGER
        signatureDigestAlgorithm:
          type: string
          description: The algorithm used for the Delegation Signer (DS) record.
          nullable: false
          enum:
            - SHA1
            - SHA256
            - SHA384
        signatureValidityPeriod:
          type: string
          description: The duration for which the RRSIG resource record is valid.
          nullable: false
          example: PT240H
        signatureResigningPeriod:
          type: string
          description: The duration before the end of the signature validity period at which BIND resigns the zone.
          nullable: false
          example: PT48H
        zoneSigningKeyAlgorithm:
          type: string
          description: The algorithm for the Zone Signing Key (ZSK).
          nullable: false
          enum:
            - ECDSAP256SHA256
            - ECDSAP384SHA384
            - ED25519
            - ED448
            - RSAMD5
            - RSANSEC3SHA256
            - RSANSEC3SHA512
            - RSASHA1
            - RSASHA1NSEC3SHA1
            - RSASHA256
            - RSASHA512
        zoneSigningKeyLength:
          type: integer
          description: The length of the zone signing key in bits.
          format: int32
          nullable: false
          example: 384
        zoneSigningKeyOverrideTtl:
          type: string
          description: The overridden TTL value of the zone signing key.
          example: PT24H
        zoneSigningKeyValidityPeriod:
          type: string
          description: The duration for which the zone signing key is valid.
          nullable: false
          example: PT720H
        zoneSigningKeyOverlapPeriod:
          type: string
          description: The duration before the end of the validity period at which a new key is generated for key rollover.
          nullable: false
          example: PT168H
        zoneSigningKeyRolloverMethod:
          type: string
          description: The method to make the new zone signing key available when the key rolls over.
          nullable: false
          enum:
            - DOUBLE_SIGNING
            - PRE_PUBLISH
        zoneSigningKeySigningPeriod:
          type: string
          description: The duration before the end of the key validity period. During this time, the resource records in the zone are simultaneously signed by the new key and unsigned by the old key.
          example: PT72H
        zoneSigningKeyProtectionType:
          type: string
          description: The zone signing key protection type when Enstrust HSM is configured as the key provider.
          enum:
            - MODULE
        keySigningKeyAlgorithm:
          type: string
          description: The algorithm for the key signing key (KSK).
          nullable: false
          enum:
            - ECDSAP256SHA256
            - ECDSAP384SHA384
            - ED25519
            - ED448
            - RSAMD5
            - RSANSEC3SHA256
            - RSANSEC3SHA512
            - RSASHA1
            - RSASHA1NSEC3SHA1
            - RSASHA256
            - RSASHA512
        keySigningKeyLength:
          type: integer
          description: The length of the key signing key in bits.
          format: int32
          nullable: false
          example: 384
        keySigningKeyOverrideTtl:
          type: string
          description: The overridden TTL value of the key signing key.
          example: PT24H
        keySigningKeyValidityPeriod:
          type: string
          description: The duration for which the key signing key is valid.
          nullable: false
          example: PT8640H
        keySigningKeyOverlapPeriod:
          type: string
          description: The duration before the end of the validity period at which a new key is generated for key rollover.
          nullable: false
          example: PT336H
        keySigningKeyRolloverMethod:
          type: string
          description: The method to make the new key signing key available when the key rolls over.
          nullable: false
          enum:
            - DOUBLE_SIGNING
            - PRE_PUBLISH
        keySigningKeySigningPeriod:
          type: string
          description: The duration before the end of the key validity period. During this time, the resource records in the keys are simultaneously signed by the new key and unsigned by the old key.
          example: PT96H
        keySigningKeyProtectionType:
          type: string
          description: The key signing key protection type when Enstrust HSM is configured as the key provider.
          enum:
            - MODULE
      description: The name of the DNSSEC signing policy associated with the IPv4 block.
    DenyMACPool:
      type: object
      allOf:
        - $ref: '#/components/schemas/AbstractMacPool'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              enum:
                - DenyMACPool
            instantDeploymentEnabled:
              type: boolean
              description: Indicates whether changes to the MAC address pool will be instantly deployed to associated DNS/DHCP Servers.
              readOnly: true
    Device:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - Device
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the device.
          nullable: false
          example: device0
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        addresses:
          type: array
          description: The IP address of the device.
          writeOnly: true
          items:
            anyOf:
              - required:
                  - id
                allOf:
                  - $ref: '#/components/schemas/InlinedAddress'
              - required:
                  - address
                allOf:
                  - $ref: '#/components/schemas/InlinedAddress'
        deviceType:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedDeviceType'
        deviceSubtype:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedDeviceSubtype'
      description: The device associated with the IP address.
    DeviceSubtype:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DeviceSubtype
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
      description: The device subtype.
    DeviceType:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DeviceType
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
      description: The device type.
    ExternalHostRecord:
      type: object
      allOf:
        - $ref: '#/components/schemas/ResourceRecord'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              enum:
                - ExternalHostRecord
            view:
              required:
                - id
              writeOnly: true
              allOf:
                - $ref: '#/components/schemas/InlinedView'
    GenericRecord:
      type: object
      allOf:
        - $ref: '#/components/schemas/ResourceRecord'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              enum:
                - GenericRecord
            recordType:
              type: string
              description: The resource record type.
              nullable: false
              enum:
                - A
                - A6
                - AAAA
                - AFSDB
                - APL
                - CAA
                - CERT
                - DHCID
                - DNAME
                - DS
                - IPSECKEY
                - ISDN
                - KEY
                - KX
                - LOC
                - MB
                - MG
                - MINFO
                - MR
                - NS
                - NSAP
                - PTR
                - PX
                - RP
                - RT
                - SINK
                - SPF
                - SSHFP
                - TLSA
                - TXT
                - WKS
                - X25
            rdata:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The resource record data.
              nullable: false
              example: 3 1 1 ecc104c4fbb06b249d3c7a68f19cf28a60a9c6814874ad7efde451688039fe01
    HINFORecord:
      type: object
      allOf:
        - $ref: '#/components/schemas/ResourceRecord'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              enum:
                - HINFORecord
            recordType:
              type: string
              description: The resource record type.
              readOnly: true
              enum:
                - HINFO
            os:
              type: string
              description: The string describing the server operating system.
              example: Debian Linux 5.10
            cpu:
              type: string
              description: The string describing the server CPU.
              example: INTEL
    HTTPSRecord:
      type: object
      allOf:
        - $ref: '#/components/schemas/ResourceRecord'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              enum:
                - HTTPSRecord
            linkedRecord:
              nullable: false
              anyOf:
                - required:
                    - id
                  allOf:
                    - $ref: '#/components/schemas/InlinedLinkableHostRecord'
                - required:
                    - absoluteName
                  allOf:
                    - $ref: '#/components/schemas/InlinedLinkableHostRecord'
            priority:
              maximum: 65535
              minimum: 0
              type: integer
              description: 'The priority of the record relative to others. Set a value of zero to indicate AliasMode, or set a non-zero value to indicate ServiceMode. For service mode only: Configuring multiple HTTPS records with the same domain name and priority will trigger a simple load-distribution scheme inside the client. Using different values in the priority field will create a fallback configuration for the service that favours lower values first.'
              format: int32
              nullable: false
            serviceParameters:
              $ref: '#/components/schemas/SVCBServiceParameters'
            recordType:
              type: string
              description: The resource record type.
              readOnly: true
              enum:
                - HTTPS
    HostRecord:
      type: object
      allOf:
        - $ref: '#/components/schemas/ResourceRecord'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              enum:
                - HostRecord
            recordType:
              type: string
              description: The resource record type.
              readOnly: true
              enum:
                - UNKNOWN(-1)
                - A(1)
                - NS(2)
                - MD(3)
                - MF(4)
                - CNAME(5)
                - SOA(6)
                - MB(7)
                - MG(8)
                - MR(9)
                - NULL(10)
                - WKS(11)
                - PTR(12)
                - HINFO(13)
                - MINFO(14)
                - MX(15)
                - TXT(16)
                - RP(17)
                - AFSDB(18)
                - X25(19)
                - ISDN(20)
                - RT(21)
                - NSAP(22)
                - NSAP-PTR(23)
                - SIG(24)
                - KEY(25)
                - PX(26)
                - GPOS(27)
                - AAAA(28)
                - LOC(29)
                - NXT(30)
                - EID(31)
                - NIMLOC(32)
                - SRV(33)
                - ATMA(34)
                - NAPTR(35)
                - KX(36)
                - CERT(37)
                - A6(38)
                - DNAME(39)
                - SINK(40)
                - OPT(41)
                - APL(42)
                - DS(43)
                - SSHFP(44)
                - IPSECKEY(45)
                - RRSIG(46)
                - NSEC(47)
                - DNSKEY(48)
                - DHCID(49)
                - NSEC3(50)
                - NSEC3PARAM(51)
                - HIP(55)
                - SVCB(64)
                - HTTPS(65)
                - SPF(99)
                - ADDRS(248)
                - TKEY(249)
                - TSIG(250)
                - IXFR(251)
                - AXFR(252)
                - MAILB(253)
                - MAILA(254)
                - ANY(255)
                - URI(256)
                - DLV(32769)
                - WINS(65281)
                - WINSR(65282)
                - RESERVED_65534(65534)
                - TLSA(52)
                - CAA(257)
            addresses:
              minItems: 1
              type: array
              nullable: false
              writeOnly: true
              items:
                $ref: '#/components/schemas/Address'
            reverseRecord:
              type: boolean
              description: Indicates if a PTR record is created for the host record.
              nullable: false
            dependentRecords:
              type: array
              description: The list of alias records associated with the current resource records.
              writeOnly: true
              items:
                anyOf:
                  - required:
                      - name
                    allOf:
                      - $ref: '#/components/schemas/InlinedAliasRecord'
                  - required:
                      - absoluteName
                    allOf:
                      - $ref: '#/components/schemas/InlinedAliasRecord'
            views:
              type: array
              description: A list of views associated with the resource record. This field is only necessary when linking host records with an address.
              writeOnly: true
              items:
                required:
                  - id
                allOf:
                  - $ref: '#/components/schemas/InlinedView'
    IPv4Address:
      type: object
      allOf:
        - $ref: '#/components/schemas/Address'
        - type: object
          properties:
            type:
              type: string
              description: The type of IP address.
              enum:
                - IPv4Address
            state:
              type: string
              description: The state of the IP address.
              nullable: false
              enum:
                - STATIC
                - RESERVED
                - DHCP_RESERVED
                - GATEWAY
            ipGroup:
              required:
                - id
              readOnly: true
              allOf:
                - $ref: '#/components/schemas/InlinedIPv4Group'
            template:
              required:
                - id
              allOf:
                - $ref: '#/components/schemas/InlinedIPv4Template'
            circuitId:
              type: string
              description: The ID of the circuit from which the request came.
              readOnly: true
              example: "123"
            routerPortInfo:
              type: string
              description: Connected router port information for the IPv4 address.
              readOnly: true
            switchPortInfo:
              type: string
              description: Connected switch port information for the IPv4 address.
              readOnly: true
            vlanInfo:
              type: string
              description: VLAN information for the IPv4 address.
              readOnly: true
            vendorClassIdentifier:
              type: string
              description: An identifier sent by the DHCP client software running on a device.
              readOnly: true
            parameterRequestList:
              type: array
              description: The list of parameters that the device requested from the DHCP server.
              readOnly: true
              items:
                type: integer
                description: The list of parameters that the device requested from the DHCP server.
                format: int32
            clientIdentifier:
              required:
                - uid
              allOf:
                - $ref: '#/components/schemas/InlinedDHCPClientIdentifier'
    IPv4Block:
      type: object
      allOf:
        - $ref: '#/components/schemas/Prefix'
        - type: object
          properties:
            type:
              type: string
              description: The type of IP block.
              enum:
                - IPv4Block
            range:
              type: string
              description: The address range for the IPv4 block.
              nullable: false
            location:
              required:
                - id
              allOf:
                - $ref: '#/components/schemas/InlinedLocation'
            template:
              required:
                - id
              allOf:
                - $ref: '#/components/schemas/InlinedIPv4Template'
            defaultView:
              required:
                - id
              allOf:
                - $ref: '#/components/schemas/InlinedView'
            duplicateHostnamesAllowed:
              type: boolean
              description: Indicates whether duplicate hostnames are allowed in the block. If enabled, duplicate hostnames will be allowed. If not set explicitly, this value will be inherited from the parent block.
            pingBeforeAssignmentEnabled:
              type: boolean
              description: If set to true, Address Manager will ping IP addresses before assigning them. If set to false, Address Manager will assign addresses without checking their availability.
            defaultZonesInherited:
              type: boolean
              description: If set to true, the IPv4 block will inherit the parent resource's default domains configuration if possible.
              nullable: false
            defaultZones:
              type: array
              description: The default DNS zone associated with the IPv4 block.
              writeOnly: true
              items:
                required:
                  - id
                allOf:
                  - $ref: '#/components/schemas/InlinedZone'
            restrictedZonesInherited:
              type: boolean
              description: If set to true, the IPv4 block will inherit the parent resource's DNS restriction configuration if possible.
              nullable: false
            restrictedZones:
              type: array
              description: The DNS views and zones restricted to this IPv4 block.
              writeOnly: true
              items:
                $ref: '#/components/schemas/ConfigurationChild'
            lowWaterMark:
              minimum: 0
              type: integer
              description: A DHCP alert is triggered when usage falls below this percentage (when too few addresses are in use).
              format: int32
              example: 15
            highWaterMark:
              minimum: 0
              type: integer
              description: A DHCP alert is triggered when usage exceeds this percentage (when too many addresses are in use).
              format: int32
              example: 95
            reverseZoneSigned:
              type: boolean
              description: If set to true, the reverse zone associated with the IPv4 block will be signed according to the DNSSEC signing policy in reverseZoneSigningPolicy.
              nullable: false
            reverseZoneSigningPolicy:
              required:
                - id
              allOf:
                - $ref: '#/components/schemas/InlinedDNSSECSigningPolicy'
            usagePercentage:
              readOnly: true
              allOf:
                - $ref: '#/components/schemas/BlockUsageBean'
            _inheritedFields:
              type: array
              description: The fields inherited from the parent resource.
              readOnly: true
              items:
                type: string
                description: The fields inherited from the parent resource.
    IPv4DHCPRangeTemplateItem:
      type: object
      allOf:
        - $ref: '#/components/schemas/Ipv4TemplateItem'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              enum:
                - IPv4DHCPRangeTemplateItem
            rangeDefinitionFormat:
              type: string
              description: The type of method that will be used to create a DHCP range.
              nullable: false
              enum:
                - OFFSET_SIZE_FROM_START
                - OFFSET_SIZE_FROM_END
                - OFFSETS
                - OFFSET_PERCENTAGE_FROM_START
                - OFFSET_PERCENTAGE_FROM_END
            endOffset:
              maximum: 9223372036854775807
              minimum: 1
              type: integer
              description: The starting or ending position of the DHCP range.
              format: int64
              example: 10
            size:
              maximum: 9223372036854775807
              minimum: 1
              type: integer
              description: The size of the DHCP range. When the method is OFFSETS_AND_SIZE, the value is the size of the DHCP range. When the method is OFFSETS_AND_PERCENTAGE, the value is the size of the DHCP range proportional to the parent network size as a percentage.
              format: int64
              example: 20
            splitAroundStaticAddresses:
              type: boolean
              description: Indicates whether the DHCP range will automatically be split around any static, reserved, and gateway addresses in the network that are within the DHCP range.
              nullable: false
    IPv4GatewayTemplateItem:
      type: object
      allOf:
        - $ref: '#/components/schemas/Ipv4TemplateItem'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              enum:
                - IPv4GatewayTemplateItem
            name:
              type: string
              description: The name of the template item.
              readOnly: true
            rangeDefinitionFormat:
              type: string
              description: The type of method that will be used to create the gateway template.
              nullable: false
              enum:
                - OFFSET_SIZE_FROM_START
                - OFFSET_SIZE_FROM_END
    IPv4Group:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - IPv4Group
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the IPv4 group.
          nullable: false
          example: Example IPv4 Group
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        range:
          type: string
          description: The address range for the IPv4 group.
          nullable: false
      description: The IP group that the IPv4 address belongs to.
    IPv4GroupTemplateItem:
      type: object
      allOf:
        - $ref: '#/components/schemas/Ipv4TemplateItem'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              enum:
                - IPv4GroupTemplateItem
            name:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The name of the IPv4 group.
              nullable: false
              example: Example IPv4 Group
            rangeDefinitionFormat:
              type: string
              description: The counting direction for the defined IP address size from the specified offset position.
              nullable: false
              enum:
                - OFFSET_SIZE_FROM_START
                - OFFSET_SIZE_FROM_END
            size:
              maximum: 9223372036854775807
              minimum: 1
              type: integer
              description: The number of addresses defined in the IP group setting.
              format: int64
              nullable: false
    IPv4Network:
      type: object
      allOf:
        - $ref: '#/components/schemas/Prefix'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              enum:
                - IPv4Network
            range:
              type: string
              description: The address range for the IPv4 network.
              nullable: false
            location:
              required:
                - id
              allOf:
                - $ref: '#/components/schemas/InlinedLocation'
            gateway:
              type: string
              description: The gateway address for the IPv4 network.
            template:
              required:
                - id
              allOf:
                - $ref: '#/components/schemas/InlinedIPv4Template'
            routerPortInfo:
              type: string
              description: Connected router port information for the IPv4 network.
              readOnly: true
            defaultView:
              required:
                - id
              allOf:
                - $ref: '#/components/schemas/InlinedView'
            sharedNetworkTag:
              required:
                - id
              allOf:
                - $ref: '#/components/schemas/InlinedTag'
            duplicateHostnamesAllowed:
              type: boolean
              description: Indicates whether duplicate hostnames are allowed in the network. If enabled, duplicate hostnames will be allowed. If not set explicitly, this value will be inherited from the parent block.
            pingBeforeAssignmentEnabled:
              type: boolean
              description: Indicates whether Address Manager will ping IP addresses before assigning them. Unavailable addresses will not be assigned.
            defaultZonesInherited:
              type: boolean
              description: Indicates whether the IPv4 network will inherit the parent resource's default domains if configured.
              nullable: false
            defaultZones:
              type: array
              description: The default DNS zone associated with the IPv4 network.
              writeOnly: true
              items:
                required:
                  - id
                allOf:
                  - $ref: '#/components/schemas/InlinedZone'
            restrictedZonesInherited:
              type: boolean
              description: Indicates whether the IPv4 network will inherit the parent resource's restricted views and zones if configured.
              nullable: false
            restrictedZones:
              type: array
              description: The DNS views and zones restricted to this IPv4 network.
              writeOnly: true
              items:
                $ref: '#/components/schemas/ConfigurationChild'
            lowWaterMark:
              maximum: 100
              minimum: 0
              type: integer
              description: A DHCP alert is triggered when usage falls below this percentage (when too few addresses are in use).
              format: int32
              example: 15
            highWaterMark:
              maximum: 100
              minimum: 0
              type: integer
              description: A DHCP alert is triggered when usage exceeds this percentage (when too many addresses are in use).
              format: int32
              example: 95
            dynamicUpdateEnabled:
              type: boolean
              description: Indicates whether the dynamic update of DHCP reserved IPv4 addresses is enabled.
              nullable: false
            reverseZoneSigned:
              type: boolean
              description: Indicates whether the reverse zone associated with the IPv4 network will be signed according to the DNSSEC signing policy in reverseZoneSigningPolicy.
              nullable: false
            reverseZoneSigningPolicy:
              required:
                - id
              allOf:
                - $ref: '#/components/schemas/InlinedDNSSECSigningPolicy'
            usage:
              type: object
              additionalProperties:
                type: integer
                description: Values indicating the current amount of static, DHCP allocated, DHCP abandoned, DHCP reserved, reserved, gateway, and unassigned IP addresses within the network.
                format: int64
              description: Values indicating the current amount of static, DHCP allocated, DHCP abandoned, DHCP reserved, reserved, gateway, and unassigned IP addresses within the network.
              readOnly: true
              writeOnly: true
            _inheritedFields:
              type: array
              description: The fields inherited from the parent resource.
              readOnly: true
              items:
                type: string
                description: The fields inherited from the parent resource.
    IPv4ReservedRangeTemplateItem:
      type: object
      allOf:
        - $ref: '#/components/schemas/Ipv4TemplateItem'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              enum:
                - IPv4ReservedRangeTemplateItem
            rangeDefinitionFormat:
              type: string
              description: The method that will be used to create the reserved address range of the IPv4 template.
              nullable: false
              enum:
                - OFFSET_SIZE_FROM_START
                - OFFSET_SIZE_FROM_END
            size:
              maximum: 9223372036854775807
              minimum: 1
              type: integer
              description: The number of addresses in the address block.
              format: int64
              nullable: false
              example: 10
    IPv4Template:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - IPv4Template
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        templateItems:
          type: array
          description: A list of IPv4 template items.
          writeOnly: true
          items:
            $ref: '#/components/schemas/Ipv4TemplateItem'
      description: The IPv4 template assigned to the IPv4 network.
    IPv6Address:
      type: object
      allOf:
        - $ref: '#/components/schemas/Address'
        - type: object
          properties:
            type:
              type: string
              description: The type of IP address.
              enum:
                - IPv6Address
            state:
              type: string
              description: The state of the IP address.
              nullable: false
              enum:
                - DHCP_RESERVED
                - STATIC
            reservedUsing:
              type: string
              description: The type of DHCP reservation.
              enum:
                - CLIENT_DUID
                - MAC_ADDRESS
            identityAssociationIdentifier:
              type: string
              description: The Identity Association Identifier for the network interface of the client system.
              readOnly: true
              example: "00040001"
            clientIdentifier:
              required:
                - duid
              allOf:
                - $ref: '#/components/schemas/InlinedDHCPUniqueIdentifier'
            interfaceId:
              type: string
              description: The ID of the interface from which the request came.
              readOnly: true
              example: "123"
    IPv6Block:
      type: object
      allOf:
        - $ref: '#/components/schemas/Prefix'
        - type: object
          properties:
            type:
              type: string
              description: The type of IP block.
              enum:
                - IPv6Block
            range:
              type: string
              description: The address range for the IPv6 block.
              nullable: false
            location:
              required:
                - id
              allOf:
                - $ref: '#/components/schemas/InlinedLocation'
            _inheritedFields:
              type: array
              description: The fields inherited from the parent resource.
              readOnly: true
              items:
                type: string
                description: The fields inherited from the parent resource.
    IPv6Network:
      type: object
      allOf:
        - $ref: '#/components/schemas/Prefix'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              enum:
                - IPv6Network
            range:
              type: string
              description: The address range for the IPv6 network.
              nullable: false
            location:
              required:
                - id
              allOf:
                - $ref: '#/components/schemas/InlinedLocation'
            _inheritedFields:
              type: array
              description: The fields inherited from the parent resource.
              readOnly: true
              items:
                type: string
                description: The fields inherited from the parent resource.
    InlinedAbstractMacPool:
      title: AbstractMacPool
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
    InlinedAddress:
      title: Address
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of IP address.
        name:
          type: string
          description: The name of the resource.
          example: name
        address:
          type: string
          description: The IP address.
    InlinedAliasRecord:
      title: AliasRecord
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - AliasRecord
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        absoluteName:
          type: string
          description: The fully qualified domain name of the resource record.
          example: host1.example.com
    InlinedDHCPClientIdentifier:
      title: DHCPClientIdentifier
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DHCPClientIdentifier
        name:
          type: string
          description: The name of the resource.
          example: name
        uid:
          $ref: '#/components/schemas/UID'
    InlinedDHCPUniqueIdentifier:
      title: DHCPUniqueIdentifier
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DHCPUniqueIdentifier
        name:
          type: string
          description: The name of the resource.
          example: name
        duid:
          type: string
          description: The DHCP unique identifier.
          nullable: false
    InlinedDNSSECSigningPolicy:
      title: DNSSECSigningPolicy
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DNSSECSigningPolicy
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
    InlinedDevice:
      title: Device
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - Device
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the device.
          nullable: false
          example: device0
    InlinedDeviceSubtype:
      title: DeviceSubtype
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DeviceSubtype
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
    InlinedDeviceType:
      title: DeviceType
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DeviceType
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
    InlinedIPv4Group:
      title: IPv4Group
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - IPv4Group
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the IPv4 group.
          nullable: false
          example: Example IPv4 Group
    InlinedIPv4Template:
      title: IPv4Template
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - IPv4Template
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
    InlinedLinkableHostRecord:
      title: LinkableHostRecord
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        absoluteName:
          type: string
          description: The fully qualified domain name of the resource record.
          example: host1.example.com
    InlinedLocation:
      title: Location
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - Location
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
    InlinedMACAddress:
      title: MACAddress
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - MACAddress
        name:
          type: string
          description: The name of the resource.
          example: name
        address:
          type: string
          description: The MAC address.
          nullable: false
          example: 00-00-5E-00-53-AF
    InlinedResourceRecord:
      title: ResourceRecord
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ResourceRecord
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        absoluteName:
          type: string
          description: The fully qualified domain name of the resource record.
          example: host1.example.com
    InlinedTag:
      title: Tag
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - Tag
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the tag.
          nullable: false
          example: UK Office
    InlinedView:
      title: View
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - View
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the view.
          nullable: false
          example: default
    InlinedZone:
      title: Zone
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - Zone
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
    InlinedZoneTemplate:
      title: ZoneTemplate
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ZoneTemplate
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
    Ipv4TemplateItem:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        name:
          type: string
          description: The name of the template item.
        startOffset:
          maximum: 9223372036854775807
          minimum: 1
          type: integer
          description: The start offset of the IPv4 template item.
          format: int64
          nullable: false
          example: 10
      description: A list of IPv4 template items.
      discriminator:
        propertyName: type
    LinkableHostRecord:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        ttl:
          maximum: 2147483647
          minimum: 0
          type: integer
          description: The overridden TTL value of the resource record, in seconds.
          format: int64
          example: 3600
        absoluteName:
          type: string
          description: The fully qualified domain name of the resource record.
          example: host1.example.com
        comment:
          type: string
          description: The additional comments associated with the resource record.
          example: Sample comment.
        dynamic:
          type: boolean
          description: Indicates whether the resource record is dynamic.
          readOnly: true
      description: The host record to which the resource record is linked.
      discriminator:
        propertyName: type
    Location:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - Location
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        locode:
          type: string
          description: The location code showing the UN/LOCODE country and city location. The code is displayed in the hierarchical structure where the first two characters indicate the standard UN/LOCODE country code and the subsequent three characters indicate the location code.
          readOnly: true
          example: JP TYO
        code:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The location code showing the UN/LOCODE country and city location, and any appended custom child locations. The code is displayed in the hierarchical structure where the first two characters indicate the standard UN/LOCODE country code and the subsequent three characters indicate the location code. Any custom location codes are appended after the first 5 characters.
          nullable: false
          example: JP TYO BCN
        country:
          type: string
          description: The two digit country code.
          readOnly: true
          example: JP
        description:
          type: string
          description: The description of the location.
          example: Tokyo Office
        localizedName:
          type: string
          description: The localized name of the location.
          example: 東京オフィス
        subdivision:
          type: string
          description: The ISO 1-3 character alphabetic or numeric code for the administrative division of the country.
          readOnly: true
          example: "04"
        longitude:
          maximum: 2147483647
          minimum: 0
          type: number
          description: The geographical longitude coordinate, in decimal degrees format.
          format: double
          example: 139.75
        latitude:
          maximum: 2147483647
          minimum: 0
          type: number
          description: The geographical latitude coordinate, in decimal degrees format.
          format: double
          example: 35.683
      description: The location annotated to the resource.
    MACAddress:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - MACAddress
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        address:
          type: string
          description: The MAC address.
          nullable: false
          example: 00-00-5E-00-53-AF
        macPool:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedAbstractMacPool'
      description: The MAC address associated with the IP address.
    MACPool:
      type: object
      allOf:
        - $ref: '#/components/schemas/AbstractMacPool'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              enum:
                - MACPool
            instantDeploymentEnabled:
              type: boolean
              description: Indicates whether MAC pool changes are instantly deployed to associated DNS/DHCP servers.
              nullable: false
    MXRecord:
      type: object
      allOf:
        - $ref: '#/components/schemas/ResourceRecord'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              enum:
                - MXRecord
            recordType:
              type: string
              description: The resource record type.
              readOnly: true
              enum:
                - MX
            linkedRecord:
              nullable: false
              anyOf:
                - required:
                    - id
                  allOf:
                    - $ref: '#/components/schemas/InlinedLinkableHostRecord'
                - required:
                    - absoluteName
                  allOf:
                    - $ref: '#/components/schemas/InlinedLinkableHostRecord'
            priority:
              maximum: 2147483647
              minimum: 0
              type: integer
              description: The priority assigned to the mail exchanger. A lower value indicates a higher priotiry.
              format: int32
              nullable: false
    NAPTRRecord:
      type: object
      allOf:
        - $ref: '#/components/schemas/ResourceRecord'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              enum:
                - NAPTRRecord
            recordType:
              type: string
              description: The resource record type.
              readOnly: true
              enum:
                - NAPTR
            order:
              maximum: 65535
              minimum: 0
              type: integer
              description: The order in which NAPTR records are to be processed.
              format: int32
              nullable: false
              example: 50
            preference:
              maximum: 65535
              minimum: 0
              type: integer
              description: The preference assigned to the NAPTR record. The preference is referenced when NAPTR records have the same order.
              format: int32
              nullable: false
              example: 100
            service:
              type: string
              description: The service or protocol to which the NAPTR record resolves.
              example: http+I2R
            regularExpression:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The regular expression used to transform client data.
              example: '!http://(#~()##@+)!\1!i4'
            replacement:
              type: string
              description: The replacement string used to replace client data.
              example: _http._tcp.example.com.
            flags:
              type: string
              description: The control flags in the NAPTR record. Control flags influence how the replacement functions are performed when processing the record.
              example: s
    Prefix:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        range:
          type: string
          description: The address range for the IP block or network.
      description: The list of IPv4 blocks and networks of which resources within this zone are restricted to.
      discriminator:
        propertyName: type
    ResourceRecord:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ResourceRecord
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        ttl:
          maximum: 2147483647
          minimum: 0
          type: integer
          description: The overridden TTL value of the resource record, in seconds.
          format: int64
          example: 3600
        absoluteName:
          type: string
          description: The fully qualified domain name of the resource record.
          example: host1.example.com
        comment:
          type: string
          description: The additional comments associated with the resource record.
          example: Sample comment.
        dynamic:
          type: boolean
          description: Indicates whether the resource record is dynamic.
          readOnly: true
      description: The source where the resource record is moved from.
      discriminator:
        propertyName: type
    SRVRecord:
      type: object
      allOf:
        - $ref: '#/components/schemas/ResourceRecord'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              enum:
                - SRVRecord
            recordType:
              type: string
              description: The resource record type.
              readOnly: true
              enum:
                - SRV
            linkedRecord:
              nullable: false
              anyOf:
                - required:
                    - id
                  allOf:
                    - $ref: '#/components/schemas/InlinedLinkableHostRecord'
                - required:
                    - absoluteName
                  allOf:
                    - $ref: '#/components/schemas/InlinedLinkableHostRecord'
            priority:
              maximum: 2147483647
              minimum: 0
              type: integer
              description: The priority assigned to the service. A lower value indicates higher priority.
              format: int32
              nullable: false
              example: 50
            weight:
              maximum: 2147483647
              minimum: 0
              type: integer
              description: The weight assigned to the service. The weight is referenced when services have the same priority.
              format: int32
              nullable: false
              example: 50
            port:
              maximum: 65535
              minimum: 0
              type: integer
              description: The port on which the service is located.
              format: int32
              nullable: false
              example: 5432
    SVCBRecord:
      type: object
      allOf:
        - $ref: '#/components/schemas/ResourceRecord'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              enum:
                - SVCBRecord
            linkedRecord:
              nullable: false
              anyOf:
                - required:
                    - id
                  allOf:
                    - $ref: '#/components/schemas/InlinedLinkableHostRecord'
                - required:
                    - absoluteName
                  allOf:
                    - $ref: '#/components/schemas/InlinedLinkableHostRecord'
            priority:
              maximum: 65535
              minimum: 0
              type: integer
              description: 'The priority of the record relative to others. Set a value of zero to indicate AliasMode, or set a non-zero value to indicate ServiceMode. For service mode only: Configuring multiple HTTPS records with the same domain name and priority will trigger a simple load-distribution scheme inside the client. Using different values in the priority field will create a fallback configuration for the service that favours lower values first.'
              format: int32
              nullable: false
            serviceParameters:
              $ref: '#/components/schemas/SVCBServiceParameters'
            recordType:
              type: string
              description: The resource record type.
              readOnly: true
              enum:
                - SVCB
    SVCBServiceParameters:
      type: object
      properties:
        encryptedClientHello:
          type: array
          description: A base64 encoded ECH config list which includes the public key of the service endpoint, reserved for use with the experimental TLS Encrypted Client Hello.
          format: byte
          items:
            type: string
            description: A base64 encoded ECH config list which includes the public key of the service endpoint, reserved for use with the experimental TLS Encrypted Client Hello.
            format: byte
        defaultAlpnIdentifierEnabled:
          type: boolean
          description: Indicates whether a client is allowed to attempt connection using its default ALPN protocol version, if it is unable to connect using the protocol versions listed in alpnIdentifiers. If enabled, clients will be allowed to attempt connection using default protocol versions. If this parameter is disabled, the alpnIdentifiers parameter must be included.
        port:
          maximum: 65535
          minimum: 1
          type: integer
          description: The TCP or UDP port that should be used to reach the alternative endpoint.
          format: int32
        alpnIdentifiers:
          type: array
          description: A list of TLS Application-Layer Protocol Negotiation (ALPN) Protocol IDs indicating the application protocol and associated suite of protocols supported by the endpoint. Order determines importance with first listed taking priority.
          nullable: false
          items:
            type: string
            description: A list of TLS Application-Layer Protocol Negotiation (ALPN) Protocol IDs indicating the application protocol and associated suite of protocols supported by the endpoint. Order determines importance with first listed taking priority.
        ipv4AddressHints:
          type: array
          description: A list of IPv4 addresses that the client can use to reach the service if no records are cached. If the client already has the info in its cache, the cache will be used before the hint.
          nullable: false
          items:
            type: string
            description: A list of IPv4 addresses that the client can use to reach the service if no records are cached. If the client already has the info in its cache, the cache will be used before the hint.
        ipv6AddressHints:
          type: array
          description: A list of IPv6 addresses that the client can use to reach the service if no records are cached. If the client already has the info in its cache, the cache will be used before the hint.
          nullable: false
          items:
            type: string
            description: A list of IPv6 addresses that the client can use to reach the service if no records are cached. If the client already has the info in its cache, the cache will be used before the hint.
        mandatoryKeys:
          type: array
          description: A list of service parameter keys that are mandatory for the client.
          nullable: false
          items:
            type: string
            description: A list of service parameter keys that are mandatory for the client.
        privateUseValues:
          type: object
          additionalProperties:
            type: string
            description: Service parameters reserved for private use.
          description: Service parameters reserved for private use.
      description: Service parameter key/value pairs describing the alternative endpoint. These parameters are optional and only for ServiceMode.
    TXTRecord:
      type: object
      allOf:
        - $ref: '#/components/schemas/ResourceRecord'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              enum:
                - TXTRecord
            recordType:
              type: string
              description: The resource record type.
              readOnly: true
              enum:
                - TXT
            text:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The text data within the TXT resource record.
              example: printer=OfficePrinter1
    Tag:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - Tag
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the tag.
          nullable: false
          example: UK Office
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
      description: The name of the shared network tag associated with the IPv4 network.
    UID:
      type: object
      properties:
        clientIdentifier:
          type: string
      description: The DHCP client identifier.
    URIRecord:
      type: object
      allOf:
        - $ref: '#/components/schemas/ResourceRecord'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              enum:
                - URIRecord
            recordType:
              type: string
              description: The resource record type.
              readOnly: true
              enum:
                - URI
            priority:
              maximum: 65535
              minimum: 0
              type: integer
              description: The priority of the target URI in the resource record. A lower value indicates higher priority.
              format: int32
              nullable: false
            weight:
              maximum: 65535
              minimum: 0
              type: integer
              description: The relative weight for entries with the same priority.
              format: int32
              nullable: false
            target:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The URI of the target. The format of the URI must conform to the specifications set in RFC3986.
              nullable: false
    View:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - View
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the view.
          nullable: false
          example: default
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        deviceRegistrationEnabled:
          type: boolean
          description: Indicates whether DNS redirection has been enabled for use with the BlueCat Device Registration Portal.
          nullable: false
        deviceRegistrationPortalAddress:
          type: string
          description: The IPv4 address of the BlueCat Device Registration Portal.
          example: 10.10.10.10
        restrictedRanges:
          type: array
          description: The list of IPv4 blocks and networks of which resources within this zone are restricted to.
          writeOnly: true
          items:
            $ref: '#/components/schemas/Prefix'
      description: The view the resource belongs to.
    Zone:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - Zone
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        view:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/View'
        deploymentEnabled:
          type: boolean
          description: Indicates whether the zone is deployable.
          nullable: false
        dynamicUpdateEnabled:
          type: boolean
          description: Indicates whether the dynamic update feature is enabled on the zone. When enabled, any resource records that are added, updated, or deleted within the zone will be automatically deployed to the primary DNS/DHCP Server of that zone using selective deployment.
          nullable: false
        template:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedZoneTemplate'
        signed:
          type: boolean
          description: Indicates if the zone is currently signed using a DNSSEC Signing Policy.
          nullable: false
        signingPolicy:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedDNSSECSigningPolicy'
        absoluteName:
          type: string
          description: The fully qualified name of the zone.
          example: example.corp
        restrictedRanges:
          type: array
          description: The list of IPv4 blocks and networks of which resources within this view are restricted to.
          writeOnly: true
          items:
            $ref: '#/components/schemas/Prefix'
      description: The default DNS zone associated with the IPv4 block.
    ZoneTemplate:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ZoneTemplate
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
      description: Lists the name of the zone template assigned to the zone.
    byte[]:
      type: array
      description: The TSIG shared secret key, Base64 encoded.
      format: byte
      items:
        type: string
        description: The TSIG shared secret key, Base64 encoded.
        format: byte
    DatabaseBackupFile:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DatabaseBackupFile
        name:
          type: string
          description: The name of the backup file.
          readOnly: true
          example: backup_default_9.6.0-123.GA.bcn_202311282051.bak
        size:
          type: integer
          description: The size of the backup file, in bytes.
          format: int64
          readOnly: true
          example: 10193
        modificationDateTime:
          type: string
          description: The date and time that the backup file was last modified.
          format: date-time
          readOnly: true
          example: "2023-11-28T21:16:28Z"
    InputStream:
      type: object
      description: Defines the patch file data
    Block:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of IP block.
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        range:
          type: string
          description: The address range for the IP block.
          nullable: false
        location:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedLocation'
        _inheritedFields:
          type: array
          description: The fields inherited from the parent resource.
          readOnly: true
          items:
            type: string
            description: The fields inherited from the parent resource.
      description: The source address from which the block is to be moved.
      discriminator:
        propertyName: type
    DHCPv4ClientClass:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DHCPv4ClientClass
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the DHCP client class.
          nullable: false
          example: mc1
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        description:
          type: string
          description: The description for the DHCP client class.
          example: custom description
        option:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The DHCP option to match.
          example: hardware
        matchOffset:
          type: integer
          description: The offset that determines where to start the check for matching values. The match check is applied offset bytes from the beginning of the identifier. Offset is not configurable for custom match statements.
          format: int32
          example: 1
        matchLength:
          type: integer
          description: The length determines the portion of the identifier where the check for matching values will be applied. The match check is applied offset bytes from the beginning of the identifier, continuing for length bytes. Length is not configurable for custom match statements.
          format: int32
          example: 2
        matchExpression:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The data expression for custom match statements, or boolean expression for custom match if statements. The expression must match the supported syntax for the ISC's DHCP daemon.
          example: if a > b
    AddressManagerDatabase:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - AddressManagerDatabase
        state:
          type: string
          description: The current replication state of the Address Manager database.
          enum:
            - STANDALONE
            - REPLICATED
            - BREAK
            - REINDEX
        entityCount:
          type: integer
          description: The number of resources in the database.
          format: int32
          readOnly: true
          example: 100881
        size:
          type: integer
          description: The size of the database, in bytes.
          format: int64
          readOnly: true
          example: 70169135
        backupEnabled:
          type: boolean
          description: Indicates whether the database backup service is enabled.
          nullable: false
        lastBackupDateTime:
          type: string
          description: The timestamp of the last database backup.
          format: date-time
          readOnly: true
          example: "2022-09-09T15:16:50Z"
        activeSessionCount:
          type: integer
          description: The number of users logged in to Address Manager.
          format: int32
          readOnly: true
          example: 1
        replicationEnabled:
          type: boolean
          description: Indicates whether database replication is enabled.
          nullable: false
        replicationRole:
          type: string
          description: The current role of the server in database replication.
          readOnly: true
          enum:
            - STANDALONE
            - PRIMARY
            - STANDBY
            - REMOVED_STANDBY
        replicationStatus:
          type: string
          description: The current status of the database replication service.
          readOnly: true
          enum:
            - ENROLLING
            - FAILINGOVER
            - BREAKING
            - RESETTING
            - INITIALIZING
            - REPLICATING
            - NOT_REPLICATING
            - PENDING
            - UNAVAILABLE
            - REMOVED_STANDBY
            - INITIALIZING_FAILOVER
        compressionEnabled:
          type: boolean
          description: Indicates whether compression is enabled with database replication.
        latencyWarningThreshold:
          type: string
          description: The warning threshold latency of replication, in ISO-8601 format. When the latency between the Primary and Standby servers reaches the configured threshold, Address Manager logs a warning in syslog and sends an event to warn you that the database of the Standby server is behind the Primary server by the configured threshold or greater.
          example: PT1H
        latencyCriticalThreshold:
          type: string
          description: The critical threshold latency of replication, in ISO-8601 format. When the latency between the Primary and Standby servers reaches the configured threshold, Address Manager logs a warning in syslog and sends an event to warn you that the database of the Standby server is behind the Primary server by the configured threshold or greater.
          example: P1D
        servers:
          minItems: 1
          type: array
          description: A list of Address Manager servers configured as part of the database replication cluster.
          writeOnly: true
          items:
            $ref: '#/components/schemas/AddressManagerServer'
    AddressManagerServer:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - AddressManagerServer
        name:
          type: string
          description: The name of the Standby Address Manager server.
          readOnly: true
          example: dns2
        address:
          type: string
          description: The IP address of the Address Manager server.
          nullable: false
          example: 10.10.10.10
        state:
          type: string
          description: The current replication state of the Address Manager server.
          enum:
            - STANDALONE
            - PRIMARY
            - STANDBY
        replicationStatus:
          type: string
          description: The current status of the database replication service.
          readOnly: true
          enum:
            - DISABLED
            - ENROLLING
            - FAILINGOVER
            - BREAKING
            - RESETTING
            - ENABLED
            - INITIALIZING
            - REPLICATING
            - NOTREPLICATING
            - PENDING
            - UNAVAILABLE
            - REMOVEDSTANDBY
            - INITIALIZINGFAILOVER
        enrollmentPercentComplete:
          type: integer
          description: The completion status of database replication enrollment.
          format: int32
          readOnly: true
          example: 75
        replicationLatency:
          type: string
          description: The replication latency between the Standby and Primary server.
          readOnly: true
          example: PTS60
      description: The IP address of the Address Manager server. By default, the value is the IP address of a standalone Address Manager server. If you are running Address Manager in replication, the value is the IP address of the Primary or Standby Address Manager server.
    AddressManagerDatabaseBean:
      type: object
      allOf:
        - $ref: '#/components/schemas/AddressManagerDatabase'
        - type: object
          properties:
            state:
              type: string
              description: The current replication state of the Address Manager database.
              enum:
                - STANDALONE
                - REPLICATED
                - BREAK
                - REINDEX
            entityCount:
              type: integer
              description: The number of resources in the database.
              format: int32
              readOnly: true
              example: 100881
            size:
              type: integer
              description: The size of the database, in bytes.
              format: int64
              readOnly: true
              example: 70169135
            backupEnabled:
              type: boolean
              description: Indicates whether the database backup service is enabled.
              nullable: false
            lastBackupDateTime:
              type: string
              description: The timestamp of the last database backup.
              format: date-time
              readOnly: true
              example: "2022-09-09T15:16:50Z"
            activeSessionCount:
              type: integer
              description: The number of users logged in to Address Manager.
              format: int32
              readOnly: true
              example: 1
            replicationEnabled:
              type: boolean
              description: Indicates whether database replication is enabled.
              nullable: false
            replicationRole:
              type: string
              description: The current role of the server in database replication.
              readOnly: true
              enum:
                - STANDALONE
                - PRIMARY
                - STANDBY
                - REMOVED_STANDBY
            replicationStatus:
              type: string
              description: The current status of the database replication service.
              readOnly: true
              enum:
                - ENROLLING
                - FAILINGOVER
                - BREAKING
                - RESETTING
                - INITIALIZING
                - REPLICATING
                - NOT_REPLICATING
                - PENDING
                - UNAVAILABLE
                - REMOVED_STANDBY
                - INITIALIZING_FAILOVER
            compressionEnabled:
              type: boolean
              description: Indicates whether compression is enabled with database replication.
            latencyWarningThreshold:
              type: string
              description: The warning threshold latency of replication, in ISO-8601 format. When the latency between the Primary and Standby servers reaches the configured threshold, Address Manager logs a warning in syslog and sends an event to warn you that the database of the Standby server is behind the Primary server by the configured threshold or greater.
              example: PT1H
            latencyCriticalThreshold:
              type: string
              description: The critical threshold latency of replication, in ISO-8601 format. When the latency between the Primary and Standby servers reaches the configured threshold, Address Manager logs a warning in syslog and sends an event to warn you that the database of the Standby server is behind the Primary server by the configured threshold or greater.
              example: P1D
            servers:
              minItems: 1
              type: array
              description: A list of Address Manager servers configured as part of the database replication cluster.
              writeOnly: true
              items:
                $ref: '#/components/schemas/AddressManagerServer'
    DHCPv4CustomClientOptionDefinition:
      type: object
      allOf:
        - $ref: '#/components/schemas/DeploymentOptionDefinition'
        - type: object
          properties:
            type:
              type: string
              description: The type of deployment option definition.
              enum:
                - DHCPv4CustomClientOptionDefinition
            code:
              maximum: 255
              minimum: 2
              type: integer
              description: The DHCP custom option code number.
              format: int32
              nullable: false
            displayName:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The display name for the DHCP custom option.
              nullable: false
              example: Custom OP 1
            description:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The description for the DHCP custom option.
              nullable: false
              example: 'Custom option #1'
            valueFormat:
              type: object
              nullable: false
    DHCPVendorOptionDefinition:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of deployment option definition.
          enum:
            - DHCPVendorOptionDefinition
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the deployment option definition.
          nullable: false
          example: allow-recursion
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        assignableTypes:
          type: array
          description: A list of resources that the deployment option definition can be assigned to.
          readOnly: true
          items:
            type: string
            description: A list of resources that the deployment option definition can be assigned to.
            enum:
              - ACL
              - AbstractKeySigningKey
              - AbstractNetworkInterface
              - AbstractServer
              - AbstractZoneSigningKey
              - AccessRight
              - AddressManager
              - AddressManagerAuthenticator
              - AddressManagerDatabase
              - AddressManagerServer
              - AdministrativeAccessRight
              - AliasRecord
              - AnycastService
              - AuditDataSettings
              - Authenticator
              - Configuration
              - DHCPActivityService
              - DHCPAlertSettings
              - DHCPClientIdentifier
              - DHCPClientOption
              - DHCPDeploymentRole
              - DHCPForwardZone
              - DHCPReverseZone
              - DHCPServiceOption
              - DHCPStatisticsService
              - DHCPUniqueIdentifier
              - DHCPVendorOption
              - DHCPVendorOptionDefinition
              - DHCPZone
              - DHCPZoneGroup
              - DHCPv4ClientClass
              - DHCPv4ClientOption
              - DHCPv4ClientOptionDefinition
              - DHCPv4CustomClientOptionDefinition
              - DHCPv4Lease
              - DHCPv4RawOption
              - DHCPv4ServiceOption
              - DHCPv4ServiceOptionDefinition
              - DHCPv4Subclass
              - DHCPv6ClientOption
              - DHCPv6ClientOptionDefinition
              - DHCPv6Lease
              - DHCPv6RawOption
              - DHCPv6ServiceOption
              - DHCPv6ServiceOptionDefinition
              - DNS64
              - DNSActivityService
              - DNSDeploymentRole
              - DNSOption
              - DNSOptionDefinition
              - DNSRawOption
              - DNSResolverService
              - DNSSECSigningPolicy
              - DNSStatisticsService
              - Dashboard
              - DatabaseBackupFile
              - DatabaseBackupSchedule
              - DatabaseLog
              - DefaultClientOption
              - DefaultDHCPOption
              - DefaultDHCPServiceOption
              - DefaultDNSOption
              - DenyMACPool
              - DeploymentRole
              - DeploymentRoleMove
              - DeploymentSchedule
              - Device
              - DeviceSubtype
              - DeviceType
              - DifferentialDeployment
              - DiscoveredARPEntry
              - DiscoveredHost
              - DiscoveredInterface
              - DiscoveredMACAddress
              - DiscoveredNetwork
              - DiscoveredRouter
              - DiscoveredSwitch
              - DiscoveredVLAN
              - ENUMNumberZone
              - ENUMZone
              - EntrustKeySigningKey
              - EntrustZoneSigningKey
              - Event
              - ExternalHostRecord
              - ExternalHostsZone
              - FailoverAPIService
              - FirewallService
              - FullDeployment
              - GatewayService
              - GenericRecord
              - GlobalSettings
              - HAServer
              - HINFORecord
              - HSMConfiguration
              - HSMKeySigningKey
              - HSMServer
              - HSMZoneSigningKey
              - HTTPSRecord
              - HostRecord
              - IPServerInterface
              - IPv4Address
              - IPv4AddressImport
              - IPv4AddressMove
              - IPv4Block
              - IPv4BlockImport
              - IPv4BlockMerge
              - IPv4BlockMove
              - IPv4BlockSplit
              - IPv4DHCPRange
              - IPv4DHCPRangeMerge
              - IPv4DHCPRangeTemplateItem
              - IPv4GatewayTemplateItem
              - IPv4Group
              - IPv4GroupTemplateItem
              - IPv4HiddenTemplateItemChild
              - IPv4Network
              - IPv4NetworkImport
              - IPv4NetworkMerge
              - IPv4NetworkMove
              - IPv4NetworkSplit
              - IPv4Prefix
              - IPv4Range
              - IPv4ReconciliationPolicy
              - IPv4ReservedRangeTemplateItem
              - IPv4Template
              - IPv4TemplateApplication
              - IPv6Address
              - IPv6AddressImport
              - IPv6AddressMove
              - IPv6Block
              - IPv6BlockImport
              - IPv6BlockMove
              - IPv6DHCPRange
              - IPv6Network
              - IPv6NetworkImport
              - IPv6NetworkMove
              - IPv6Prefix
              - IPv6ReconciliationPolicy
              - IPv6Template
              - IPv6TemplateItem
              - ImportLog
              - InterfacesService
              - InternalRootZone
              - KerberosAuthenticator
              - KerberosRealm
              - KerberosServicePrincipal
              - KeyDistributionCenter
              - KeySigningKey
              - LDAPAuthenticator
              - LicenseService
              - Location
              - LocationGroup
              - Log
              - LogLevelSettings
              - LoginPolicySettings
              - MACAddress
              - MACPool
              - MXRecord
              - MonitoringSettings
              - NAPTRRecord
              - NTPService
              - NamingPolicy
              - NamingPolicyConnectorValue
              - NamingPolicyIncrementalValue
              - NamingPolicyIntegerValue
              - NamingPolicyRequiredValue
              - NamingPolicyRestriction
              - NamingPolicyTextValue
              - NetworkInterface
              - NotificationGroup
              - OAuthAuthorizationServer
              - Operation
              - PasswordPolicySettings
              - Preference
              - PublishedInterface
              - QuickDeployment
              - RADIUSAuthenticator
              - RawOption
              - Report
              - ReportSchedule
              - Resource
              - ResourceImport
              - ResourceRecord
              - ResourceRecordImport
              - ResourceRecordMove
              - ResponsePolicy
              - ResponsePolicyItem
              - ResponsePolicyItemImport
              - ResponsePolicyZone
              - ResponsePolicyZoneFeedCategory
              - SAMLIdentityProvider
              - SAMLServiceProviderSettings
              - SNMPService
              - SRVRecord
              - SSHService
              - SSOEnforcementSettings
              - SVCBRecord
              - SelectiveDeployment
              - Server
              - ServerFile
              - ServerGroup
              - ServerGroupInterface
              - ServerInterface
              - ServerLog
              - ServerPatch
              - ServerPatchApplication
              - ServiceOption
              - SigningKey
              - StartOfAuthority
              - StartOfAuthorityDefinition
              - SyslogService
              - SystemLog
              - SystemSettings
              - TACACSPlusAuthenticator
              - TFTPDeploymentRole
              - TFTPFile
              - TFTPFolder
              - TFTPGroup
              - TFTPNode
              - TSIGKey
              - TXTRecord
              - Tag
              - TagGroup
              - Task
              - Transaction
              - TrustRelationship
              - URIRecord
              - User
              - UserDefinedFieldDefinition
              - UserDefinedLinkDefinition
              - UserGroup
              - UserSession
              - ValidationDeployment
              - VendorProfile
              - View
              - VirtualInterface
              - WebAccessSettings
              - Widget
              - WorkflowRequest
              - X509Authenticator
              - Zone
              - ZoneImport
              - ZoneMove
              - ZoneSigningKey
              - ZoneTemplate
              - ZoneTemplateApplication
        code:
          maximum: 254
          minimum: 1
          type: integer
          description: The ID of the vendor profile option definition.
          format: int32
          nullable: false
        displayName:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The display name for the vendor profile option definition.
          nullable: false
          example: Vendor OP 1
        description:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The description of the information passed by the option definition.
          nullable: false
          example: 'Vendor option #1'
        valueFormat:
          type: object
          nullable: false
      description: The vendor option definition resource.
    DHCPv4ClientOptionDefinition:
      type: object
      allOf:
        - $ref: '#/components/schemas/DeploymentOptionDefinition'
        - type: object
          properties:
            type:
              type: string
              description: The type of deployment option definition.
              enum:
                - DHCPv4ClientOptionDefinition
    DHCPv4ServiceOptionDefinition:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of deployment option definition.
          enum:
            - DHCPv4ServiceOptionDefinition
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the deployment option definition.
          nullable: false
          example: allow-recursion
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        assignableTypes:
          type: array
          description: A list of resources that the deployment option definition can be assigned to.
          readOnly: true
          items:
            type: string
            description: A list of resources that the deployment option definition can be assigned to.
            enum:
              - ACL
              - AbstractKeySigningKey
              - AbstractNetworkInterface
              - AbstractServer
              - AbstractZoneSigningKey
              - AccessRight
              - AddressManager
              - AddressManagerAuthenticator
              - AddressManagerDatabase
              - AddressManagerServer
              - AdministrativeAccessRight
              - AliasRecord
              - AnycastService
              - AuditDataSettings
              - Authenticator
              - Configuration
              - DHCPActivityService
              - DHCPAlertSettings
              - DHCPClientIdentifier
              - DHCPClientOption
              - DHCPDeploymentRole
              - DHCPForwardZone
              - DHCPReverseZone
              - DHCPServiceOption
              - DHCPStatisticsService
              - DHCPUniqueIdentifier
              - DHCPVendorOption
              - DHCPVendorOptionDefinition
              - DHCPZone
              - DHCPZoneGroup
              - DHCPv4ClientClass
              - DHCPv4ClientOption
              - DHCPv4ClientOptionDefinition
              - DHCPv4CustomClientOptionDefinition
              - DHCPv4Lease
              - DHCPv4RawOption
              - DHCPv4ServiceOption
              - DHCPv4ServiceOptionDefinition
              - DHCPv4Subclass
              - DHCPv6ClientOption
              - DHCPv6ClientOptionDefinition
              - DHCPv6Lease
              - DHCPv6RawOption
              - DHCPv6ServiceOption
              - DHCPv6ServiceOptionDefinition
              - DNS64
              - DNSActivityService
              - DNSDeploymentRole
              - DNSOption
              - DNSOptionDefinition
              - DNSRawOption
              - DNSResolverService
              - DNSSECSigningPolicy
              - DNSStatisticsService
              - Dashboard
              - DatabaseBackupFile
              - DatabaseBackupSchedule
              - DatabaseLog
              - DefaultClientOption
              - DefaultDHCPOption
              - DefaultDHCPServiceOption
              - DefaultDNSOption
              - DenyMACPool
              - DeploymentRole
              - DeploymentRoleMove
              - DeploymentSchedule
              - Device
              - DeviceSubtype
              - DeviceType
              - DifferentialDeployment
              - DiscoveredARPEntry
              - DiscoveredHost
              - DiscoveredInterface
              - DiscoveredMACAddress
              - DiscoveredNetwork
              - DiscoveredRouter
              - DiscoveredSwitch
              - DiscoveredVLAN
              - ENUMNumberZone
              - ENUMZone
              - EntrustKeySigningKey
              - EntrustZoneSigningKey
              - Event
              - ExternalHostRecord
              - ExternalHostsZone
              - FailoverAPIService
              - FirewallService
              - FullDeployment
              - GatewayService
              - GenericRecord
              - GlobalSettings
              - HAServer
              - HINFORecord
              - HSMConfiguration
              - HSMKeySigningKey
              - HSMServer
              - HSMZoneSigningKey
              - HTTPSRecord
              - HostRecord
              - IPServerInterface
              - IPv4Address
              - IPv4AddressImport
              - IPv4AddressMove
              - IPv4Block
              - IPv4BlockImport
              - IPv4BlockMerge
              - IPv4BlockMove
              - IPv4BlockSplit
              - IPv4DHCPRange
              - IPv4DHCPRangeMerge
              - IPv4DHCPRangeTemplateItem
              - IPv4GatewayTemplateItem
              - IPv4Group
              - IPv4GroupTemplateItem
              - IPv4HiddenTemplateItemChild
              - IPv4Network
              - IPv4NetworkImport
              - IPv4NetworkMerge
              - IPv4NetworkMove
              - IPv4NetworkSplit
              - IPv4Prefix
              - IPv4Range
              - IPv4ReconciliationPolicy
              - IPv4ReservedRangeTemplateItem
              - IPv4Template
              - IPv4TemplateApplication
              - IPv6Address
              - IPv6AddressImport
              - IPv6AddressMove
              - IPv6Block
              - IPv6BlockImport
              - IPv6BlockMove
              - IPv6DHCPRange
              - IPv6Network
              - IPv6NetworkImport
              - IPv6NetworkMove
              - IPv6Prefix
              - IPv6ReconciliationPolicy
              - IPv6Template
              - IPv6TemplateItem
              - ImportLog
              - InterfacesService
              - InternalRootZone
              - KerberosAuthenticator
              - KerberosRealm
              - KerberosServicePrincipal
              - KeyDistributionCenter
              - KeySigningKey
              - LDAPAuthenticator
              - LicenseService
              - Location
              - LocationGroup
              - Log
              - LogLevelSettings
              - LoginPolicySettings
              - MACAddress
              - MACPool
              - MXRecord
              - MonitoringSettings
              - NAPTRRecord
              - NTPService
              - NamingPolicy
              - NamingPolicyConnectorValue
              - NamingPolicyIncrementalValue
              - NamingPolicyIntegerValue
              - NamingPolicyRequiredValue
              - NamingPolicyRestriction
              - NamingPolicyTextValue
              - NetworkInterface
              - NotificationGroup
              - OAuthAuthorizationServer
              - Operation
              - PasswordPolicySettings
              - Preference
              - PublishedInterface
              - QuickDeployment
              - RADIUSAuthenticator
              - RawOption
              - Report
              - ReportSchedule
              - Resource
              - ResourceImport
              - ResourceRecord
              - ResourceRecordImport
              - ResourceRecordMove
              - ResponsePolicy
              - ResponsePolicyItem
              - ResponsePolicyItemImport
              - ResponsePolicyZone
              - ResponsePolicyZoneFeedCategory
              - SAMLIdentityProvider
              - SAMLServiceProviderSettings
              - SNMPService
              - SRVRecord
              - SSHService
              - SSOEnforcementSettings
              - SVCBRecord
              - SelectiveDeployment
              - Server
              - ServerFile
              - ServerGroup
              - ServerGroupInterface
              - ServerInterface
              - ServerLog
              - ServerPatch
              - ServerPatchApplication
              - ServiceOption
              - SigningKey
              - StartOfAuthority
              - StartOfAuthorityDefinition
              - SyslogService
              - SystemLog
              - SystemSettings
              - TACACSPlusAuthenticator
              - TFTPDeploymentRole
              - TFTPFile
              - TFTPFolder
              - TFTPGroup
              - TFTPNode
              - TSIGKey
              - TXTRecord
              - Tag
              - TagGroup
              - Task
              - Transaction
              - TrustRelationship
              - URIRecord
              - User
              - UserDefinedFieldDefinition
              - UserDefinedLinkDefinition
              - UserGroup
              - UserSession
              - ValidationDeployment
              - VendorProfile
              - View
              - VirtualInterface
              - WebAccessSettings
              - Widget
              - WorkflowRequest
              - X509Authenticator
              - Zone
              - ZoneImport
              - ZoneMove
              - ZoneSigningKey
              - ZoneTemplate
              - ZoneTemplateApplication
      description: The deployment option definition.
    DHCPv6ClientOptionDefinition:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of deployment option definition.
          enum:
            - DHCPv6ClientOptionDefinition
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the deployment option definition.
          nullable: false
          example: allow-recursion
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        assignableTypes:
          type: array
          description: A list of resources that the deployment option definition can be assigned to.
          readOnly: true
          items:
            type: string
            description: A list of resources that the deployment option definition can be assigned to.
            enum:
              - ACL
              - AbstractKeySigningKey
              - AbstractNetworkInterface
              - AbstractServer
              - AbstractZoneSigningKey
              - AccessRight
              - AddressManager
              - AddressManagerAuthenticator
              - AddressManagerDatabase
              - AddressManagerServer
              - AdministrativeAccessRight
              - AliasRecord
              - AnycastService
              - AuditDataSettings
              - Authenticator
              - Configuration
              - DHCPActivityService
              - DHCPAlertSettings
              - DHCPClientIdentifier
              - DHCPClientOption
              - DHCPDeploymentRole
              - DHCPForwardZone
              - DHCPReverseZone
              - DHCPServiceOption
              - DHCPStatisticsService
              - DHCPUniqueIdentifier
              - DHCPVendorOption
              - DHCPVendorOptionDefinition
              - DHCPZone
              - DHCPZoneGroup
              - DHCPv4ClientClass
              - DHCPv4ClientOption
              - DHCPv4ClientOptionDefinition
              - DHCPv4CustomClientOptionDefinition
              - DHCPv4Lease
              - DHCPv4RawOption
              - DHCPv4ServiceOption
              - DHCPv4ServiceOptionDefinition
              - DHCPv4Subclass
              - DHCPv6ClientOption
              - DHCPv6ClientOptionDefinition
              - DHCPv6Lease
              - DHCPv6RawOption
              - DHCPv6ServiceOption
              - DHCPv6ServiceOptionDefinition
              - DNS64
              - DNSActivityService
              - DNSDeploymentRole
              - DNSOption
              - DNSOptionDefinition
              - DNSRawOption
              - DNSResolverService
              - DNSSECSigningPolicy
              - DNSStatisticsService
              - Dashboard
              - DatabaseBackupFile
              - DatabaseBackupSchedule
              - DatabaseLog
              - DefaultClientOption
              - DefaultDHCPOption
              - DefaultDHCPServiceOption
              - DefaultDNSOption
              - DenyMACPool
              - DeploymentRole
              - DeploymentRoleMove
              - DeploymentSchedule
              - Device
              - DeviceSubtype
              - DeviceType
              - DifferentialDeployment
              - DiscoveredARPEntry
              - DiscoveredHost
              - DiscoveredInterface
              - DiscoveredMACAddress
              - DiscoveredNetwork
              - DiscoveredRouter
              - DiscoveredSwitch
              - DiscoveredVLAN
              - ENUMNumberZone
              - ENUMZone
              - EntrustKeySigningKey
              - EntrustZoneSigningKey
              - Event
              - ExternalHostRecord
              - ExternalHostsZone
              - FailoverAPIService
              - FirewallService
              - FullDeployment
              - GatewayService
              - GenericRecord
              - GlobalSettings
              - HAServer
              - HINFORecord
              - HSMConfiguration
              - HSMKeySigningKey
              - HSMServer
              - HSMZoneSigningKey
              - HTTPSRecord
              - HostRecord
              - IPServerInterface
              - IPv4Address
              - IPv4AddressImport
              - IPv4AddressMove
              - IPv4Block
              - IPv4BlockImport
              - IPv4BlockMerge
              - IPv4BlockMove
              - IPv4BlockSplit
              - IPv4DHCPRange
              - IPv4DHCPRangeMerge
              - IPv4DHCPRangeTemplateItem
              - IPv4GatewayTemplateItem
              - IPv4Group
              - IPv4GroupTemplateItem
              - IPv4HiddenTemplateItemChild
              - IPv4Network
              - IPv4NetworkImport
              - IPv4NetworkMerge
              - IPv4NetworkMove
              - IPv4NetworkSplit
              - IPv4Prefix
              - IPv4Range
              - IPv4ReconciliationPolicy
              - IPv4ReservedRangeTemplateItem
              - IPv4Template
              - IPv4TemplateApplication
              - IPv6Address
              - IPv6AddressImport
              - IPv6AddressMove
              - IPv6Block
              - IPv6BlockImport
              - IPv6BlockMove
              - IPv6DHCPRange
              - IPv6Network
              - IPv6NetworkImport
              - IPv6NetworkMove
              - IPv6Prefix
              - IPv6ReconciliationPolicy
              - IPv6Template
              - IPv6TemplateItem
              - ImportLog
              - InterfacesService
              - InternalRootZone
              - KerberosAuthenticator
              - KerberosRealm
              - KerberosServicePrincipal
              - KeyDistributionCenter
              - KeySigningKey
              - LDAPAuthenticator
              - LicenseService
              - Location
              - LocationGroup
              - Log
              - LogLevelSettings
              - LoginPolicySettings
              - MACAddress
              - MACPool
              - MXRecord
              - MonitoringSettings
              - NAPTRRecord
              - NTPService
              - NamingPolicy
              - NamingPolicyConnectorValue
              - NamingPolicyIncrementalValue
              - NamingPolicyIntegerValue
              - NamingPolicyRequiredValue
              - NamingPolicyRestriction
              - NamingPolicyTextValue
              - NetworkInterface
              - NotificationGroup
              - OAuthAuthorizationServer
              - Operation
              - PasswordPolicySettings
              - Preference
              - PublishedInterface
              - QuickDeployment
              - RADIUSAuthenticator
              - RawOption
              - Report
              - ReportSchedule
              - Resource
              - ResourceImport
              - ResourceRecord
              - ResourceRecordImport
              - ResourceRecordMove
              - ResponsePolicy
              - ResponsePolicyItem
              - ResponsePolicyItemImport
              - ResponsePolicyZone
              - ResponsePolicyZoneFeedCategory
              - SAMLIdentityProvider
              - SAMLServiceProviderSettings
              - SNMPService
              - SRVRecord
              - SSHService
              - SSOEnforcementSettings
              - SVCBRecord
              - SelectiveDeployment
              - Server
              - ServerFile
              - ServerGroup
              - ServerGroupInterface
              - ServerInterface
              - ServerLog
              - ServerPatch
              - ServerPatchApplication
              - ServiceOption
              - SigningKey
              - StartOfAuthority
              - StartOfAuthorityDefinition
              - SyslogService
              - SystemLog
              - SystemSettings
              - TACACSPlusAuthenticator
              - TFTPDeploymentRole
              - TFTPFile
              - TFTPFolder
              - TFTPGroup
              - TFTPNode
              - TSIGKey
              - TXTRecord
              - Tag
              - TagGroup
              - Task
              - Transaction
              - TrustRelationship
              - URIRecord
              - User
              - UserDefinedFieldDefinition
              - UserDefinedLinkDefinition
              - UserGroup
              - UserSession
              - ValidationDeployment
              - VendorProfile
              - View
              - VirtualInterface
              - WebAccessSettings
              - Widget
              - WorkflowRequest
              - X509Authenticator
              - Zone
              - ZoneImport
              - ZoneMove
              - ZoneSigningKey
              - ZoneTemplate
              - ZoneTemplateApplication
      description: The deployment option definition.
    DHCPv6ServiceOptionDefinition:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of deployment option definition.
          enum:
            - DHCPv6ServiceOptionDefinition
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the deployment option definition.
          nullable: false
          example: allow-recursion
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        assignableTypes:
          type: array
          description: A list of resources that the deployment option definition can be assigned to.
          readOnly: true
          items:
            type: string
            description: A list of resources that the deployment option definition can be assigned to.
            enum:
              - ACL
              - AbstractKeySigningKey
              - AbstractNetworkInterface
              - AbstractServer
              - AbstractZoneSigningKey
              - AccessRight
              - AddressManager
              - AddressManagerAuthenticator
              - AddressManagerDatabase
              - AddressManagerServer
              - AdministrativeAccessRight
              - AliasRecord
              - AnycastService
              - AuditDataSettings
              - Authenticator
              - Configuration
              - DHCPActivityService
              - DHCPAlertSettings
              - DHCPClientIdentifier
              - DHCPClientOption
              - DHCPDeploymentRole
              - DHCPForwardZone
              - DHCPReverseZone
              - DHCPServiceOption
              - DHCPStatisticsService
              - DHCPUniqueIdentifier
              - DHCPVendorOption
              - DHCPVendorOptionDefinition
              - DHCPZone
              - DHCPZoneGroup
              - DHCPv4ClientClass
              - DHCPv4ClientOption
              - DHCPv4ClientOptionDefinition
              - DHCPv4CustomClientOptionDefinition
              - DHCPv4Lease
              - DHCPv4RawOption
              - DHCPv4ServiceOption
              - DHCPv4ServiceOptionDefinition
              - DHCPv4Subclass
              - DHCPv6ClientOption
              - DHCPv6ClientOptionDefinition
              - DHCPv6Lease
              - DHCPv6RawOption
              - DHCPv6ServiceOption
              - DHCPv6ServiceOptionDefinition
              - DNS64
              - DNSActivityService
              - DNSDeploymentRole
              - DNSOption
              - DNSOptionDefinition
              - DNSRawOption
              - DNSResolverService
              - DNSSECSigningPolicy
              - DNSStatisticsService
              - Dashboard
              - DatabaseBackupFile
              - DatabaseBackupSchedule
              - DatabaseLog
              - DefaultClientOption
              - DefaultDHCPOption
              - DefaultDHCPServiceOption
              - DefaultDNSOption
              - DenyMACPool
              - DeploymentRole
              - DeploymentRoleMove
              - DeploymentSchedule
              - Device
              - DeviceSubtype
              - DeviceType
              - DifferentialDeployment
              - DiscoveredARPEntry
              - DiscoveredHost
              - DiscoveredInterface
              - DiscoveredMACAddress
              - DiscoveredNetwork
              - DiscoveredRouter
              - DiscoveredSwitch
              - DiscoveredVLAN
              - ENUMNumberZone
              - ENUMZone
              - EntrustKeySigningKey
              - EntrustZoneSigningKey
              - Event
              - ExternalHostRecord
              - ExternalHostsZone
              - FailoverAPIService
              - FirewallService
              - FullDeployment
              - GatewayService
              - GenericRecord
              - GlobalSettings
              - HAServer
              - HINFORecord
              - HSMConfiguration
              - HSMKeySigningKey
              - HSMServer
              - HSMZoneSigningKey
              - HTTPSRecord
              - HostRecord
              - IPServerInterface
              - IPv4Address
              - IPv4AddressImport
              - IPv4AddressMove
              - IPv4Block
              - IPv4BlockImport
              - IPv4BlockMerge
              - IPv4BlockMove
              - IPv4BlockSplit
              - IPv4DHCPRange
              - IPv4DHCPRangeMerge
              - IPv4DHCPRangeTemplateItem
              - IPv4GatewayTemplateItem
              - IPv4Group
              - IPv4GroupTemplateItem
              - IPv4HiddenTemplateItemChild
              - IPv4Network
              - IPv4NetworkImport
              - IPv4NetworkMerge
              - IPv4NetworkMove
              - IPv4NetworkSplit
              - IPv4Prefix
              - IPv4Range
              - IPv4ReconciliationPolicy
              - IPv4ReservedRangeTemplateItem
              - IPv4Template
              - IPv4TemplateApplication
              - IPv6Address
              - IPv6AddressImport
              - IPv6AddressMove
              - IPv6Block
              - IPv6BlockImport
              - IPv6BlockMove
              - IPv6DHCPRange
              - IPv6Network
              - IPv6NetworkImport
              - IPv6NetworkMove
              - IPv6Prefix
              - IPv6ReconciliationPolicy
              - IPv6Template
              - IPv6TemplateItem
              - ImportLog
              - InterfacesService
              - InternalRootZone
              - KerberosAuthenticator
              - KerberosRealm
              - KerberosServicePrincipal
              - KeyDistributionCenter
              - KeySigningKey
              - LDAPAuthenticator
              - LicenseService
              - Location
              - LocationGroup
              - Log
              - LogLevelSettings
              - LoginPolicySettings
              - MACAddress
              - MACPool
              - MXRecord
              - MonitoringSettings
              - NAPTRRecord
              - NTPService
              - NamingPolicy
              - NamingPolicyConnectorValue
              - NamingPolicyIncrementalValue
              - NamingPolicyIntegerValue
              - NamingPolicyRequiredValue
              - NamingPolicyRestriction
              - NamingPolicyTextValue
              - NetworkInterface
              - NotificationGroup
              - OAuthAuthorizationServer
              - Operation
              - PasswordPolicySettings
              - Preference
              - PublishedInterface
              - QuickDeployment
              - RADIUSAuthenticator
              - RawOption
              - Report
              - ReportSchedule
              - Resource
              - ResourceImport
              - ResourceRecord
              - ResourceRecordImport
              - ResourceRecordMove
              - ResponsePolicy
              - ResponsePolicyItem
              - ResponsePolicyItemImport
              - ResponsePolicyZone
              - ResponsePolicyZoneFeedCategory
              - SAMLIdentityProvider
              - SAMLServiceProviderSettings
              - SNMPService
              - SRVRecord
              - SSHService
              - SSOEnforcementSettings
              - SVCBRecord
              - SelectiveDeployment
              - Server
              - ServerFile
              - ServerGroup
              - ServerGroupInterface
              - ServerInterface
              - ServerLog
              - ServerPatch
              - ServerPatchApplication
              - ServiceOption
              - SigningKey
              - StartOfAuthority
              - StartOfAuthorityDefinition
              - SyslogService
              - SystemLog
              - SystemSettings
              - TACACSPlusAuthenticator
              - TFTPDeploymentRole
              - TFTPFile
              - TFTPFolder
              - TFTPGroup
              - TFTPNode
              - TSIGKey
              - TXTRecord
              - Tag
              - TagGroup
              - Task
              - Transaction
              - TrustRelationship
              - URIRecord
              - User
              - UserDefinedFieldDefinition
              - UserDefinedLinkDefinition
              - UserGroup
              - UserSession
              - ValidationDeployment
              - VendorProfile
              - View
              - VirtualInterface
              - WebAccessSettings
              - Widget
              - WorkflowRequest
              - X509Authenticator
              - Zone
              - ZoneImport
              - ZoneMove
              - ZoneSigningKey
              - ZoneTemplate
              - ZoneTemplateApplication
      description: The deployment option definition.
    DNSOptionDefinition:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of deployment option definition.
          enum:
            - DNSOptionDefinition
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the deployment option definition.
          nullable: false
          example: allow-recursion
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        assignableTypes:
          type: array
          description: A list of resources that the deployment option definition can be assigned to.
          readOnly: true
          items:
            type: string
            description: A list of resources that the deployment option definition can be assigned to.
            enum:
              - ACL
              - AbstractKeySigningKey
              - AbstractNetworkInterface
              - AbstractServer
              - AbstractZoneSigningKey
              - AccessRight
              - AddressManager
              - AddressManagerAuthenticator
              - AddressManagerDatabase
              - AddressManagerServer
              - AdministrativeAccessRight
              - AliasRecord
              - AnycastService
              - AuditDataSettings
              - Authenticator
              - Configuration
              - DHCPActivityService
              - DHCPAlertSettings
              - DHCPClientIdentifier
              - DHCPClientOption
              - DHCPDeploymentRole
              - DHCPForwardZone
              - DHCPReverseZone
              - DHCPServiceOption
              - DHCPStatisticsService
              - DHCPUniqueIdentifier
              - DHCPVendorOption
              - DHCPVendorOptionDefinition
              - DHCPZone
              - DHCPZoneGroup
              - DHCPv4ClientClass
              - DHCPv4ClientOption
              - DHCPv4ClientOptionDefinition
              - DHCPv4CustomClientOptionDefinition
              - DHCPv4Lease
              - DHCPv4RawOption
              - DHCPv4ServiceOption
              - DHCPv4ServiceOptionDefinition
              - DHCPv4Subclass
              - DHCPv6ClientOption
              - DHCPv6ClientOptionDefinition
              - DHCPv6Lease
              - DHCPv6RawOption
              - DHCPv6ServiceOption
              - DHCPv6ServiceOptionDefinition
              - DNS64
              - DNSActivityService
              - DNSDeploymentRole
              - DNSOption
              - DNSOptionDefinition
              - DNSRawOption
              - DNSResolverService
              - DNSSECSigningPolicy
              - DNSStatisticsService
              - Dashboard
              - DatabaseBackupFile
              - DatabaseBackupSchedule
              - DatabaseLog
              - DefaultClientOption
              - DefaultDHCPOption
              - DefaultDHCPServiceOption
              - DefaultDNSOption
              - DenyMACPool
              - DeploymentRole
              - DeploymentRoleMove
              - DeploymentSchedule
              - Device
              - DeviceSubtype
              - DeviceType
              - DifferentialDeployment
              - DiscoveredARPEntry
              - DiscoveredHost
              - DiscoveredInterface
              - DiscoveredMACAddress
              - DiscoveredNetwork
              - DiscoveredRouter
              - DiscoveredSwitch
              - DiscoveredVLAN
              - ENUMNumberZone
              - ENUMZone
              - EntrustKeySigningKey
              - EntrustZoneSigningKey
              - Event
              - ExternalHostRecord
              - ExternalHostsZone
              - FailoverAPIService
              - FirewallService
              - FullDeployment
              - GatewayService
              - GenericRecord
              - GlobalSettings
              - HAServer
              - HINFORecord
              - HSMConfiguration
              - HSMKeySigningKey
              - HSMServer
              - HSMZoneSigningKey
              - HTTPSRecord
              - HostRecord
              - IPServerInterface
              - IPv4Address
              - IPv4AddressImport
              - IPv4AddressMove
              - IPv4Block
              - IPv4BlockImport
              - IPv4BlockMerge
              - IPv4BlockMove
              - IPv4BlockSplit
              - IPv4DHCPRange
              - IPv4DHCPRangeMerge
              - IPv4DHCPRangeTemplateItem
              - IPv4GatewayTemplateItem
              - IPv4Group
              - IPv4GroupTemplateItem
              - IPv4HiddenTemplateItemChild
              - IPv4Network
              - IPv4NetworkImport
              - IPv4NetworkMerge
              - IPv4NetworkMove
              - IPv4NetworkSplit
              - IPv4Prefix
              - IPv4Range
              - IPv4ReconciliationPolicy
              - IPv4ReservedRangeTemplateItem
              - IPv4Template
              - IPv4TemplateApplication
              - IPv6Address
              - IPv6AddressImport
              - IPv6AddressMove
              - IPv6Block
              - IPv6BlockImport
              - IPv6BlockMove
              - IPv6DHCPRange
              - IPv6Network
              - IPv6NetworkImport
              - IPv6NetworkMove
              - IPv6Prefix
              - IPv6ReconciliationPolicy
              - IPv6Template
              - IPv6TemplateItem
              - ImportLog
              - InterfacesService
              - InternalRootZone
              - KerberosAuthenticator
              - KerberosRealm
              - KerberosServicePrincipal
              - KeyDistributionCenter
              - KeySigningKey
              - LDAPAuthenticator
              - LicenseService
              - Location
              - LocationGroup
              - Log
              - LogLevelSettings
              - LoginPolicySettings
              - MACAddress
              - MACPool
              - MXRecord
              - MonitoringSettings
              - NAPTRRecord
              - NTPService
              - NamingPolicy
              - NamingPolicyConnectorValue
              - NamingPolicyIncrementalValue
              - NamingPolicyIntegerValue
              - NamingPolicyRequiredValue
              - NamingPolicyRestriction
              - NamingPolicyTextValue
              - NetworkInterface
              - NotificationGroup
              - OAuthAuthorizationServer
              - Operation
              - PasswordPolicySettings
              - Preference
              - PublishedInterface
              - QuickDeployment
              - RADIUSAuthenticator
              - RawOption
              - Report
              - ReportSchedule
              - Resource
              - ResourceImport
              - ResourceRecord
              - ResourceRecordImport
              - ResourceRecordMove
              - ResponsePolicy
              - ResponsePolicyItem
              - ResponsePolicyItemImport
              - ResponsePolicyZone
              - ResponsePolicyZoneFeedCategory
              - SAMLIdentityProvider
              - SAMLServiceProviderSettings
              - SNMPService
              - SRVRecord
              - SSHService
              - SSOEnforcementSettings
              - SVCBRecord
              - SelectiveDeployment
              - Server
              - ServerFile
              - ServerGroup
              - ServerGroupInterface
              - ServerInterface
              - ServerLog
              - ServerPatch
              - ServerPatchApplication
              - ServiceOption
              - SigningKey
              - StartOfAuthority
              - StartOfAuthorityDefinition
              - SyslogService
              - SystemLog
              - SystemSettings
              - TACACSPlusAuthenticator
              - TFTPDeploymentRole
              - TFTPFile
              - TFTPFolder
              - TFTPGroup
              - TFTPNode
              - TSIGKey
              - TXTRecord
              - Tag
              - TagGroup
              - Task
              - Transaction
              - TrustRelationship
              - URIRecord
              - User
              - UserDefinedFieldDefinition
              - UserDefinedLinkDefinition
              - UserGroup
              - UserSession
              - ValidationDeployment
              - VendorProfile
              - View
              - VirtualInterface
              - WebAccessSettings
              - Widget
              - WorkflowRequest
              - X509Authenticator
              - Zone
              - ZoneImport
              - ZoneMove
              - ZoneSigningKey
              - ZoneTemplate
              - ZoneTemplateApplication
      description: The configuration parameters and values of the DNS option definition.
    DeploymentOptionDefinition:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of deployment option definition.
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the deployment option definition.
          nullable: false
          example: allow-recursion
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        assignableTypes:
          type: array
          description: A list of resources that the deployment option definition can be assigned to.
          readOnly: true
          items:
            type: string
            description: A list of resources that the deployment option definition can be assigned to.
            enum:
              - ACL
              - AbstractKeySigningKey
              - AbstractNetworkInterface
              - AbstractServer
              - AbstractZoneSigningKey
              - AccessRight
              - AddressManager
              - AddressManagerAuthenticator
              - AddressManagerDatabase
              - AddressManagerServer
              - AdministrativeAccessRight
              - AliasRecord
              - AnycastService
              - AuditDataSettings
              - Authenticator
              - Configuration
              - DHCPActivityService
              - DHCPAlertSettings
              - DHCPClientIdentifier
              - DHCPClientOption
              - DHCPDeploymentRole
              - DHCPForwardZone
              - DHCPReverseZone
              - DHCPServiceOption
              - DHCPStatisticsService
              - DHCPUniqueIdentifier
              - DHCPVendorOption
              - DHCPVendorOptionDefinition
              - DHCPZone
              - DHCPZoneGroup
              - DHCPv4ClientClass
              - DHCPv4ClientOption
              - DHCPv4ClientOptionDefinition
              - DHCPv4CustomClientOptionDefinition
              - DHCPv4Lease
              - DHCPv4RawOption
              - DHCPv4ServiceOption
              - DHCPv4ServiceOptionDefinition
              - DHCPv4Subclass
              - DHCPv6ClientOption
              - DHCPv6ClientOptionDefinition
              - DHCPv6Lease
              - DHCPv6RawOption
              - DHCPv6ServiceOption
              - DHCPv6ServiceOptionDefinition
              - DNS64
              - DNSActivityService
              - DNSDeploymentRole
              - DNSOption
              - DNSOptionDefinition
              - DNSRawOption
              - DNSResolverService
              - DNSSECSigningPolicy
              - DNSStatisticsService
              - Dashboard
              - DatabaseBackupFile
              - DatabaseBackupSchedule
              - DatabaseLog
              - DefaultClientOption
              - DefaultDHCPOption
              - DefaultDHCPServiceOption
              - DefaultDNSOption
              - DenyMACPool
              - DeploymentRole
              - DeploymentRoleMove
              - DeploymentSchedule
              - Device
              - DeviceSubtype
              - DeviceType
              - DifferentialDeployment
              - DiscoveredARPEntry
              - DiscoveredHost
              - DiscoveredInterface
              - DiscoveredMACAddress
              - DiscoveredNetwork
              - DiscoveredRouter
              - DiscoveredSwitch
              - DiscoveredVLAN
              - ENUMNumberZone
              - ENUMZone
              - EntrustKeySigningKey
              - EntrustZoneSigningKey
              - Event
              - ExternalHostRecord
              - ExternalHostsZone
              - FailoverAPIService
              - FirewallService
              - FullDeployment
              - GatewayService
              - GenericRecord
              - GlobalSettings
              - HAServer
              - HINFORecord
              - HSMConfiguration
              - HSMKeySigningKey
              - HSMServer
              - HSMZoneSigningKey
              - HTTPSRecord
              - HostRecord
              - IPServerInterface
              - IPv4Address
              - IPv4AddressImport
              - IPv4AddressMove
              - IPv4Block
              - IPv4BlockImport
              - IPv4BlockMerge
              - IPv4BlockMove
              - IPv4BlockSplit
              - IPv4DHCPRange
              - IPv4DHCPRangeMerge
              - IPv4DHCPRangeTemplateItem
              - IPv4GatewayTemplateItem
              - IPv4Group
              - IPv4GroupTemplateItem
              - IPv4HiddenTemplateItemChild
              - IPv4Network
              - IPv4NetworkImport
              - IPv4NetworkMerge
              - IPv4NetworkMove
              - IPv4NetworkSplit
              - IPv4Prefix
              - IPv4Range
              - IPv4ReconciliationPolicy
              - IPv4ReservedRangeTemplateItem
              - IPv4Template
              - IPv4TemplateApplication
              - IPv6Address
              - IPv6AddressImport
              - IPv6AddressMove
              - IPv6Block
              - IPv6BlockImport
              - IPv6BlockMove
              - IPv6DHCPRange
              - IPv6Network
              - IPv6NetworkImport
              - IPv6NetworkMove
              - IPv6Prefix
              - IPv6ReconciliationPolicy
              - IPv6Template
              - IPv6TemplateItem
              - ImportLog
              - InterfacesService
              - InternalRootZone
              - KerberosAuthenticator
              - KerberosRealm
              - KerberosServicePrincipal
              - KeyDistributionCenter
              - KeySigningKey
              - LDAPAuthenticator
              - LicenseService
              - Location
              - LocationGroup
              - Log
              - LogLevelSettings
              - LoginPolicySettings
              - MACAddress
              - MACPool
              - MXRecord
              - MonitoringSettings
              - NAPTRRecord
              - NTPService
              - NamingPolicy
              - NamingPolicyConnectorValue
              - NamingPolicyIncrementalValue
              - NamingPolicyIntegerValue
              - NamingPolicyRequiredValue
              - NamingPolicyRestriction
              - NamingPolicyTextValue
              - NetworkInterface
              - NotificationGroup
              - OAuthAuthorizationServer
              - Operation
              - PasswordPolicySettings
              - Preference
              - PublishedInterface
              - QuickDeployment
              - RADIUSAuthenticator
              - RawOption
              - Report
              - ReportSchedule
              - Resource
              - ResourceImport
              - ResourceRecord
              - ResourceRecordImport
              - ResourceRecordMove
              - ResponsePolicy
              - ResponsePolicyItem
              - ResponsePolicyItemImport
              - ResponsePolicyZone
              - ResponsePolicyZoneFeedCategory
              - SAMLIdentityProvider
              - SAMLServiceProviderSettings
              - SNMPService
              - SRVRecord
              - SSHService
              - SSOEnforcementSettings
              - SVCBRecord
              - SelectiveDeployment
              - Server
              - ServerFile
              - ServerGroup
              - ServerGroupInterface
              - ServerInterface
              - ServerLog
              - ServerPatch
              - ServerPatchApplication
              - ServiceOption
              - SigningKey
              - StartOfAuthority
              - StartOfAuthorityDefinition
              - SyslogService
              - SystemLog
              - SystemSettings
              - TACACSPlusAuthenticator
              - TFTPDeploymentRole
              - TFTPFile
              - TFTPFolder
              - TFTPGroup
              - TFTPNode
              - TSIGKey
              - TXTRecord
              - Tag
              - TagGroup
              - Task
              - Transaction
              - TrustRelationship
              - URIRecord
              - User
              - UserDefinedFieldDefinition
              - UserDefinedLinkDefinition
              - UserGroup
              - UserSession
              - ValidationDeployment
              - VendorProfile
              - View
              - VirtualInterface
              - WebAccessSettings
              - Widget
              - WorkflowRequest
              - X509Authenticator
              - Zone
              - ZoneImport
              - ZoneMove
              - ZoneSigningKey
              - ZoneTemplate
              - ZoneTemplateApplication
      description: The deployment option definition.
      discriminator:
        propertyName: type
    StartOfAuthorityDefinition:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of deployment option definition.
          enum:
            - StartOfAuthorityDefinition
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the deployment option definition.
          nullable: false
          example: allow-recursion
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        assignableTypes:
          type: array
          description: A list of resources that the deployment option definition can be assigned to.
          readOnly: true
          items:
            type: string
            description: A list of resources that the deployment option definition can be assigned to.
            enum:
              - ACL
              - AbstractKeySigningKey
              - AbstractNetworkInterface
              - AbstractServer
              - AbstractZoneSigningKey
              - AccessRight
              - AddressManager
              - AddressManagerAuthenticator
              - AddressManagerDatabase
              - AddressManagerServer
              - AdministrativeAccessRight
              - AliasRecord
              - AnycastService
              - AuditDataSettings
              - Authenticator
              - Configuration
              - DHCPActivityService
              - DHCPAlertSettings
              - DHCPClientIdentifier
              - DHCPClientOption
              - DHCPDeploymentRole
              - DHCPForwardZone
              - DHCPReverseZone
              - DHCPServiceOption
              - DHCPStatisticsService
              - DHCPUniqueIdentifier
              - DHCPVendorOption
              - DHCPVendorOptionDefinition
              - DHCPZone
              - DHCPZoneGroup
              - DHCPv4ClientClass
              - DHCPv4ClientOption
              - DHCPv4ClientOptionDefinition
              - DHCPv4CustomClientOptionDefinition
              - DHCPv4Lease
              - DHCPv4RawOption
              - DHCPv4ServiceOption
              - DHCPv4ServiceOptionDefinition
              - DHCPv4Subclass
              - DHCPv6ClientOption
              - DHCPv6ClientOptionDefinition
              - DHCPv6Lease
              - DHCPv6RawOption
              - DHCPv6ServiceOption
              - DHCPv6ServiceOptionDefinition
              - DNS64
              - DNSActivityService
              - DNSDeploymentRole
              - DNSOption
              - DNSOptionDefinition
              - DNSRawOption
              - DNSResolverService
              - DNSSECSigningPolicy
              - DNSStatisticsService
              - Dashboard
              - DatabaseBackupFile
              - DatabaseBackupSchedule
              - DatabaseLog
              - DefaultClientOption
              - DefaultDHCPOption
              - DefaultDHCPServiceOption
              - DefaultDNSOption
              - DenyMACPool
              - DeploymentRole
              - DeploymentRoleMove
              - DeploymentSchedule
              - Device
              - DeviceSubtype
              - DeviceType
              - DifferentialDeployment
              - DiscoveredARPEntry
              - DiscoveredHost
              - DiscoveredInterface
              - DiscoveredMACAddress
              - DiscoveredNetwork
              - DiscoveredRouter
              - DiscoveredSwitch
              - DiscoveredVLAN
              - ENUMNumberZone
              - ENUMZone
              - EntrustKeySigningKey
              - EntrustZoneSigningKey
              - Event
              - ExternalHostRecord
              - ExternalHostsZone
              - FailoverAPIService
              - FirewallService
              - FullDeployment
              - GatewayService
              - GenericRecord
              - GlobalSettings
              - HAServer
              - HINFORecord
              - HSMConfiguration
              - HSMKeySigningKey
              - HSMServer
              - HSMZoneSigningKey
              - HTTPSRecord
              - HostRecord
              - IPServerInterface
              - IPv4Address
              - IPv4AddressImport
              - IPv4AddressMove
              - IPv4Block
              - IPv4BlockImport
              - IPv4BlockMerge
              - IPv4BlockMove
              - IPv4BlockSplit
              - IPv4DHCPRange
              - IPv4DHCPRangeMerge
              - IPv4DHCPRangeTemplateItem
              - IPv4GatewayTemplateItem
              - IPv4Group
              - IPv4GroupTemplateItem
              - IPv4HiddenTemplateItemChild
              - IPv4Network
              - IPv4NetworkImport
              - IPv4NetworkMerge
              - IPv4NetworkMove
              - IPv4NetworkSplit
              - IPv4Prefix
              - IPv4Range
              - IPv4ReconciliationPolicy
              - IPv4ReservedRangeTemplateItem
              - IPv4Template
              - IPv4TemplateApplication
              - IPv6Address
              - IPv6AddressImport
              - IPv6AddressMove
              - IPv6Block
              - IPv6BlockImport
              - IPv6BlockMove
              - IPv6DHCPRange
              - IPv6Network
              - IPv6NetworkImport
              - IPv6NetworkMove
              - IPv6Prefix
              - IPv6ReconciliationPolicy
              - IPv6Template
              - IPv6TemplateItem
              - ImportLog
              - InterfacesService
              - InternalRootZone
              - KerberosAuthenticator
              - KerberosRealm
              - KerberosServicePrincipal
              - KeyDistributionCenter
              - KeySigningKey
              - LDAPAuthenticator
              - LicenseService
              - Location
              - LocationGroup
              - Log
              - LogLevelSettings
              - LoginPolicySettings
              - MACAddress
              - MACPool
              - MXRecord
              - MonitoringSettings
              - NAPTRRecord
              - NTPService
              - NamingPolicy
              - NamingPolicyConnectorValue
              - NamingPolicyIncrementalValue
              - NamingPolicyIntegerValue
              - NamingPolicyRequiredValue
              - NamingPolicyRestriction
              - NamingPolicyTextValue
              - NetworkInterface
              - NotificationGroup
              - OAuthAuthorizationServer
              - Operation
              - PasswordPolicySettings
              - Preference
              - PublishedInterface
              - QuickDeployment
              - RADIUSAuthenticator
              - RawOption
              - Report
              - ReportSchedule
              - Resource
              - ResourceImport
              - ResourceRecord
              - ResourceRecordImport
              - ResourceRecordMove
              - ResponsePolicy
              - ResponsePolicyItem
              - ResponsePolicyItemImport
              - ResponsePolicyZone
              - ResponsePolicyZoneFeedCategory
              - SAMLIdentityProvider
              - SAMLServiceProviderSettings
              - SNMPService
              - SRVRecord
              - SSHService
              - SSOEnforcementSettings
              - SVCBRecord
              - SelectiveDeployment
              - Server
              - ServerFile
              - ServerGroup
              - ServerGroupInterface
              - ServerInterface
              - ServerLog
              - ServerPatch
              - ServerPatchApplication
              - ServiceOption
              - SigningKey
              - StartOfAuthority
              - StartOfAuthorityDefinition
              - SyslogService
              - SystemLog
              - SystemSettings
              - TACACSPlusAuthenticator
              - TFTPDeploymentRole
              - TFTPFile
              - TFTPFolder
              - TFTPGroup
              - TFTPNode
              - TSIGKey
              - TXTRecord
              - Tag
              - TagGroup
              - Task
              - Transaction
              - TrustRelationship
              - URIRecord
              - User
              - UserDefinedFieldDefinition
              - UserDefinedLinkDefinition
              - UserGroup
              - UserSession
              - ValidationDeployment
              - VendorProfile
              - View
              - VirtualInterface
              - WebAccessSettings
              - Widget
              - WorkflowRequest
              - X509Authenticator
              - Zone
              - ZoneImport
              - ZoneMove
              - ZoneSigningKey
              - ZoneTemplate
              - ZoneTemplateApplication
      description: Details of the Start of Authority record.
    AbstractServer:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The server scope resource type.
          enum:
            - AbstractServer
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        profile:
          type: string
          description: The profile of the server.
          enum:
            - ADONIS_XMB4
            - ADONIS_XMB3
            - OTHER_DNS_SERVER
            - DNS_DHCP_SERVER_20
            - DNS_DHCP_SERVER_45
            - DNS_DHCP_SERVER_60
            - DNS_DHCP_SERVER_100
            - DNS_DHCP_SERVER_100_D
            - LTM
            - GTM
            - DNS_DHCP_GEN4_7000
            - DNS_DHCP_GEN4_5000
            - DNS_DHCP_GEN4_4000
            - DNS_DHCP_GEN4_2000
            - CLOUD_DNS_SERVER
            - BLUECAT_ENTERPRISE
            - BLUECAT_CORE
            - BLUECAT_BRANCH_H
            - BLUECAT_BRANCH_L
            - LEGACY
        state:
          type: string
          description: The current state of the server, indicating whether the server is enabled or disabled.
          enum:
            - ENABLED
            - DISABLED
            - FAILOVER
            - RESET_CONTROL
            - REPAIR
        username:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The username used to authenticate with the server.
          example: admin
        password:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The password used to authenticate with the server.
          example: Passw0rd!
        serverGroup:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/ServerGroup'
        connected:
          type: boolean
          description: Indicates whether the server is connected to Address Manager.
        monitoringEnabled:
          type: boolean
          description: Indicates whether monitoring service is enabled on the server.
        snmp:
          $ref: '#/components/schemas/SNMP'
        interfaces:
          minItems: 1
          type: array
          description: The list of network interfaces of the server.
          writeOnly: true
          items:
            $ref: '#/components/schemas/NetworkInterface'
        location:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedLocation'
        statistics:
          type: object
          additionalProperties:
            type: object
          description: Displays statistics information collected from the monitoring service.
          readOnly: true
        overrideConfigurationLevelDhcpValidation:
          type: boolean
          description: Indicates whether DHCP deployment validation settings configured at the configuration level are overridden at the server level.
          nullable: false
        overrideConfigurationLevelDnsValidation:
          type: boolean
          description: Indicates whether DNS deployment validation settings configured at the configuration level are overridden at the server level.
          nullable: false
        dhcpConfigurationValidationEnabled:
          type: boolean
          description: Indicates whether the syntax of the dhcpd.conf file is validated prior to deployment from Address Manager.
          nullable: false
        dnsConfigurationValidationEnabled:
          type: boolean
          description: Indicates whether the syntax of the named.conf file is validated prior to deployment from Address Manager.
          nullable: false
        dnsZoneValidationEnabled:
          type: boolean
          description: Indicates whether the syntax of each DNS zone file is validated prior to deployment from Address Manager.
          nullable: false
        checkIntegrityValidation:
          type: string
          description: The method for which the syntax checks of the DNS zone file is checked.
          nullable: false
          enum:
            - NONE
            - LOCAL
            - LOCAL_SIBLING
            - FULL
            - FULL_SIBLING
        checkMxCnameValidation:
          type: string
          description: Checks if MX records point to a CNAME record rather than an A or AAAA, and determines how Address Manager handles conditions found by the check.
          nullable: false
          enum:
            - IGNORE
            - WARN
            - FAIL
        checkMxValidation:
          type: string
          description: Checks if MX records point to an IP address rather than an A or AAAA, and determines how Address Manager handles conditions found by the check.
          nullable: false
          enum:
            - IGNORE
            - WARN
            - FAIL
        checkNamesValidation:
          type: string
          description: Checks the names within the DNS zone files and determines how Address Manager handles conditions found by the check.
          nullable: false
          enum:
            - IGNORE
            - WARN
            - FAIL
        checkNsValidation:
          type: string
          description: Checks if NS records point to an IP address rather than an A or AAAA, and determines how Address Manager handles conditions found by the check.
          nullable: false
          enum:
            - IGNORE
            - WARN
            - FAIL
        checkSrvCnameValidation:
          type: string
          description: Checks if SRV records point to a CNAME record rather than an A or AAAA, and determines how Address Manager handles conditions found by the check.
          nullable: false
          enum:
            - IGNORE
            - WARN
            - FAIL
        checkWildcardValidation:
          type: string
          description: Checks for wildcards in zone names that don't appear as the last segment of a zone name, and determines how Address Manager handles conditions found by the check.
          nullable: false
          enum:
            - IGNORE
            - WARN
        privateAddress:
          type: string
          description: The private IP address of the server.
          example: 10.10.10.10
        encryptedNotificationsEnabled:
          type: boolean
          description: Indicates whether notifications are encrypted between Address Manager and the DNS/DHCP Server
          writeOnly: true
        managementUrl:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: Specifies the management URL for an F5 LTM or GTM server.
          example: 10.10.10.10
        selfIpAddress:
          type: string
          description: Specifies the self URL for an F5 GTM server.
          example: 10.10.10.10
        haBackboneEnabled:
          type: boolean
          description: Indicates whether a backbone is enabled between nodes of a high-availability pair.
          nullable: false
        haPingAddress:
          type: string
          description: Sets the ping address of the high-availability pair.
          example: 10.10.10.10
        dhcpServicePrincipal:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedKerberosServicePrincipal'
        dnsServicePrincipal:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedKerberosServicePrincipal'
        serviceProviderAccount:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The hosting service account name or number associated with the BlueCat Cloud DNS subscription.
        serviceProviderApiKey:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The hosting service API key associated with the BlueCat Cloud DNS subscription.
        _inheritedFields:
          type: array
          description: The fields inherited from the parent resource.
          readOnly: true
          items:
            type: string
            description: The fields inherited from the parent resource.
      description: A list of servers that are part of the server group.
      discriminator:
        propertyName: type
    DHCPVendorOption:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DHCPVendorOption
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        serverScope:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedServerScope'
        value:
          type: object
        code:
          type: number
          description: The vendor option code.
          readOnly: true
        definition:
          required:
            - id
          nullable: false
          allOf:
            - $ref: '#/components/schemas/InlinedDHCPVendorOptionDefinition'
    DHCPv4ClientOption:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DHCPv4ClientOption
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        serverScope:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedServerScope'
        value:
          type: object
          nullable: false
        code:
          maximum: 255
          minimum: 1
          type: number
          description: The code for the DHCP option (per RFC 2132).
          example: 61
        definition:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedDeploymentOptionDefinition'
    DHCPv4RawOption:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DHCPv4RawOption
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        serverScope:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedServerScope'
        value:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The deployment option value.
          nullable: false
    DHCPv4ServiceOption:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DHCPv4ServiceOption
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        serverScope:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedServerScope'
        value:
          type: object
          nullable: false
        code:
          maximum: 255
          minimum: 1
          type: number
          description: The code for the DHCP option (per RFC 2132).
          example: 61
        definition:
          $ref: '#/components/schemas/DHCPv4ServiceOptionDefinition'
    DHCPv6ClientOption:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DHCPv6ClientOption
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        serverScope:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedServerScope'
        value:
          type: object
          nullable: false
        code:
          maximum: 255
          minimum: 1
          type: number
          description: The code for the DHCP option (per RFC 2132).
          example: 61
        definition:
          $ref: '#/components/schemas/DHCPv6ClientOptionDefinition'
    DHCPv6RawOption:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DHCPv6RawOption
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        serverScope:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedServerScope'
        value:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The deployment option value.
          nullable: false
    DHCPv6ServiceOption:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DHCPv6ServiceOption
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        serverScope:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedServerScope'
        value:
          type: object
          nullable: false
        code:
          maximum: 255
          minimum: 1
          type: number
          description: The code for the DHCP option (per RFC 2132).
          example: 61
        definition:
          $ref: '#/components/schemas/DHCPv6ServiceOptionDefinition'
    DNSOption:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DNSOption
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        serverScope:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedServerScope'
        value:
          type: object
          nullable: false
        code:
          maximum: 255
          minimum: 1
          type: number
          description: The code for the DNS option definition.
        definition:
          $ref: '#/components/schemas/DNSOptionDefinition'
    DNSRawOption:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DNSRawOption
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        serverScope:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedServerScope'
        value:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The deployment option value.
          nullable: false
    DeploymentOption:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        serverScope:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedServerScope'
      discriminator:
        propertyName: type
    HAServer:
      type: object
      allOf:
        - $ref: '#/components/schemas/ServerScope'
        - type: object
          properties:
            type:
              type: string
              description: The server scope resource type.
              enum:
                - HAServer
            name:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The name of the resource.
              nullable: false
              example: name
            profile:
              type: string
              description: The profile of the server.
              readOnly: true
              enum:
                - ADONIS_XMB4
                - ADONIS_XMB3
                - OTHER_DNS_SERVER
                - DNS_DHCP_SERVER_20
                - DNS_DHCP_SERVER_45
                - DNS_DHCP_SERVER_60
                - DNS_DHCP_SERVER_100
                - DNS_DHCP_SERVER_100_D
                - LTM
                - GTM
                - DNS_DHCP_GEN4_7000
                - DNS_DHCP_GEN4_5000
                - DNS_DHCP_GEN4_4000
                - DNS_DHCP_GEN4_2000
                - CLOUD_DNS_SERVER
                - BLUECAT_ENTERPRISE
                - BLUECAT_CORE
                - BLUECAT_BRANCH_H
                - BLUECAT_BRANCH_L
                - LEGACY
            state:
              type: string
              description: The current state of the server, indicating whether the server is enabled or disabled.
              enum:
                - ENABLED
                - DISABLED
                - FAILOVER
                - RESET_CONTROL
                - REPAIR
            username:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The username used to authenticate with the server.
              example: admin
            password:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The password used to authenticate with the server.
              example: Passw0rd!
            serverGroup:
              required:
                - id
              allOf:
                - $ref: '#/components/schemas/InlinedServerGroup'
            connected:
              type: boolean
              description: Indicates whether the server is connected to Address Manager.
            monitoringEnabled:
              type: boolean
              description: Indicates whether monitoring service is enabled on the server.
            snmp:
              $ref: '#/components/schemas/SNMP'
            interfaces:
              minItems: 1
              type: array
              description: The network interfaces of the xHA pair.
              nullable: false
              writeOnly: true
              items:
                anyOf:
                  - required:
                      - servicesIpv4Address
                    allOf:
                      - $ref: '#/components/schemas/InlinedNetworkInterface'
                  - required:
                      - servicesIpv6Address
                    allOf:
                      - $ref: '#/components/schemas/InlinedNetworkInterface'
            location:
              required:
                - id
              allOf:
                - $ref: '#/components/schemas/InlinedLocation'
            statistics:
              type: object
              additionalProperties:
                type: object
              description: Displays statistics information collected from the monitoring service.
              readOnly: true
            overrideConfigurationLevelDhcpValidation:
              type: boolean
              description: Indicates whether DHCP deployment validation settings configured at the configuration level are overridden at the server level.
              nullable: false
            overrideConfigurationLevelDnsValidation:
              type: boolean
              description: Indicates whether DNS deployment validation settings configured at the configuration level are overridden at the server level.
              nullable: false
            dhcpConfigurationValidationEnabled:
              type: boolean
              description: Indicates whether the syntax of the dhcpd.conf file is validated prior to deployment from Address Manager.
              nullable: false
            dnsConfigurationValidationEnabled:
              type: boolean
              description: Indicates whether the syntax of the named.conf file is validated prior to deployment from Address Manager.
              nullable: false
            dnsZoneValidationEnabled:
              type: boolean
              description: Indicates whether the syntax of each DNS zone file is validated prior to deployment from Address Manager.
              nullable: false
            checkIntegrityValidation:
              type: string
              description: The method for which the syntax checks of the DNS zone file is checked.
              nullable: false
              enum:
                - NONE
                - LOCAL
                - LOCAL_SIBLING
                - FULL
                - FULL_SIBLING
            checkMxCnameValidation:
              type: string
              description: Checks if MX records point to a CNAME record rather than an A or AAAA, and determines how Address Manager handles conditions found by the check.
              nullable: false
              enum:
                - IGNORE
                - WARN
                - FAIL
            checkMxValidation:
              type: string
              description: Checks if MX records point to an IP address rather than an A or AAAA, and determines how Address Manager handles conditions found by the check.
              nullable: false
              enum:
                - IGNORE
                - WARN
                - FAIL
            checkNamesValidation:
              type: string
              description: Checks the names within the DNS zone files and determines how Address Manager handles conditions found by the check.
              nullable: false
              enum:
                - IGNORE
                - WARN
                - FAIL
            checkNsValidation:
              type: string
              description: Checks if NS records point to an IP address rather than an A or AAAA, and determines how Address Manager handles conditions found by the check.
              nullable: false
              enum:
                - IGNORE
                - WARN
                - FAIL
            checkSrvCnameValidation:
              type: string
              description: Checks if SRV records point to a CNAME record rather than an A or AAAA, and determines how Address Manager handles conditions found by the check.
              nullable: false
              enum:
                - IGNORE
                - WARN
                - FAIL
            checkWildcardValidation:
              type: string
              description: Checks for wildcards in zone names that don't appear as the last segment of a zone name, and determines how Address Manager handles conditions found by the check.
              nullable: false
              enum:
                - IGNORE
                - WARN
            privateAddress:
              type: string
              description: The private IP address of the server.
              example: 10.10.10.10
            encryptedNotificationsEnabled:
              type: boolean
              description: Indicates whether notifications are encrypted between Address Manager and the DNS/DHCP Server
              writeOnly: true
            managementUrl:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: Specifies the management URL for an F5 LTM or GTM server.
              example: 10.10.10.10
            selfIpAddress:
              type: string
              description: Specifies the self URL for an F5 GTM server.
              example: 10.10.10.10
            haBackboneEnabled:
              type: boolean
              description: Indicates whether a backbone is enabled between nodes of a high-availability pair.
              nullable: false
            haPingAddress:
              type: string
              description: Sets the ping address of the high-availability pair.
              example: 10.10.10.10
            dhcpServicePrincipal:
              required:
                - id
              allOf:
                - $ref: '#/components/schemas/InlinedKerberosServicePrincipal'
            dnsServicePrincipal:
              required:
                - id
              allOf:
                - $ref: '#/components/schemas/InlinedKerberosServicePrincipal'
            serviceProviderAccount:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The hosting service account name or number associated with the BlueCat Cloud DNS subscription.
            serviceProviderApiKey:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The hosting service API key associated with the BlueCat Cloud DNS subscription.
            activeServer:
              required:
                - id
                - password
              nullable: false
              writeOnly: true
              allOf:
                - $ref: '#/components/schemas/InlinedServer'
            passiveServer:
              required:
                - id
                - password
              nullable: false
              writeOnly: true
              allOf:
                - $ref: '#/components/schemas/InlinedServer'
            _inheritedFields:
              type: array
              description: The fields inherited from the parent resource.
              readOnly: true
              items:
                type: string
                description: The fields inherited from the parent resource.
    InlinedDHCPVendorOptionDefinition:
      title: DHCPVendorOptionDefinition
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of deployment option definition.
          enum:
            - DHCPVendorOptionDefinition
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the deployment option definition.
          nullable: false
          example: allow-recursion
    InlinedDeploymentOptionDefinition:
      title: DeploymentOptionDefinition
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of deployment option definition.
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the deployment option definition.
          nullable: false
          example: allow-recursion
    InlinedKerberosServicePrincipal:
      title: KerberosServicePrincipal
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - KerberosServicePrincipal
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name for the Kerberos service principal defined in the User Logon name field in Windows configuration section.
          nullable: false
          example: DHCP/dhcp1.bcn.com
    InlinedNetworkInterface:
      title: NetworkInterface
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - NetworkInterface
        name:
          type: string
          description: The fully qualified name assigned to the interface.
          nullable: false
          example: bdds1.acme.com
        servicesIpv4Address:
          type: string
          description: The IPv4 address for the services interface. On a multi-interface DNS/DHCP Server, the interface is used for all service traffic such as DNS, DHCP, and TFTP services.
          readOnly: true
          example: 10.10.10.1
        servicesIpv6Address:
          type: string
          description: The IPv6 address for the services interface.
          readOnly: true
          example: 2001:db8::1:1
    InlinedServer:
      title: Server
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The server scope resource type.
          enum:
            - Server
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        password:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The password used to authenticate with the server.
          example: Passw0rd!
    InlinedServerGroup:
      title: ServerGroup
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The server scope resource type.
          enum:
            - ServerGroup
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
    InlinedServerScope:
      title: ServerScope
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The server scope resource type.
        name:
          type: string
          description: The name of the resource.
          example: name
    InlinedStartOfAuthorityDefinition:
      title: StartOfAuthorityDefinition
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of deployment option definition.
          enum:
            - StartOfAuthorityDefinition
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the deployment option definition.
          nullable: false
          example: allow-recursion
    KerberosServicePrincipal:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - KerberosServicePrincipal
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name for the Kerberos service principal defined in the User Logon name field in Windows configuration section.
          nullable: false
          example: DHCP/dhcp1.bcn.com
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        keyVersionNumber:
          minimum: 1
          type: integer
          description: The msDS-KeyVersionNumber attribute value displayed in ADSI Edit on the Windows DC for the principal’s Kerberos key.
          format: int32
          nullable: false
        password:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The principal’s Kerberos password. This is the AD user account password created on Windows DC.
          nullable: false
          example: password
      description: The security ticket for the DNS service to use to authenticate keys requested by the GSS-TSIG protocol.
    NetworkInterface:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - NetworkInterface
        name:
          type: string
          description: The fully qualified name assigned to the interface.
          nullable: false
          example: bdds1.acme.com
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        server:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/AbstractServer'
        secondaryAddress:
          type: string
          description: The secondary IP address of the interface.
          example: 10.10.10.5
        managementAddress:
          type: string
          description: The IP address configured on the eth0 interface in the DNS/DHCP Administration Console. If dedicated management is enabled, The IP address for the dedicated management interface (eth2). On a multi-interface DNS/DHCP Server, the interface is used for all management traffic such as CS, PSM, SNMP, and SSH.
          example: 10.10.0.1
        managementAddressPrefixLength:
          maximum: 128
          minimum: 1
          type: integer
          description: The prefix length for the management address interface.
          format: int32
          readOnly: true
          example: 24
        servicesIpv4Address:
          type: string
          description: The IPv4 address for the services interface. On a multi-interface DNS/DHCP Server, the interface is used for all service traffic such as DNS, DHCP, and TFTP services.
          readOnly: true
          example: 10.10.10.1
        servicesIpv4PrefixLength:
          maximum: 32
          minimum: 1
          type: integer
          description: The IPv4 prefix length for the services interface.
          format: int32
          readOnly: true
          example: 24
        servicesIpv6Address:
          type: string
          description: The IPv6 address for the services interface.
          readOnly: true
          example: 2001:db8::1:1
        servicesIpv6PrefixLength:
          maximum: 128
          minimum: 1
          type: integer
          description: The IPv6 prefix length for the services interface.
          format: int32
          readOnly: true
          example: 64
        haBackboneAddress:
          type: string
          description: The IP address of the backbone connection if configured as a member of a high availability pair.
          readOnly: true
          example: 10.10.10.5
        haBackbonePrefixLength:
          maximum: 128
          minimum: 1
          type: integer
          description: The subnet prefix length of the high availability backbone.
          format: int32
          readOnly: true
          example: 24
        redundancyEnabled:
          type: boolean
          description: Indicates whether redundancy is enabled through port bonding.
          readOnly: true
        redundancyScenario:
          type: string
          description: The type of redundancy scenario configured.
          enum:
            - ACTIVE_BACKUP
            - ACTIVE_ACTIVE
      description: The network interfaces of the xHA pair.
    Server:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The server scope resource type.
          enum:
            - Server
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        profile:
          type: string
          description: The profile of the server.
          nullable: false
          enum:
            - ADONIS_XMB4
            - ADONIS_XMB3
            - OTHER_DNS_SERVER
            - DNS_DHCP_SERVER_20
            - DNS_DHCP_SERVER_45
            - DNS_DHCP_SERVER_60
            - DNS_DHCP_SERVER_100
            - DNS_DHCP_SERVER_100_D
            - LTM
            - GTM
            - DNS_DHCP_GEN4_7000
            - DNS_DHCP_GEN4_5000
            - DNS_DHCP_GEN4_4000
            - DNS_DHCP_GEN4_2000
            - CLOUD_DNS_SERVER
            - BLUECAT_ENTERPRISE
            - BLUECAT_CORE
            - BLUECAT_BRANCH_H
            - BLUECAT_BRANCH_L
            - LEGACY
        state:
          type: string
          description: The current state of the server, indicating whether the server is enabled or disabled.
          enum:
            - ENABLED
            - DISABLED
            - FAILOVER
            - RESET_CONTROL
            - REPAIR
        username:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The username used to authenticate with the server.
          example: admin
        password:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The password used to authenticate with the server.
          example: Passw0rd!
        serverGroup:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedServerGroup'
        connected:
          type: boolean
          description: Indicates whether the server is connected to Address Manager.
          nullable: false
        monitoringEnabled:
          type: boolean
          description: Indicates whether monitoring service is enabled on the server.
        snmp:
          $ref: '#/components/schemas/SNMP'
        interfaces:
          minItems: 1
          type: array
          description: The list of network interfaces of the server.
          writeOnly: true
          items:
            $ref: '#/components/schemas/NetworkInterface'
        location:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedLocation'
        statistics:
          type: object
          additionalProperties:
            type: object
          description: Displays statistics information collected from the monitoring service.
          readOnly: true
        overrideConfigurationLevelDhcpValidation:
          type: boolean
          description: Indicates whether DHCP deployment validation settings configured at the configuration level are overridden at the server level.
          nullable: false
        overrideConfigurationLevelDnsValidation:
          type: boolean
          description: Indicates whether DNS deployment validation settings configured at the configuration level are overridden at the server level.
          nullable: false
        dhcpConfigurationValidationEnabled:
          type: boolean
          description: Indicates whether the syntax of the dhcpd.conf file is validated prior to deployment from Address Manager.
          nullable: false
        dnsConfigurationValidationEnabled:
          type: boolean
          description: Indicates whether the syntax of the named.conf file is validated prior to deployment from Address Manager.
          nullable: false
        dnsZoneValidationEnabled:
          type: boolean
          description: Indicates whether the syntax of each DNS zone file is validated prior to deployment from Address Manager.
          nullable: false
        checkIntegrityValidation:
          type: string
          description: The method for which the syntax checks of the DNS zone file is checked.
          nullable: false
          enum:
            - NONE
            - LOCAL
            - LOCAL_SIBLING
            - FULL
            - FULL_SIBLING
        checkMxCnameValidation:
          type: string
          description: Checks if MX records point to a CNAME record rather than an A or AAAA, and determines how Address Manager handles conditions found by the check.
          nullable: false
          enum:
            - IGNORE
            - WARN
            - FAIL
        checkMxValidation:
          type: string
          description: Checks if MX records point to an IP address rather than an A or AAAA, and determines how Address Manager handles conditions found by the check.
          nullable: false
          enum:
            - IGNORE
            - WARN
            - FAIL
        checkNamesValidation:
          type: string
          description: Checks the names within the DNS zone files and determines how Address Manager handles conditions found by the check.
          nullable: false
          enum:
            - IGNORE
            - WARN
            - FAIL
        checkNsValidation:
          type: string
          description: Checks if NS records point to an IP address rather than an A or AAAA, and determines how Address Manager handles conditions found by the check.
          nullable: false
          enum:
            - IGNORE
            - WARN
            - FAIL
        checkSrvCnameValidation:
          type: string
          description: Checks if SRV records point to a CNAME record rather than an A or AAAA, and determines how Address Manager handles conditions found by the check.
          nullable: false
          enum:
            - IGNORE
            - WARN
            - FAIL
        checkWildcardValidation:
          type: string
          description: Checks for wildcards in zone names that don't appear as the last segment of a zone name, and determines how Address Manager handles conditions found by the check.
          nullable: false
          enum:
            - IGNORE
            - WARN
        privateAddress:
          type: string
          description: The private IP address of the server.
          example: 10.10.10.10
        encryptedNotificationsEnabled:
          type: boolean
          description: Indicates whether notifications are encrypted between Address Manager and the DNS/DHCP Server
          writeOnly: true
        managementUrl:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: Specifies the management URL for an F5 LTM or GTM server.
          example: 10.10.10.10
        selfIpAddress:
          type: string
          description: Specifies the self URL for an F5 GTM server.
          example: 10.10.10.10
        haBackboneEnabled:
          type: boolean
          description: Indicates whether a backbone is enabled between nodes of a high-availability pair.
          nullable: false
        haPingAddress:
          type: string
          description: Sets the ping address of the high-availability pair.
          example: 10.10.10.10
        dhcpServicePrincipal:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedKerberosServicePrincipal'
        dnsServicePrincipal:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedKerberosServicePrincipal'
        serviceProviderAccount:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The hosting service account name or number associated with the BlueCat Cloud DNS subscription.
        serviceProviderApiKey:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The hosting service API key associated with the BlueCat Cloud DNS subscription.
        dedicatedManagementEnabled:
          type: boolean
          description: Indicates whether dedicated management is enabled on the server.
          nullable: false
        interfaceRedundancyEnabled:
          type: boolean
          description: Indicates whether interface redundancy is enabled on the server.
          nullable: false
        haRole:
          type: string
          description: The xHA role of the server.
          readOnly: true
          enum:
            - NOT_AVAILABLE
            - PASSIVE
            - ACTIVE
        haPeerConnectionState:
          type: string
          description: The connection state of the xHA pair
          readOnly: true
          enum:
            - DEGRADED
            - FAILOVER
            - HEALTHY
            - INITIALIZING
            - REPAIR
            - SYNCHRONIZING
            - UNKNOWN
            - UP_TO_DATE
        haDiskState:
          type: string
          description: The state of the xHA shared disk.
          readOnly: true
          enum:
            - DEGRADED
            - FAILOVER
            - HEALTHY
            - INITIALIZING
            - REPAIR
            - SYNCHRONIZING
            - UNKNOWN
            - UP_TO_DATE
        hsmSupportEnabled:
          type: boolean
          description: Indicates whether HSM is enabled on the server.
          nullable: false
        _inheritedFields:
          type: array
          description: The fields inherited from the parent resource.
          readOnly: true
          items:
            type: string
            description: The fields inherited from the parent resource.
      description: The passive server of the xHA pair.
    ServerGroup:
      type: object
      allOf:
        - $ref: '#/components/schemas/ServerScope'
        - type: object
          properties:
            type:
              type: string
              description: The server scope resource type.
              enum:
                - ServerGroup
            name:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The name of the resource.
              nullable: false
              example: name
            multiPrimary:
              type: boolean
              description: Indicates whether the server group is a multi-primary server group.
            servers:
              minItems: 1
              type: array
              description: A list of servers that are part of the server group.
              writeOnly: true
              items:
                $ref: '#/components/schemas/AbstractServer'
    ServerScope:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The server scope resource type.
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
      description: The list of servers or server groups for the deployment.
      discriminator:
        propertyName: type
    StartOfAuthority:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - StartOfAuthority
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        serverScope:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedServerScope'
        value:
          type: object
        code:
          maximum: 255
          minimum: 1
          type: number
          description: The deployment option code. For Start of Authority records, the value is null.
        definition:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedStartOfAuthorityDefinition'
    DeployableResource:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          nullable: false
          example: 12345
        type:
          type: string
          description: The resource type.
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
      description: A list of resource record and IP address resources to deploy.
    SelectiveDeployment:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - SelectiveDeployment
        state:
          type: string
          description: The current state of the deployment.
          enum:
            - PENDING
            - QUEUED
            - RUNNING
            - CANCELLED
            - CANCELLING
            - COMPLETED
            - COMPLETED_WITH_ERRORS
            - COMPLETED_WITH_WARNINGS
            - FAILED
            - UNKNOWN
        status:
          type: string
          description: The current status of the deployment.
          readOnly: true
          enum:
            - CANCEL
        message:
          type: string
          description: The expanded status message for the deployment.
          readOnly: true
        percentComplete:
          type: integer
          description: A percentage value representing the current progress of the deployment.
          format: int32
          readOnly: true
          example: 50
        startDateTime:
          type: string
          description: The start time of the deployment.
          format: date-time
          readOnly: true
          example: "2022-11-23T02:53:03Z"
        completionDateTime:
          type: string
          description: The completion time for the deployment.
          format: date-time
          readOnly: true
          example: "2022-11-23T02:53:05Z"
        user:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/User'
        resources:
          minItems: 1
          type: array
          description: A list of resource record and IP address resources to deploy.
          nullable: false
          writeOnly: true
          items:
            $ref: '#/components/schemas/DeployableResource'
        batchMode:
          type: string
          description: The method used for batching selective deployment tasks.
          enum:
            - DISABLED
            - BATCH_BY_SERVER
        recordScope:
          type: string
          description: Defines whether selective deployment tasks include resources that are related to the defined DNS records.
          enum:
            - RELATED
            - SPECIFIC
        continueOnFailureEnabled:
          type: boolean
          description: Indicates the mode of operation on a failed resource record. If false, the deployment stops when a record fails. If true, the deployment continues when a record fails and the deployment moves to the next record.
        dynamicRecordDeploymentStrategy:
          type: string
          description: Defines how dynamic records are handled with selective deployment tasks.
          enum:
            - ABORT
            - SKIP
            - MAKE_STATIC
        method:
          type: string
          description: The method that triggered the deployment.
          readOnly: true
          example: SCHEDULED
    QuickDeployment:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - QuickDeployment
        state:
          type: string
          description: The current state of the deployment.
          enum:
            - PENDING
            - QUEUED
            - RUNNING
            - CANCELLED
            - CANCELLING
            - COMPLETED
            - COMPLETED_WITH_ERRORS
            - COMPLETED_WITH_WARNINGS
            - FAILED
            - UNKNOWN
        status:
          type: string
          description: The current status of the deployment.
          readOnly: true
          enum:
            - CANCEL
        message:
          type: string
          description: The expanded status message for the deployment.
          readOnly: true
        percentComplete:
          type: integer
          description: A percentage value representing the current progress of the deployment.
          format: int32
          readOnly: true
          example: 50
        startDateTime:
          type: string
          description: The start time of the deployment.
          format: date-time
          readOnly: true
          example: "2022-11-23T02:53:03Z"
        completionDateTime:
          type: string
          description: The completion time for the deployment.
          format: date-time
          readOnly: true
          example: "2022-11-23T02:53:05Z"
        user:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/User'
        method:
          type: string
          description: The method that triggered the deployment.
          readOnly: true
          example: SCHEDULED
    Deployment:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        state:
          type: string
          description: The current state of the deployment.
          enum:
            - PENDING
            - QUEUED
            - RUNNING
            - CANCELLED
            - CANCELLING
            - COMPLETED
            - COMPLETED_WITH_ERRORS
            - COMPLETED_WITH_WARNINGS
            - FAILED
            - UNKNOWN
        status:
          type: string
          description: The current status of the deployment.
          readOnly: true
          enum:
            - CANCEL
        message:
          type: string
          description: The expanded status message for the deployment.
          readOnly: true
        percentComplete:
          type: integer
          description: A percentage value representing the current progress of the deployment.
          format: int32
          readOnly: true
          example: 50
        startDateTime:
          type: string
          description: The start time of the deployment.
          format: date-time
          readOnly: true
          example: "2022-11-23T02:53:03Z"
        completionDateTime:
          type: string
          description: The completion time for the deployment.
          format: date-time
          readOnly: true
          example: "2022-11-23T02:53:05Z"
        user:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/User'
        method:
          type: string
          description: The method that triggered the deployment.
          readOnly: true
          example: SCHEDULED
      discriminator:
        propertyName: type
    DifferentialDeployment:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DifferentialDeployment
        state:
          type: string
          description: The current state of the deployment.
          enum:
            - PENDING
            - QUEUED
            - RUNNING
            - CANCELLED
            - CANCELLING
            - COMPLETED
            - COMPLETED_WITH_ERRORS
            - COMPLETED_WITH_WARNINGS
            - FAILED
            - UNKNOWN
        status:
          type: string
          description: The current status of the deployment.
          readOnly: true
          enum:
            - CANCEL
        message:
          type: string
          description: The expanded status message for the deployment.
          readOnly: true
        percentComplete:
          type: integer
          description: A percentage value representing the current progress of the deployment.
          format: int32
          readOnly: true
          example: 50
        startDateTime:
          type: string
          description: The start time of the deployment.
          format: date-time
          readOnly: true
          example: "2022-11-23T02:53:03Z"
        completionDateTime:
          type: string
          description: The completion time for the deployment.
          format: date-time
          readOnly: true
          example: "2022-11-23T02:53:05Z"
        user:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/User'
        service:
          type: string
          description: The deployment service type.
          nullable: false
          enum:
            - DNS
        method:
          type: string
          description: The method that triggered the deployment.
          readOnly: true
          example: SCHEDULED
    FullDeployment:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - FullDeployment
        state:
          type: string
          description: The current state of the deployment.
          enum:
            - PENDING
            - QUEUED
            - RUNNING
            - CANCELLED
            - CANCELLING
            - COMPLETED
            - COMPLETED_WITH_ERRORS
            - COMPLETED_WITH_WARNINGS
            - FAILED
            - UNKNOWN
        status:
          type: string
          description: The current status of the deployment.
          readOnly: true
          enum:
            - CANCEL
        message:
          type: string
          description: The expanded status message for the deployment.
          readOnly: true
        percentComplete:
          type: integer
          description: A percentage value representing the current progress of the deployment.
          format: int32
          readOnly: true
          example: 50
        startDateTime:
          type: string
          description: The start time of the deployment.
          format: date-time
          readOnly: true
          example: "2022-11-23T02:53:03Z"
        completionDateTime:
          type: string
          description: The completion time for the deployment.
          format: date-time
          readOnly: true
          example: "2022-11-23T02:53:05Z"
        user:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/User'
        service:
          type: string
          description: The deployment service type.
          nullable: false
          enum:
            - DHCPv4
            - DHCPv6
            - DNS
            - TFTP
        method:
          type: string
          description: The method that triggered the deployment.
          readOnly: true
          example: SCHEDULED
    ValidationDeployment:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ValidationDeployment
        state:
          type: string
          description: The current state of the deployment.
          enum:
            - PENDING
            - QUEUED
            - RUNNING
            - CANCELLED
            - CANCELLING
            - COMPLETED
            - COMPLETED_WITH_ERRORS
            - COMPLETED_WITH_WARNINGS
            - FAILED
            - UNKNOWN
        status:
          type: string
          description: The current status of the deployment.
          readOnly: true
          enum:
            - CANCEL
        message:
          type: string
          description: The expanded status message for the deployment.
          readOnly: true
        percentComplete:
          type: integer
          description: A percentage value representing the current progress of the deployment.
          format: int32
          readOnly: true
          example: 50
        startDateTime:
          type: string
          description: The start time of the deployment.
          format: date-time
          readOnly: true
          example: "2022-11-23T02:53:03Z"
        completionDateTime:
          type: string
          description: The completion time for the deployment.
          format: date-time
          readOnly: true
          example: "2022-11-23T02:53:05Z"
        user:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/User'
        service:
          type: string
          description: The deployment service type.
          nullable: false
          enum:
            - DNS
            - DHCPv4
            - DHCPv6
        method:
          type: string
          description: The method that triggered the deployment.
          readOnly: true
          example: SCHEDULED
    DHCPDeploymentRole:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DHCPDeploymentRole
        name:
          type: string
          description: The name of the resource.
          readOnly: true
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        roleType:
          type: string
          description: The type of DHCP deployment role. Roles set to NONE are used for DHCP services that have been designed in Address Manager, but are not yet ready to be deployed.
          nullable: false
          enum:
            - PRIMARY
            - NONE
        interfaces:
          minItems: 1
          type: array
          description: The list of server interfaces for the role.
          nullable: false
          writeOnly: true
          items:
            $ref: '#/components/schemas/DhcpRoleServerInterface'
    DNSDeploymentRole:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DNSDeploymentRole
        name:
          type: string
          description: The name of the resource.
          readOnly: true
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        roleType:
          type: string
          description: The type of DNS deployment role. Roles set to NONE are not deployed, instead clearing data from the server they are applied to.
          nullable: false
          enum:
            - PRIMARY
            - MULTI_PRIMARY
            - HIDDEN_PRIMARY
            - HIDDEN_MULTI_PRIMARY
            - SECONDARY
            - STEALTH_SECONDARY
            - FORWARDING
            - STUB
            - RECURSIVE
            - NONE
        view:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedView'
        nsRecordTtl:
          maximum: 2147483647
          minimum: 0
          type: integer
          description: The time-to-live (TTL) value for the name server and glue records deployed via the deployment role.
          format: int64
        interfaces:
          minItems: 1
          type: array
          description: The server interfaces to which the DNS deployment role is assigned.
          nullable: false
          writeOnly: true
          items:
            $ref: '#/components/schemas/DnsRoleServerInterface'
    DeploymentRole:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DeploymentRole
        name:
          type: string
          description: The name of the resource.
          readOnly: true
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
      discriminator:
        propertyName: type
    DhcpRoleServerInterface:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          nullable: false
          example: 12345
        type:
          type: string
          description: The resource type.
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        deploymentRoleInterfaceType:
          type: string
          description: The type of the deployment role server interface
          enum:
            - PRIMARY
            - SECONDARY
      description: The list of server interfaces for the role.
    DnsRoleServerInterface:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          nullable: false
          example: 12345
        type:
          type: string
          description: The resource type.
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        deploymentRoleInterfaceType:
          type: string
          description: The type of the deployment role server interface
          enum:
            - SERVICE
            - ZONE_TRANSFER
            - TARGET
        deploymentRoleInterfaceProtocol:
          type: string
          description: The internet protocol used for DNS zone transfers.
          enum:
            - IPV4
            - IPV6
      description: The server interfaces to which the DNS deployment role is assigned.
    InlinedAbstractServer:
      title: AbstractServer
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The server scope resource type.
          enum:
            - AbstractServer
        name:
          type: string
          description: The name of the resource.
          example: name
    TFTPDeploymentRole:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - TFTPDeploymentRole
        name:
          type: string
          description: The name of the resource.
          readOnly: true
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        roleType:
          type: string
          description: The deployment role.
          enum:
            - TFTP
        server:
          required:
            - id
          nullable: false
          allOf:
            - $ref: '#/components/schemas/InlinedAbstractServer'
    FileInfo:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
      description: Information about the TFTP file.
      discriminator:
        propertyName: type
    TFTPFile:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - TFTPFile
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        version:
          type: string
          description: The version of the TFTP file.
          example: 1.0.0
        description:
          type: string
          description: The description of the TFTP file.
          example: Initial config file
        size:
          type: integer
          description: The size of the TFTP file, in bytes.
          format: int64
          readOnly: true
          example: 10193
        md5Checksum:
          type: string
          description: The MD5 checksum of the TFTP file.
          readOnly: true
          example: 6A6D6AC66A2970F37944B349123E0123
    TFTPFolder:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - TFTPFolder
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
    ResourceImport:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of import
          enum:
            - ResourceImport
        contentType:
          type: string
          description: The content type of the import data
          readOnly: true
          example: application/vnd.bcn.proteus-migration+xml; v=3.0
        size:
          type: integer
          description: The size of the import, in bytes
          format: int64
          readOnly: true
          example: 10193
        state:
          type: string
          description: The initial state for the import
          enum:
            - PENDING
            - QUEUED
        creationDateTime:
          type: string
          description: The date and time the import resource was created
          format: date-time
          readOnly: true
          example: "2022-11-07T10:34:22Z"
        startDateTime:
          type: string
          description: The date and time the import was started
          format: date-time
          readOnly: true
          example: "2022-11-07T10:38:23Z"
        completionDateTime:
          type: string
          description: The date and time the import completed
          format: date-time
          readOnly: true
          example: "2022-11-07T10:47:43Z"
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the import file
          nullable: false
          example: migration.zip
    ResponsePolicyItemImport:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of import
          enum:
            - ResponsePolicyItemImport
        contentType:
          type: string
          description: The content type of the import data
          readOnly: true
          example: application/vnd.bcn.proteus-migration+xml; v=3.0
        size:
          type: integer
          description: The size of the import, in bytes
          format: int64
          readOnly: true
          example: 10193
        state:
          type: string
          description: The current state of the import
          enum:
            - PENDING
            - QUEUED
            - RUNNING
            - CANCELLED
            - CANCELLING
            - COMPLETED
            - COMPLETED_WITH_ERRORS
            - COMPLETED_WITH_WARNINGS
            - FAILED
            - UNKNOWN
        creationDateTime:
          type: string
          description: The date and time the import resource was created
          format: date-time
          readOnly: true
          example: "2022-11-07T10:34:22Z"
        startDateTime:
          type: string
          description: The date and time the import was started
          format: date-time
          readOnly: true
          example: "2022-11-07T10:38:23Z"
        completionDateTime:
          type: string
          description: The date and time the import completed
          format: date-time
          readOnly: true
          example: "2022-11-07T10:47:43Z"
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the policy items file
          nullable: false
          example: policy_items.txt
    PublishedInterface:
      type: object
      allOf:
        - $ref: '#/components/schemas/ServerInterface'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              enum:
                - PublishedInterface
            primaryAddress:
              type: string
              description: The primary IP address of the published interface.
              nullable: false
              example: 10.10.0.1
    ServerInterface:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ServerInterface
        name:
          type: string
          description: The fully qualified name assigned to the interface.
          nullable: false
          example: bdds1.acme.com
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        server:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/AbstractServer'
        secondaryAddress:
          type: string
          description: The secondary IP address of the interface.
          example: 10.10.10.5
      description: The destination server interface that the deployment role is moved to.
      discriminator:
        propertyName: type
    KeyDistributionCenter:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - KeyDistributionCenter
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the Kerberos key distribution center.
          nullable: false
          example: KDC-1
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        host:
          type: string
          description: The IP address or hostname of the Kerberos key distribution center
          nullable: false
          example: 192.168.0.10
        port:
          maximum: 65535
          minimum: 1
          type: integer
          description: The port of the Kerberos key distribution center
          format: int32
          nullable: false
          example: 88
    IPv4BlockMerge:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - IPv4BlockMerge
        transaction:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Transaction'
        blocks:
          minItems: 1
          type: array
          description: The import file contents
          nullable: false
          writeOnly: true
          items:
            required:
              - id
            allOf:
              - $ref: '#/components/schemas/InlinedIPv4Block'
        destination:
          required:
            - id
          nullable: false
          allOf:
            - $ref: '#/components/schemas/InlinedIpv4BlockMergeDestination'
    IPv4DHCPRange:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - IPv4DHCPRange
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        range:
          type: string
          description: The address range for the DHCP range.
          nullable: false
        usage:
          type: object
          additionalProperties:
            type: integer
            description: Values indicating the current amount of DHCP allocated, DHCP abandoned, DHCP reserved, and unassigned IP addresses within the range.
            format: int64
          description: Values indicating the current amount of DHCP allocated, DHCP abandoned, DHCP reserved, and unassigned IP addresses within the range.
          readOnly: true
          writeOnly: true
        template:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedIPv4Template'
        splitAroundStaticAddresses:
          type: boolean
          description: Indicates whether the DHCP range will automatically be split around any static, reserved, and gateway addresses in the network that are within the DHCP range.
          nullable: false
        exclusionRanges:
          type: array
          description: The exclusion ranges for the DHCP range. Addresses in each exclusion range will not be dynamically assigned.
          nullable: false
          items:
            type: string
            description: The exclusion ranges for the DHCP range. Addresses in each exclusion range will not be dynamically assigned.
        lowWaterMark:
          minimum: 0
          type: integer
          description: A DHCP alert is triggered when usage falls below this percentage (when too few addresses are in use).
          format: int32
          example: 15
        highWaterMark:
          minimum: 0
          type: integer
          description: A DHCP alert is triggered when usage exceeds this percentage (when too many addresses are in use).
          format: int32
          example: 95
        _inheritedFields:
          type: array
          description: The fields inherited from the parent resource.
          readOnly: true
          items:
            type: string
            description: The fields inherited from the parent resource.
      description: The destination of the resultant IPv4 DHCP range after the merge.
    IPv4DHCPRangeMerge:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - IPv4DHCPRangeMerge
        transaction:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Transaction'
        ranges:
          minItems: 1
          type: array
          description: A list of IPv4 DHCP ranges to be merged.
          nullable: false
          writeOnly: true
          items:
            required:
              - id
            allOf:
              - $ref: '#/components/schemas/InlinedIPv4DHCPRange'
        destination:
          required:
            - id
          nullable: false
          allOf:
            - $ref: '#/components/schemas/InlinedIPv4DHCPRange'
    IPv4NetworkMerge:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - IPv4NetworkMerge
        transaction:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Transaction'
        networks:
          minItems: 1
          type: array
          description: A list of IPv4 networks to be merged.
          nullable: false
          writeOnly: true
          items:
            required:
              - id
            allOf:
              - $ref: '#/components/schemas/InlinedIPv4Network'
        destination:
          required:
            - id
          nullable: false
          allOf:
            - $ref: '#/components/schemas/InlinedIPv4Network'
    InlinedIPv4Block:
      title: IPv4Block
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of IP block.
          enum:
            - IPv4Block
        name:
          type: string
          description: The name of the resource.
          example: name
    InlinedIPv4DHCPRange:
      title: IPv4DHCPRange
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - IPv4DHCPRange
        name:
          type: string
          description: The name of the resource.
          example: name
    InlinedIPv4Network:
      title: IPv4Network
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - IPv4Network
        name:
          type: string
          description: The name of the resource.
          example: name
    InlinedIpv4BlockMergeDestination:
      title: Ipv4BlockMergeDestination
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          nullable: false
          example: 12345
        type:
          type: string
          description: The resource type.
        name:
          type: string
          description: The name of the resource.
          example: name
    Ipv4BlockMergeDestination:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          nullable: false
          example: 12345
        type:
          type: string
          description: The resource type.
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
      description: The import file contents
    Merge:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        transaction:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Transaction'
      discriminator:
        propertyName: type
    Transaction:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - Transaction
        transactionType:
          type: string
          description: The type of transaction performed.
          nullable: false
          enum:
            - UNDO
        operation:
          type: string
          description: The operation performed.
          readOnly: true
          enum:
            - ADD_AAAA_RECORD
            - ADD_ACCESS_RIGHT
            - ADD_ACL
            - ADD_ADMINISTRATIVE_ACCESS_RIGHTS
            - ADD_ALIAS_RECORD
            - ADD_A_RECORD
            - ADD_CONFIGURATION
            - ADD_CUSTOM_DHCPV4_CLIENT_OPTION
            - ADD_CUSTOM_DHCPV4_CLIENT_OPTION_DEFINITION
            - ADD_DEPLOYMENT_OPTION_VALUE
            - ADD_DEPLOYMENT_SCHEDULER
            - ADD_DEVICE
            - ADD_DEVICE_INSTANCE
            - ADD_DEVICE_SUBTYPE
            - ADD_DEVICE_TYPE
            - ADD_DHCPV4_CLIENT_CLASS
            - ADD_DHCPV4_CLIENT_OPTION
            - ADD_DHCPV4_CLIENT_SUBCLASS
            - ADD_DHCPV4_RAW_OPTION
            - ADD_DHCPV4_SERVICE_OPTION
            - ADD_DHCPV6_CLIENT_OPTION
            - ADD_DHCPV6_RAW_OPTION
            - ADD_DHCPV6_SERVICE_OPTION
            - ADD_DHCP_DEPLOYMENT_ROLE
            - ADD_DHCP_ZONE_GROUP
            - ADD_DNS64
            - ADD_DNSSEC_SIGNING_POLICY
            - ADD_DNS_DEPLOYMENT_ROLE
            - ADD_DNS_OPTION
            - ADD_DNS_RAW_OPTION
            - ADD_E164_ZONE
            - ADD_EXTERNAL_HOST_RECORD
            - ADD_FORWARD_DHCP_ZONE
            - ADD_GENERIC_RECORD
            - ADD_GTM_SERVER
            - ADD_HA_SERVER
            - ADD_HINFO_RECORD
            - ADD_HOST_RECORD
            - ADD_HSM_CONFIGURATION
            - ADD_HSM_SERVER
            - ADD_HTTPS_RECORD
            - ADD_INTERNAL_ROOT_ZONE
            - ADD_IPV4_BLOCK
            - ADD_IPV4_DHCP_RANGE
            - ADD_IPV4_GROUP
            - ADD_IPV4_NETWORK
            - ADD_IPV4_PARENT
            - ADD_IPV4_RECONCILIATION_POLICY
            - ADD_IPV4_TEMPLATE
            - ADD_IPV6_ADDRESS
            - ADD_IPV6_ADDRESS_HOST
            - ADD_IPV6_DHCP_RANGE
            - ADD_IPV6_GLOBAL_ADDRESS_BLOCK
            - ADD_IPV6_NETWORK
            - ADD_IPV6_PARENT
            - ADD_IPV6_RECONCILIATION_POLICY
            - ADD_IPV6_TEMPLATE
            - ADD_KDC
            - ADD_KERBEROS_AUTHENTICATOR
            - ADD_KERBEROS_REALM
            - ADD_KEY_SIGNING_KEY
            - ADD_LDAP_AUTHENTICATOR
            - ADD_LDAP_GROUP
            - ADD_LOCATION
            - ADD_LTM_SERVER
            - ADD_MAC_ADDRESS
            - ADD_MAC_ADDRESS_TO_MAC_POOL
            - ADD_MAC_POOL
            - ADD_MX_RECORD
            - ADD_NAMING_POLICY
            - ADD_NAMING_POLICY_VALUE_CONNECTOR
            - ADD_NAMING_POLICY_VALUE_INCREMENTAL
            - ADD_NAMING_POLICY_VALUE_INTEGER
            - ADD_NAMING_POLICY_VALUE_REQUIRED
            - ADD_NAMING_POLICY_VALUE_TEXT
            - ADD_NAMING_RESTRICTION
            - ADD_NAPTR_RECORD
            - ADD_NAPTR_RECORD_GROUP
            - ADD_NOTIFICATION_GROUP
            - ADD_NOTIFICATION_GROUP_USERS_OR_GROUPS
            - ADD_OAUTH_SERVER
            - ADD_RADIUS_AUTHENTICATOR
            - ADD_REPORT
            - ADD_REPORT_SCHEDULER
            - ADD_RESOURCE
            - ADD_RESOURCE_COLLECTOR
            - ADD_RESOURCE_LINK
            - ADD_RESPONSE_POLICY
            - ADD_RESPONSE_POLICY_ZONE
            - ADD_REVERSE_DHCP_ZONE
            - ADD_SAML_IDENTITY_PROVIDER
            - ADD_SAML_SERVICE_PROVIDER
            - ADD_SAML_SERVICE_PROVIDER_METADATA
            - ADD_SERVER
            - ADD_SERVER_GROUP
            - ADD_SERVER_NETWORK_INTERFACE
            - ADD_SERVER_PATCH_HISTORY
            - ADD_SERVER_PATCH_INFO
            - ADD_SERVER_PUBLISHED_INTERFACE
            - ADD_SERVER_TO_GTM_SERVER_RESOURCE_POOL
            - ADD_SERVER_TO_LTM_SERVER_RESOURCE_POOL
            - ADD_SERVER_TO_SERVER_GROUP
            - ADD_SERVER_VERSION_HISTORY
            - ADD_SERVER_VIRTUAL_INTERFACE
            - ADD_SERVICE_PRINCIPAL
            - ADD_SRV_RECORD
            - ADD_SSO_GROUP
            - ADD_START_OF_AUTHORITY
            - ADD_SVCB_RECORD
            - ADD_TACACSPLUS_AUTHENTICATOR
            - ADD_TACACSPLUS_GROUP
            - ADD_TAG
            - ADD_TAG_GROUP
            - ADD_TAG_LINKS
            - ADD_TASK
            - ADD_TFTP_DEPLOYMENT_ROLE
            - ADD_TFTP_FILE
            - ADD_TFTP_FOLDER
            - ADD_TFTP_GROUP
            - ADD_TSIG_KEY
            - ADD_TXT_RECORD
            - ADD_URI_RECORD
            - ADD_USER
            - ADD_USERS_TO_GROUPS
            - ADD_USER_DEFINED_FIELD_DEFINITION
            - ADD_USER_DEFINED_LINK_DEFINITION
            - ADD_USER_GROUP
            - ADD_USER_MAC_POOL
            - ADD_VENDOR_CLIENT_OPTION
            - ADD_VENDOR_OPTION_DEFINITION
            - ADD_VENDOR_PROFILE
            - ADD_VIEW
            - ADD_WINDOWS_DHCP_FAILOVER_DEPLOYMENT_ROLE
            - ADD_X509_AUTHENTICATOR
            - ADD_ZONE
            - ADD_ZONE_SIGNING_KEY
            - ADD_ZONE_TEMPLATE
            - APPLY_ADDRESS_MANAGER_UPDATE
            - APPLY_IPV4_TEMPLATE
            - APPLY_NAMING_POLICY
            - APPLY_SIGNING_POLICY
            - APPROVE_ADD_ALIAS_RECORD
            - APPROVE_ADD_HOST_RECORD
            - APPROVE_ADD_IPV4_NETWORK
            - APPROVE_ADD_RESOURCE_RECORD
            - APPROVE_ADD_ZONE
            - APPROVE_ASSIGN_IPV4_ADDRESS
            - APPROVE_ASSIGN_IPV4_ADDRESS_WITH_PTR
            - APPROVE_CHANGE_IPV4_STATE
            - APPROVE_DELETE_RESOURCE
            - APPROVE_RENAME_RESOURCE_RECORD
            - APPROVE_UPDATE_ALIAS_RECORD
            - APPROVE_UPDATE_HOST_RECORD
            - APPROVE_UPDATE_IPV4_ADDRESS
            - APPROVE_UPDATE_IPV4_NETWORK
            - APPROVE_UPDATE_READONLY_IPV4_NETWORK
            - APPROVE_UPDATE_RESOURCE_RECORD
            - APPROVE_UPDATE_ZONE
            - ASSIGN_IPV4_ADDRESS
            - ASSIGN_IPV4_TEMPLATE
            - ASSIGN_IPV6_ADDRESS
            - ASSIGN_NEXT_AVAILABLE_IPV4_ADDRESS
            - BREAK_HA_SERVER
            - BULK_DNS_UPDATE
            - CHANGE_IPV4_ADDRESS_STATE
            - CLEANUP_DHCP_DEPLOYMENT_ROLE
            - CLEANUP_DHCP_SETTINGS
            - CLEANUP_MISMATCHED_RESOURCES
            - CLEAR_IPV6_ADDRESS_ASSIGNMENT
            - CLEAR_SERVER_DNS_CACHE
            - CLEAR_SERVER_DNS_CACHE_DOMAIN_ONLY
            - CLEAR_SERVER_DNS_CACHE_HOSTNAME_ONLY
            - CONFIGURE_ADDRESS_MANAGER_NTP_SERVICE
            - CONFIGURE_ADDRESS_MANAGER_SNMP_SERVICE
            - CONFIGURE_ADDRESS_MANAGER_SYSLOG_SERVICE
            - CONFIGURE_SERVER_ADDITIONAL_IP_ADDRESSES_SERVICE
            - CONFIGURE_SERVER_ANYCAST_SERVICE
            - CONFIGURE_SERVER_COLLECTOR_SERVICE
            - CONFIGURE_SERVER_FIREWALL_SERVICE
            - CONFIGURE_SERVER_NTP_SERVICE
            - CONFIGURE_SERVER_SNMP_SERVICE
            - CONFIGURE_SERVER_SSH_SERVICE
            - CONFIGURE_SERVER_SYSLOG_SERVICE
            - CONNECT_SERVER
            - COPY_RESOURCES
            - DATA_ARCHIVE_OR_PURGE_TASK
            - DELETE_AAAA_RECORD
            - DELETE_ACCESS_RIGHT
            - DELETE_ACL
            - DELETE_ADMINISTRATIVE_ACCESS_RIGHT
            - DELETE_ALIAS_RECORD
            - DELETE_APPROVED_AND_DENIED_WORKFLOW_REQUESTS
            - DELETE_A_RECORD
            - DELETE_COLLECTOR
            - DELETE_CONFIGURATION
            - DELETE_CUSTOM_DHCPV4_CLIENT_OPTION_DEFINITION
            - DELETE_DEPLOYMENT_SCHEDULER
            - DELETE_DEVICE
            - DELETE_DEVICE_INSTANCE
            - DELETE_DEVICE_SUBTYPE
            - DELETE_DEVICE_TYPE
            - DELETE_DHCPV4_CLIENT_CLASS
            - DELETE_DHCPV4_CLIENT_OPTION
            - DELETE_DHCPV4_CLIENT_SUBCLASS
            - DELETE_DHCPV4_RAW_OPTION
            - DELETE_DHCPV4_SERVICE_OPTION
            - DELETE_DHCPV6_CLIENT_OPTION
            - DELETE_DHCPV6_RAW_OPTION
            - DELETE_DHCPV6_SERVICE_OPTION
            - DELETE_DHCP_DEPLOYMENT_ROLE
            - DELETE_DHCP_ZONE_GROUP
            - DELETE_DNS64
            - DELETE_DNSSEC_SIGNING_POLICY
            - DELETE_DNS_DEPLOYMENT_ROLE
            - DELETE_DNS_OPTION
            - DELETE_DNS_RAW_OPTION
            - DELETE_DYNAMIC_ALIAS_RECORD
            - DELETE_DYNAMIC_GENERIC_RECORD
            - DELETE_DYNAMIC_HINFO_RECORD
            - DELETE_DYNAMIC_HOST_RECORD
            - DELETE_DYNAMIC_HTTPS_RECORD
            - DELETE_DYNAMIC_MX_RECORD
            - DELETE_DYNAMIC_NAPTR_RECORD
            - DELETE_DYNAMIC_RECORD
            - DELETE_DYNAMIC_SRV_RECORD
            - DELETE_DYNAMIC_SVCB_RECORD
            - DELETE_DYNAMIC_TXT_RECORD
            - DELETE_DYNAMIC_URI_RECORD
            - DELETE_E164_ZONE
            - DELETE_ENTRUST_KEY_SIGNING_KEY
            - DELETE_ENTRUST_ZONE_SIGNING_KEY
            - DELETE_ERROR_ENTRY
            - DELETE_EXTERNAL_HOST_RECORD
            - DELETE_FORWARD_DHCP_ZONE
            - DELETE_GENERIC_RECORD
            - DELETE_GTM_SERVER
            - DELETE_HINFO_RECORD
            - DELETE_HOST_RECORD
            - DELETE_HSM_CONFIGURATION
            - DELETE_HSM_SERVER
            - DELETE_HTTPS_RECORD
            - DELETE_INTERNAL_ROOT_ZONE
            - DELETE_IPV4_ADDRESS
            - DELETE_IPV4_BLOCK
            - DELETE_IPV4_DHCP_RANGE
            - DELETE_IPV4_GROUP
            - DELETE_IPV4_NETWORK
            - DELETE_IPV4_RECONCILIATION_ADDRESSES
            - DELETE_IPV4_RECONCILIATION_POLICY
            - DELETE_IPV4_TEMPLATE
            - DELETE_IPV6_ADDRESS
            - DELETE_IPV6_BLOCK
            - DELETE_IPV6_DHCP_RANGE
            - DELETE_IPV6_NETWORK
            - DELETE_IPV6_RECONCILIATION_ADDRESSES
            - DELETE_IPV6_RECONCILIATION_POLICY
            - DELETE_IPV6_TEMPLATE
            - DELETE_KDC
            - DELETE_KERBEROS_AUTHENTICATOR
            - DELETE_KERBEROS_REALM
            - DELETE_KEY_SIGNING_KEY
            - DELETE_LDAP_AUTHENTICATOR
            - DELETE_LOCATION
            - DELETE_LTM_SERVER
            - DELETE_MAC_ADDRESS
            - DELETE_MAC_ADDRESS_FROM_MAC_POOL
            - DELETE_MX_RECORD
            - DELETE_NAMING_POLICY
            - DELETE_NAMING_POLICY_VALUE_CONNECTOR
            - DELETE_NAMING_POLICY_VALUE_INCREMENTAL
            - DELETE_NAMING_POLICY_VALUE_INTEGER
            - DELETE_NAMING_POLICY_VALUE_REQUIRED
            - DELETE_NAMING_POLICY_VALUE_TEXT
            - DELETE_NAMING_RESTRICTION
            - DELETE_NAPTR_RECORD
            - DELETE_NAPTR_RECORD_GROUP
            - DELETE_NOTIFICATION_GROUP
            - DELETE_RADIUS_AUTHENTICATOR
            - DELETE_REPORT
            - DELETE_REPORT_SCHEDULER
            - DELETE_RESOURCE
            - DELETE_RESOURCE_LINK
            - DELETE_RESPONSE_POLICY
            - DELETE_RESPONSE_POLICY_ZONE
            - DELETE_REVERSE_DHCP_ZONE
            - DELETE_SERVER
            - DELETE_SERVER_FROM_SERVER_GROUP
            - DELETE_SERVER_GROUP
            - DELETE_SERVER_PUBLISHED_INTERFACE
            - DELETE_SERVICE_PRINCIPAL
            - DELETE_SRV_RECORD
            - DELETE_START_OF_AUTHORITY
            - DELETE_SVCB_RECORD
            - DELETE_TACACSPLUS_AUTHENTICATOR
            - DELETE_TAG
            - DELETE_TAG_GROUP
            - DELETE_TASK
            - DELETE_TFTP_DEPLOYMENT_ROLE
            - DELETE_TFTP_FILE
            - DELETE_TFTP_FOLDER
            - DELETE_TFTP_GROUP
            - DELETE_TSIG_KEY
            - DELETE_TXT_RECORD
            - DELETE_UNIMPORTED_ZONES
            - DELETE_URI_RECORD
            - DELETE_USER
            - DELETE_USER_DEFINED_FIELD_DEFINITION
            - DELETE_USER_DEFINED_LINK_DEFINITION
            - DELETE_USER_FROM_GROUP
            - DELETE_USER_GROUP
            - DELETE_USER_MAC_POOL
            - DELETE_VENDOR_CLIENT_OPTION
            - DELETE_VENDOR_OPTION_DEFINITION
            - DELETE_VENDOR_PROFILE
            - DELETE_VIEW
            - DELETE_WORKFLOW_REQUEST
            - DELETE_X509_AUTHENTICATOR
            - DELETE_ZONE
            - DELETE_ZONE_SIGNING_KEY
            - DELETE_ZONE_TEMPLATE
            - DENY_ADD_ALIAS_RECORD
            - DENY_ADD_HOST_RECORD
            - DENY_ADD_IPV4_NETWORK
            - DENY_ADD_RESOURCE_RECORD
            - DENY_ADD_ZONE
            - DENY_ASSIGN_IPV4_ADDRESS
            - DENY_ASSIGN_IPV4_ADDRESS_WITH_PTR
            - DENY_CHANGE_IPV4_STATE
            - DENY_DELETE_RESOURCE
            - DENY_RENAME_RESOURCE_RECORD
            - DENY_UPDATE_ALIAS_RECORD
            - DENY_UPDATE_HOST_RECORD
            - DENY_UPDATE_IPV4_ADDRESS
            - DENY_UPDATE_IPV4_NETWORK
            - DENY_UPDATE_READONLY_IPV4_NETWORK
            - DENY_UPDATE_RESOURCE_RECORD
            - DENY_UPDATE_ZONE
            - DEPLOY_SERVER
            - DHCP_DYNAMIC_UPDATE_OPERATION
            - DISABLE_AUTOVACUUM_SERVICE
            - DNS_DYNAMIC_ADD_OPERATION
            - DNS_DYNAMIC_DELETE_OPERATION
            - DNS_DYNAMIC_UPDATE_OPERATION
            - DUPLICATE_FORWARD_DHCP_ZONE
            - DUPLICATE_IPV4_BLOCK
            - DUPLICATE_IPV4_NETWORK
            - DUPLICATE_RESOURCE_RECORD
            - DUPLICATE_REVERSE_DHCP_ZONE
            - ELECT_AD_PRIMARY_DEPLOYMENT_ROLES
            - ENABLE_AUTOVACUUM_SERVICE
            - ENABLE_HSM_SUPPORT
            - FAILOVER_HA_SERVER
            - GENERATE_DNSSEC_KEY
            - GET_HA_SERVER_STATUS
            - GET_SERVER_INFO
            - IMPORT_CONFIGURATION
            - IMPORT_ENTITIES
            - IMPORT_ZONE
            - INITIALIZE_ADDRESS_MANAGER
            - INITIALIZE_ADDRESS_MANAGER_LOCALES
            - JOIN_SECURITY_WORLD
            - LOCK_OUT_USER
            - LOCK_OUT_USER_ROLLBACK
            - MERGE_DUPLICATE_HOST_RECORDS
            - MERGE_IPV4_BLOCKS
            - MERGE_IPV4_BLOCK_WITH_PARENT
            - MERGE_IPV4_DHCP_RANGES
            - MERGE_IPV4_NETWORKS
            - MIGRATE_AUTO_CREATE
            - MIGRATE_BATCH
            - MOVE_DEPLOYMENT_ROLES
            - MOVE_IPV4_ADDRESS
            - MOVE_IPV4_BLOCK
            - MOVE_IPV4_NETWORK
            - MOVE_IPV6_ADDRESS_ASSIGNMENT
            - MOVE_IPV6_BLOCK
            - MOVE_IPV6_NETWORK
            - MOVE_RESOURCE_RECORD
            - MOVE_TFTP_FILE_OR_FOLDER
            - MOVE_ZONE
            - PARTITION_IPV6_BLOCK
            - PARTITION_TO_BLOCKS
            - PARTITION_TO_NETWORKS
            - PATCH_ADDRESS_MANAGER
            - PATCH_SERVER
            - POPULATE_ZONE
            - PROCESS_OAUTH_TOKEN
            - PROCESS_SAML_RESPONSE
            - QUERY_SERVER_FOR_HOSTNAME
            - REAPPLY_IPV4_TEMPLATE
            - REAPPLY_ZONE_TEMPLATE
            - RECONCILE_IPV4_ADDRESSES
            - RECONCILE_IPV4_DHCP_RANGE
            - RECONCILE_IPV4_NETWORK
            - RECONCILE_IPV6_ADDRESSES
            - RECONCILE_SERVER
            - RECONCILE_VIEW
            - RECONCILE_ZONE
            - RECORD_SERVER_DEPLOYMENT_EVENT
            - REMOVE_DNSSEC_SIGNING_POLICY
            - REMOVE_DUID_FROM_IPV6_ADDRESS
            - REMOVE_RESOURCE_LINK
            - REMOVE_RESOURCE_LOCATION
            - REMOVE_TAG
            - RENAME_ALIAS_RECORD
            - RENAME_GENERIC_RECORD
            - RENAME_HINFO_RECORD
            - RENAME_HOST_RECORD
            - RENAME_HTTPS_RECORD
            - RENAME_MX_RECORD
            - RENAME_NAPTR_RECORD
            - RENAME_SRV_RECORD
            - RENAME_SVCB_RECORD
            - RENAME_TXT_RECORD
            - RENAME_URI_RECORD
            - REPAIR_HA_SERVER
            - REPLACE_SERVER
            - REPLACE_TFTP_FILE
            - REQUEST_ADD_ALIAS_RECORD
            - REQUEST_ADD_HOST_RECORD
            - REQUEST_ADD_IPV4_NETWORK
            - REQUEST_ADD_RESOURCE_RECORD
            - REQUEST_ADD_ZONE
            - REQUEST_ASSIGN_IPV4_ADDRESS
            - REQUEST_ASSIGN_IPV4_ADDRESS_WITH_PTR
            - REQUEST_ASSIGN_NEXT_AVAILABLE_IPV4_ADDRESS
            - REQUEST_CHANGE_IPV4_STATE
            - REQUEST_DELETE_RESOURCE
            - REQUEST_RENAME_RESOURCE_RECORD
            - REQUEST_UPDATE_ALIAS_RECORD
            - REQUEST_UPDATE_HOST_RECORD
            - REQUEST_UPDATE_IPV4_ADDRESS
            - REQUEST_UPDATE_IPV4_NETWORK
            - REQUEST_UPDATE_READONLY_IPV4_NETWORK
            - REQUEST_UPDATE_RESOURCE_RECORD
            - REQUEST_UPDATE_ZONE
            - RESET_SERVER_PASSWORD
            - RESIZE_IPV4_BLOCK
            - RESIZE_IPV4_NETWORK
            - RESIZE_IPV6_BLOCK
            - RESIZE_IPV6_NETWORK
            - RESTORE_RESOURCE
            - SPLIT_IPV4_BLOCK
            - SPLIT_IPV4_NETWORK
            - SPLIT_IPV6_BLOCK
            - SPLIT_IPV6_NETWORK
            - START_WINDOWS_READONLY_DNS_DEPLOYMENT
            - UNASSIGN_IPV4_TEMPLATE
            - UPDATE_ACCESS_RIGHT
            - UPDATE_ACL
            - UPDATE_ADMINISTRATIVE_ACCESS_RIGHT
            - UPDATE_ALIAS_RECORD
            - UPDATE_COLLECTOR
            - UPDATE_CONFIGURATION
            - UPDATE_CONFIGURATION_DNS_OPTION_INHERITANCE_SETTINGS
            - UPDATE_CUSTOM_DHCPV4_CLIENT_OPTION_DEFINITION
            - UPDATE_DEPLOYMENT_SCHEDULER
            - UPDATE_DEVICE
            - UPDATE_DEVICE_SUBTYPE
            - UPDATE_DEVICE_TYPE
            - UPDATE_DHCPV4_CLIENT_CLASS
            - UPDATE_DHCPV4_CLIENT_OPTION
            - UPDATE_DHCPV4_CLIENT_SUBCLASS
            - UPDATE_DHCPV4_RAW_OPTION
            - UPDATE_DHCPV4_SERVICE_OPTION
            - UPDATE_DHCPV6_CLIENT_OPTION
            - UPDATE_DHCPV6_RAW_OPTION
            - UPDATE_DHCPV6_SERVICE_OPTION
            - UPDATE_DHCP_DEPLOYMENT_ROLE
            - UPDATE_DHCP_RECONCILIATION
            - UPDATE_DHCP_ZONE_GROUP
            - UPDATE_DNS64
            - UPDATE_DNSSEC_SIGNING_POLICY
            - UPDATE_DNS_DEPLOYMENT_ROLE
            - UPDATE_DNS_OPTION
            - UPDATE_DNS_RAW_OPTION
            - UPDATE_DYNAMIC_ALIAS_RECORD
            - UPDATE_DYNAMIC_HINFO_RECORD
            - UPDATE_DYNAMIC_HTTPS_RECORD
            - UPDATE_DYNAMIC_MX_RECORD
            - UPDATE_DYNAMIC_NAPTR_RECORD
            - UPDATE_DYNAMIC_SRV_RECORD
            - UPDATE_DYNAMIC_SVCB_RECORD
            - UPDATE_DYNAMIC_TXT_RECORD
            - UPDATE_DYNAMIC_URI_RECORD
            - UPDATE_E164_ZONE
            - UPDATE_ENTRUST_KEY_SIGNING_KEY
            - UPDATE_ENTRUST_KEY_SIGNING_KEY_LIST
            - UPDATE_ENTRUST_ZONE_SIGNING_KEY
            - UPDATE_EXTERNAL_HOST_RECORD
            - UPDATE_FORWARD_DHCP_ZONE
            - UPDATE_GENERIC_RECORD
            - UPDATE_GLOBAL_SETTINGS
            - UPDATE_GTM_SERVER
            - UPDATE_GTM_SERVER_RESOURCE_GROUP
            - UPDATE_HA_SERVER
            - UPDATE_HINFO_RECORD
            - UPDATE_HOST_RECORD
            - UPDATE_HSM_CONFIGURATION
            - UPDATE_HSM_SERVER
            - UPDATE_HTTPS_RECORD
            - UPDATE_INTERNAL_ROOT_ZONE
            - UPDATE_IPV4_ADDRESS
            - UPDATE_IPV4_BLOCK
            - UPDATE_IPV4_DHCP_RANGE
            - UPDATE_IPV4_GROUP
            - UPDATE_IPV4_NETWORK
            - UPDATE_IPV4_RECONCILIATION_POLICY
            - UPDATE_IPV4_TEMPLATE
            - UPDATE_IPV6_ADDRESS
            - UPDATE_IPV6_ADDRESS_DUID
            - UPDATE_IPV6_BLOCK
            - UPDATE_IPV6_DHCP_RANGE
            - UPDATE_IPV6_NETWORK
            - UPDATE_IPV6_RECONCILIATION_POLICY
            - UPDATE_IPV6_TEMPLATE
            - UPDATE_IP_ADDRESS
            - UPDATE_IP_OVERLAP_SETTINGS
            - UPDATE_KERBEROS_AUTHENTICATOR
            - UPDATE_KERBEROS_DOMAIN_CONTROLLER
            - UPDATE_KERBEROS_REALM
            - UPDATE_KEY_SIGNING_KEY
            - UPDATE_LDAP_AUTHENTICATOR
            - UPDATE_LOCATION
            - UPDATE_LOGIN_SECURITY_SETTINGS
            - UPDATE_LTM_SERVER
            - UPDATE_LTM_SERVER_RESOURCE_GROUP
            - UPDATE_MAC_ADDRESS
            - UPDATE_MAC_POOL
            - UPDATE_MX_RECORD
            - UPDATE_NAMING_POLICY
            - UPDATE_NAMING_POLICY_VALUE_CONNECTOR
            - UPDATE_NAMING_POLICY_VALUE_INCREMENTAL
            - UPDATE_NAMING_POLICY_VALUE_INTEGER
            - UPDATE_NAMING_POLICY_VALUE_REQUIRED
            - UPDATE_NAMING_POLICY_VALUE_TEXT
            - UPDATE_NAMING_RESTRICTION
            - UPDATE_NAPTR_RECORD
            - UPDATE_NAPTR_RECORD_GROUP
            - UPDATE_NOTIFICATION_GROUP
            - UPDATE_OAUTH_SERVER
            - UPDATE_RADIUS_AUTHENTICATOR
            - UPDATE_READONLY_IPV4_NETWORK
            - UPDATE_REPORT
            - UPDATE_REPORT_SCHEDULER
            - UPDATE_REPORT_SCHEDULERS_STATUS
            - UPDATE_RESOURCE
            - UPDATE_RESOURCE_LOCATION
            - UPDATE_RESPONSE_POLICY
            - UPDATE_RESPONSE_POLICY_ZONE
            - UPDATE_RETENTION_SETTINGS
            - UPDATE_REVERSE_DHCP_ZONE
            - UPDATE_SAML_IDENTITY_PROVIDER
            - UPDATE_SAML_SERVICE_PROVIDER
            - UPDATE_SAML_SERVICE_PROVIDER_KEY_STORE
            - UPDATE_SAML_SERVICE_PROVIDER_METADATA
            - UPDATE_SCHEDULED_DEPLOYMENT
            - UPDATE_SERVER
            - UPDATE_SERVER_GROUP
            - UPDATE_SERVER_INTERFACE
            - UPDATE_SERVER_MONITORING_SETTINGS
            - UPDATE_SERVER_PASSWORD_SERVER
            - UPDATE_SERVER_PUBLISHED_INTERFACE
            - UPDATE_SERVICE_PRINCIPAL
            - UPDATE_SRV_RECORD
            - UPDATE_START_OF_AUTHORITY
            - UPDATE_SVCB_RECORD
            - UPDATE_TACACSPLUS_AUTHENTICATOR
            - UPDATE_TAG
            - UPDATE_TAG_GROUP
            - UPDATE_TASK
            - UPDATE_TFTP_DEPLOYMENT_ROLE
            - UPDATE_TFTP_FILE
            - UPDATE_TFTP_FOLDER
            - UPDATE_TFTP_GROUP
            - UPDATE_TSIG_KEY
            - UPDATE_TXT_RECORD
            - UPDATE_URI_RECORD
            - UPDATE_USER
            - UPDATE_USER_DEFINED_FIELD_DEFINITION
            - UPDATE_USER_DEFINED_LINK_DEFINITION
            - UPDATE_USER_GROUP
            - UPDATE_USER_MAC_POOL
            - UPDATE_USER_PASSWORD
            - UPDATE_USER_PASSWORD_POLICY
            - UPDATE_VENDOR_CLIENT_OPTION
            - UPDATE_VENDOR_OPTION_DEFINITION
            - UPDATE_VENDOR_PROFILE
            - UPDATE_VIEW
            - UPDATE_WINDOWS_DHCP_FAILOVER_DEPLOYMENT_ROLE
            - UPDATE_X509_AUTHENTICATOR
            - UPDATE_ZONE
            - UPDATE_ZONE_SIGNING_KEY
            - UPDATE_ZONE_TEMPLATE
            - VERIFY_ADDRESS_MANAGER_UPDATE
        description:
          type: string
          description: The description of the operation performed.
          example: Zone was moved
        comment:
          type: string
          description: The change control comment of the transaction.
          example: Moved zone to a new view.
        creationDateTime:
          type: string
          description: The date and time of the transaction.
          example: "2022-11-15T19:48:05Z"
        transactionId:
          minimum: 1
          type: integer
          description: The unique ID of the transaction performed.
          format: int64
          nullable: false
          writeOnly: true
          example: 3149
        user:
          $ref: '#/components/schemas/User'
        revertingTransaction:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Transaction'
      description: The transaction information of the split operation.
    AddressMove:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        transaction:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Transaction'
        destination:
          $ref: '#/components/schemas/Address'
        source:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Address'
    BlockMove:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        transaction:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Transaction'
        destination:
          required:
            - range
          nullable: false
          allOf:
            - $ref: '#/components/schemas/InlinedBlock'
        source:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Block'
    InlinedBlock:
      title: Block
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of IP block.
        name:
          type: string
          description: The name of the resource.
          example: name
        range:
          type: string
          description: The address range for the IP block.
          nullable: false
    InlinedNetwork:
      title: Network
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        name:
          type: string
          description: The name of the resource.
          example: name
        range:
          type: string
          description: The IP address range for the network. The range can be provided in CIDR (e.g. 10.0.0.0/16) or address range format (e.g. 10.0.0.0-10.0.255.255).
          nullable: false
    Network:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        range:
          type: string
          description: The IP address range for the network. The range can be provided in CIDR (e.g. 10.0.0.0/16) or address range format (e.g. 10.0.0.0-10.0.255.255).
          nullable: false
        location:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedLocation'
        _inheritedFields:
          type: array
          description: The fields inherited from the parent resource.
          readOnly: true
          items:
            type: string
            description: The fields inherited from the parent resource.
      description: The source of the network to be moved.
      discriminator:
        propertyName: type
    NetworkMove:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        transaction:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Transaction'
        destination:
          required:
            - range
          nullable: false
          allOf:
            - $ref: '#/components/schemas/InlinedNetwork'
        source:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Network'
    ResourceRecordMove:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ResourceRecordMove
        transaction:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Transaction'
        destination:
          required:
            - absoluteName
          nullable: false
          allOf:
            - $ref: '#/components/schemas/InlinedResourceRecord'
        source:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/ResourceRecord'
    DeploymentRoleMove:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DeploymentRoleMove
        transaction:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Transaction'
        roleTypes:
          minItems: 1
          type: array
          description: The type of deployment role to be moved.
          nullable: false
          items:
            type: string
            description: The type of deployment role to be moved.
            enum:
              - DHCPDeploymentRole
              - DNSDeploymentRole
        destination:
          required:
            - id
          nullable: false
          allOf:
            - $ref: '#/components/schemas/InlinedServerInterface'
        source:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Server'
    InlinedServerInterface:
      title: ServerInterface
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ServerInterface
        name:
          type: string
          description: The fully qualified name assigned to the interface.
          nullable: false
          example: bdds1.acme.com
    ZoneMove:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ZoneMove
        transaction:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Transaction'
        destination:
          required:
            - absoluteName
          nullable: false
          allOf:
            - $ref: '#/components/schemas/InlinedZone'
        source:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Zone'
    NamingPolicy:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - NamingPolicy
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the naming policy.
          nullable: false
          example: naming policy name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        policyValues:
          type: array
          description: A list of naming policy values.
          writeOnly: true
          items:
            $ref: '#/components/schemas/NamingPolicyValue'
        policyRestrictions:
          type: array
          description: A list of naming policy restrictions.
          writeOnly: true
          items:
            $ref: '#/components/schemas/NamingPolicyRestriction'
    NamingPolicyConnectorValue:
      type: object
      allOf:
        - $ref: '#/components/schemas/NamingPolicyValue'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              readOnly: true
              enum:
                - NamingPolicyConnectorValue
            connector:
              type: string
              description: A character used to separate elements in a filename; typically, - (hyphen) or _ (underscore) are used.
              nullable: false
              example: '-'
    NamingPolicyIncrementalValue:
      type: object
      allOf:
        - $ref: '#/components/schemas/NamingPolicyValue'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              readOnly: true
              enum:
                - NamingPolicyIncrementalValue
            incrementalRole:
              type: string
              description: The incremental counter type. The value can be Counter to make the value a sequential counter or Unique Name to use the value to ensure that the names are unique. When you select Counter, the value starts at a specified value and increments each time the naming policy creates a name. When you select Unique Name, the value increments only to ensure that generated names are unique.
              nullable: false
              enum:
                - UNIQUE_NAME
                - COUNTER
            incrementType:
              type: string
              description: The number system for the incremental value.
              nullable: false
              enum:
                - DECIMAL
                - HEXADECIMAL
            paddingType:
              type: string
              description: The padding that is added to the incremental value. Simple padding pads the incremental value with a fixed number of leading zeros. Global padding pads the incremental value with leading zeros to make the entire name generated by the policy a specific length.
              nullable: false
              enum:
                - NONE
                - SIMPLE
                - GLOBAL
            sequenceStart:
              type: integer
              description: The starting value for the incremental value.
              format: int32
              example: 10
            sequenceIncrement:
              type: integer
              description: The amount by which to increment the value each time it's used.
              format: int32
              example: 5
            paddingLength:
              type: integer
              description: The length of the padding. For simple padding, the value determines how many digits are used for the incremental value. For global padding, the value determines the overall length of the name generated by the naming policy.
              format: int32
              example: 5
            missingValueReuseEnabled:
              type: boolean
              description: Determines whether the naming policy reuses numeric values if they're available.
    NamingPolicyIntegerValue:
      type: object
      allOf:
        - $ref: '#/components/schemas/NamingPolicyValue'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              readOnly: true
              enum:
                - NamingPolicyIntegerValue
            min:
              maximum: 2147483647
              minimum: 0
              type: integer
              description: The start value for the numeric range.
              format: int32
              example: 1
            max:
              maximum: 2147483647
              minimum: 0
              type: integer
              description: The end value for the numeric range. A value of 0 indicates that the range is unbounded.
              format: int32
              example: 0
    NamingPolicyRequiredValue:
      type: object
      allOf:
        - $ref: '#/components/schemas/NamingPolicyValue'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              readOnly: true
              enum:
                - NamingPolicyRequiredValue
            elements:
              minItems: 1
              type: array
              description: A list of value pairs used to enforce a naming convention of a naming policy.
              nullable: false
              items:
                $ref: '#/components/schemas/NameValuePairBean'
    NamingPolicyRestriction:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - NamingPolicyRestriction
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        restrictions:
          minItems: 1
          type: array
          description: A list of words that cannot be used as part of a resource record name. Naming restrictions are used to prevent reserved or undesirable words from being used in resource record names.
          nullable: false
          items:
            $ref: '#/components/schemas/ValueMatchTypePairBean'
      description: A list of naming policy restrictions.
    NamingPolicyTextValue:
      type: object
      allOf:
        - $ref: '#/components/schemas/NamingPolicyValue'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              readOnly: true
              enum:
                - NamingPolicyTextValue
            textType:
              type: string
              description: The type of naming policy value text enforcement.
              nullable: false
              enum:
                - LENGTH
                - REGULAR_EXPRESSION
            minLength:
              maximum: 2147483647
              minimum: 0
              type: integer
              description: The shortest string allowed in the name. When set of 0, the text string is optional.
              format: int32
              example: 0
            maxLength:
              maximum: 2147483647
              minimum: 0
              type: integer
              description: The longest string allowed in the name. When set of 0, the range is unbound.
              format: int32
              example: 0
            regularExpression:
              type: string
              description: The regular expression to restrict the text string.
              example: '[a-z][0-9]'
    NamingPolicyValue:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          readOnly: true
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the naming policy value.
          nullable: false
          example: naming policy value name
      description: A list of naming policy values.
      discriminator:
        propertyName: type
    ValueMatchTypePairBean:
      type: object
      properties:
        value:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The value to match.
          nullable: false
          example: host
        matchType:
          type: string
          description: The match type applied.
          nullable: false
          enum:
            - Exact
            - Any
      description: A list of words that cannot be used as part of a resource record name. Naming restrictions are used to prevent reserved or undesirable words from being used in resource record names.
    NotificationEventSubscriptionsBean:
      type: object
      properties:
        category:
          type: string
          description: The category of event subscription.
          nullable: false
          enum:
            - APPLICATION
            - DATABASE_MAINTENANCE
            - DATA_CHECKER
            - DATA_COLLECTION
            - DDNS_NOTIFICATION
            - DEPLOYMENT
            - DEPLOYMENT_DATA_VALIDATION
            - DHCP_ALERT
            - DHCP_LEASE_SYNCHRONIZATION
            - DNSSEC_KEY_EXPIRATION
            - IP_RECONCILIATION
            - IP_TEMPLATE
            - MIGRATION
            - REPORT_SCHEDULER
            - SERVER_HIGH_AVAILABILITY
            - SERVER_MONITORING
            - SOFTWARE_UPDATE
            - SSO_MANAGEMENT
            - SYSTEM_MAINTENANCE
            - TRUST_RELATIONSHIP
            - WORKFLOW_REQUEST
            - ZONE_TEMPLATE
            - MULTI_PRIMARY_DNS_SYNC
        eventTypes:
          type: array
          description: The event notification level.
          nullable: false
          items:
            type: string
            description: The event notification level.
            enum:
              - INFO
              - WARNING
              - ERROR
              - SUCCESS
              - FAILED
              - NOT_DEPLOYED
              - INVALID
              - NO_ROLE
              - RESPONSE_POLICY_ZONES_NOT_DEPLOYED
              - VALID
      description: The type of events that trigger notifications to be sent.
    NotificationGroup:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - NotificationGroup
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the notification group.
          example: Notification Group 1
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        notificationType:
          type: string
          description: The service used to send notifications to group members.
          nullable: false
          enum:
            - SMTP_SERVICE
            - SNMP_TRAP_SERVICE
        eventSubscriptions:
          type: array
          description: The type of events that trigger notifications to be sent.
          nullable: false
          items:
            $ref: '#/components/schemas/NotificationEventSubscriptionsBean'
        subjects:
          type: array
          description: The users and user groups that are part of the notification group.
          writeOnly: true
          items:
            $ref: '#/components/schemas/UserScope'
    InlinedServerPatch:
      title: ServerPatch
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ServerPatch
        name:
          type: string
          description: The name of the patch file to upload
          readOnly: true
          example: bdds_9.5.1-001_HOTFIX-951_x86_64.tar
    ServerPatch:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ServerPatch
        name:
          type: string
          description: The name of the patch file to upload
          readOnly: true
          example: bdds_9.5.1-001_HOTFIX-951_x86_64.tar
        publicKey:
          type: array
          description: The Base64 encoded public key to verify the patch
          format: byte
          nullable: false
          writeOnly: true
          example: MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCBjUSo0nM
          items:
            type: string
            description: The Base64 encoded public key to verify the patch
            format: byte
            example: TUlHZk1BMEdDU3FHU0liM0RRRUJBUVVBQTRHTkFEQ0JpUUtCZ1FDQmpVU28wbk0=
      description: Defines information of the applied server patch file.
    ServerPatchApplication:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ServerPatchApplication
        patch:
          nullable: false
          writeOnly: true
          anyOf:
            - required:
                - id
              allOf:
                - $ref: '#/components/schemas/InlinedServerPatch'
            - required:
                - name
              allOf:
                - $ref: '#/components/schemas/InlinedServerPatch'
        dateTime:
          type: string
          description: The date and time of applied server patch.
          format: date-time
          readOnly: true
        version:
          type: string
          description: The version of the applied server patch.
          readOnly: true
    ResponsePolicyItem:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ResponsePolicyItem
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The fully qualified domain name to be blocked or redirected by the responsepolicy.
          nullable: false
          example: host.example.com
    IPv6DHCPRange:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - IPv6DHCPRange
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        range:
          type: string
          description: The address range for the DHCP range.
          nullable: false
        usage:
          type: object
          additionalProperties:
            type: integer
            description: Values indicating the current amount of DHCP allocated, DHCP abandoned, DHCP reserved, and unassigned IP addresses within the range.
            format: int64
          description: Values indicating the current amount of DHCP allocated, DHCP abandoned, DHCP reserved, and unassigned IP addresses within the range.
          readOnly: true
          writeOnly: true
        _inheritedFields:
          type: array
          description: The fields inherited from the parent resource.
          readOnly: true
          items:
            type: string
            description: The fields inherited from the parent resource.
    Range:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        range:
          type: string
          description: The address range for the DHCP range.
          nullable: false
        usage:
          readOnly: true
          writeOnly: true
          allOf:
            - $ref: '#/components/schemas/Map'
        _inheritedFields:
          type: array
          description: The fields inherited from the parent resource.
          readOnly: true
          items:
            type: string
            description: The fields inherited from the parent resource.
      discriminator:
        propertyName: type
    KerberosRealm:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - KerberosRealm
        name:
          type: string
          description: The name for the Kerberos realm.
          nullable: false
          example: example.company.net
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        domain:
          type: string
          description: The donamin name for the Kerberos realm.
          nullable: false
          example: EXAMPLE.COMPANY.NET
      description: The Kerberos realm.
    IPv4ReconciliationPolicy:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - IPv4ReconciliationPolicy
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        enabled:
          type: boolean
          description: Indicates whether the reconciliation policy will run at the scheduled time.
          nullable: false
        discoveryMethod:
          type: string
          description: The discovery method for the reconciliation policy.
          nullable: false
          enum:
            - SNMP
            - PINGSWEEP
            - SNMP_PINGSWEEP
            - NO_DISCOVERY
        seedRouterAddresses:
          type: array
          description: The IP address or addresses of the router or layer 3 switch where the network discovery operation is to start.
          items:
            type: string
            description: The IP address or addresses of the router or layer 3 switch where the network discovery operation is to start.
        snmp:
          $ref: '#/components/schemas/SNMP'
        skipFqdnEnabled:
          type: boolean
          description: Indicates whether the Address Manager discovery engine will skip FQDN and reverse DNS lookups.
          nullable: false
        dnsServers:
          type: array
          description: The IP address or addresses for the DNS server(s) that the discovery engine will use to perform FQDN and reverse DNS lookups.
          items:
            type: string
            description: The IP address or addresses for the DNS server(s) that the discovery engine will use to perform FQDN and reverse DNS lookups.
        blackHoleVlan:
          maximum: 4096
          minimum: 1
          type: integer
          description: The VLAN ID for the black hole VLAN. The black hole VLAN is used as a default VLAN for all unused ports.
          format: int32
          nullable: false
        trunkDefaultVlan:
          maximum: 4096
          minimum: 1
          type: integer
          description: The VLAN ID assigned to a trunk as a native/default VLAN to protect controlled traffic from being spoofed.
          format: int32
          nullable: false
        startDateTime:
          type: string
          description: The start time for the reconciliation policy discovery.
          format: date-time
          nullable: false
          example: "2022-11-17T20:11:00Z"
        frequency:
          type: string
          description: The recurring frequency for reconciliation policy discovery.
          example: PT1H
        networkBoundaries:
          type: array
          description: The IPv4 range(s) in CIDR format for the reconciliation policy to search.
          items:
            type: string
            description: The IPv4 range(s) in CIDR format for the reconciliation policy to search.
        pingSweepNetworkGaps:
          type: array
          description: The IPv4 address ranges in CIDR format for which ping sweep sends an ICMP echo request.
          items:
            type: string
            description: The IPv4 address ranges in CIDR format for which ping sweep sends an ICMP echo request.
        overrides:
          type: array
          description: The IPv4 addresses and ranges for the reconciliation policy to ignore. The list of overrides can contain single addresses, ranges in CIDR format (e.g. 10.0.0.0/16), or ranges in address range format (e.g. 10.0.0.0-10.0.255.255).
          items:
            type: string
            description: The IPv4 addresses and ranges for the reconciliation policy to ignore. The list of overrides can contain single addresses, ranges in CIDR format (e.g. 10.0.0.0/16), or ranges in address range format (e.g. 10.0.0.0-10.0.255.255).
        reclaimAcceptanceAge:
          type: string
          description: The age parameter for automatic reconciliation of reclaimable addresses. Reconciliation will be applied to reclaimable IP addresses older than this value. Reclaimable addresses are addresses that exist in Address Manager but are not found on the physical network.
          example: PT1H
        unknownAcceptanceAge:
          type: string
          description: The age parameter for automatic reconciliation of unknown addresses. Reconciliation will be applied to unknown IP addresses older than this value. Unknown addresses are addresses that exist on the physical network but do not exist in Address Manager.
          example: PT1H
        mismatchAcceptanceAge:
          type: string
          description: The age parameter for automatic reconciliation of mismatched addresses. Reconciliation will be applied to mismatched IP addresses older than this value. Mismatched addresses are addresses that exist in both Address Manager and the physical network, but do not match in either the MAC address, DNS host name info, VLAN info, or connect switch port info.
          example: PT1H
        view:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedView'
    IPv6ReconciliationPolicy:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - IPv6ReconciliationPolicy
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        enabled:
          type: boolean
          description: Indicates whether the reconciliation policy will run at the scheduled time.
          nullable: false
        discoveryMethod:
          type: string
          description: The discovery method for the reconciliation policy.
          nullable: false
          enum:
            - SNMP
            - NO_DISCOVERY
        seedRouterAddresses:
          type: array
          description: The IP address or addresses of the router or layer 3 switch where the network discovery operation is to start.
          items:
            type: string
            description: The IP address or addresses of the router or layer 3 switch where the network discovery operation is to start.
        snmp:
          $ref: '#/components/schemas/SNMP'
        skipFqdnEnabled:
          type: boolean
          description: Indicates whether the Address Manager discovery engine will skip FQDN and reverse DNS lookups.
          nullable: false
        dnsServers:
          type: array
          description: The IP address or addresses for the DNS server(s) that the discovery engine will use to perform FQDN and reverse DNS lookups.
          items:
            type: string
            description: The IP address or addresses for the DNS server(s) that the discovery engine will use to perform FQDN and reverse DNS lookups.
        blackHoleVlan:
          maximum: 4096
          minimum: 1
          type: integer
          description: The VLAN ID for the black hole VLAN. The black hole VLAN is used as a default VLAN for all unused ports.
          format: int32
          nullable: false
        trunkDefaultVlan:
          maximum: 4096
          minimum: 1
          type: integer
          description: The VLAN ID assigned to a trunk as a native/default VLAN to protect controlled traffic from being spoofed.
          format: int32
          nullable: false
        startDateTime:
          type: string
          description: The start time for the reconciliation policy discovery.
          format: date-time
          nullable: false
          example: "2022-11-17T20:11:00Z"
        frequency:
          type: string
          description: The recurring frequency for reconciliation policy discovery.
          example: PT1H
    ReconciliationPolicy:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        enabled:
          type: boolean
          description: Indicates whether the reconciliation policy will run at the scheduled time.
          nullable: false
        discoveryMethod:
          type: string
          description: The discovery method for the reconciliation policy.
          enum:
            - SNMP
            - PINGSWEEP
            - SNMP_PINGSWEEP
            - NO_DISCOVERY
        seedRouterAddresses:
          type: array
          description: The IP address or addresses of the router or layer 3 switch where the network discovery operation is to start.
          items:
            type: string
            description: The IP address or addresses of the router or layer 3 switch where the network discovery operation is to start.
        snmp:
          $ref: '#/components/schemas/SNMP'
        skipFqdnEnabled:
          type: boolean
          description: Indicates whether the Address Manager discovery engine will skip FQDN and reverse DNS lookups.
          nullable: false
        dnsServers:
          type: array
          description: The IP address or addresses for the DNS server(s) that the discovery engine will use to perform FQDN and reverse DNS lookups.
          items:
            type: string
            description: The IP address or addresses for the DNS server(s) that the discovery engine will use to perform FQDN and reverse DNS lookups.
        blackHoleVlan:
          maximum: 4096
          minimum: 1
          type: integer
          description: The VLAN ID for the black hole VLAN. The black hole VLAN is used as a default VLAN for all unused ports.
          format: int32
          nullable: false
        trunkDefaultVlan:
          maximum: 4096
          minimum: 1
          type: integer
          description: The VLAN ID assigned to a trunk as a native/default VLAN to protect controlled traffic from being spoofed.
          format: int32
          nullable: false
        startDateTime:
          type: string
          description: The start time for the reconciliation policy discovery.
          format: date-time
          nullable: false
          example: "2022-11-17T20:11:00Z"
        frequency:
          type: string
          description: The recurring frequency for reconciliation policy discovery.
          example: PT1H
      discriminator:
        propertyName: type
    ResponsePolicy:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ResponsePolicy
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the response policy
          nullable: false
          example: Block Response Policy
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        policyType:
          type: string
          description: The type of response policy configured.
          nullable: false
          enum:
            - ALLOWLIST
            - BLACKHOLE
            - BLOCKLIST
            - REDIRECT
        ttl:
          maximum: 2147483647
          minimum: 0
          type: integer
          description: The TTL value for each type of response policy, in seconds.
          format: int64
          example: 3600
        redirectTarget:
          type: string
          description: For response policies configured as REDIRECT policies, the fully qualified domain name to which users will be redirected.
          example: domain.example.corp
      description: The response policy associated to the response policy zone.
    DatabaseBackupSchedule:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DatabaseBackupSchedule
        name:
          maxLength: 10
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the database backup schedule.
          nullable: false
          example: default
        state:
          type: string
          description: The state of the database backup schedule.
          writeOnly: true
          enum:
            - PENDING
            - QUEUED
            - UNKNOWN
        startDateTime:
          type: string
          description: The start date and time of the database backup schedule.
          format: date-time
          example: "2022-11-23T02:53:03Z"
        interval:
          type: string
          description: The time between scheduled database backups.
          example: P7D
        maxFileCount:
          maximum: 20
          minimum: 2
          type: integer
          description: The maximum number of backup files to preserve on the Address Manager server.
          format: int32
        filePrefix:
          maxLength: 10
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The backup file prefix. The prefix may contain up to 10 alphanumeric characters without spaces.
          example: default
        localBackupsEnabled:
          type: boolean
          description: Indicates whether to save backup files locally on the Address Manager server. Files are stored in the /data/backup directory.
          nullable: false
        remoteBackupsEnabled:
          type: boolean
          description: Indicates whether to save backup files to a remote location via FTP/SFTP. The remote host must be running an FTP/SFTP service.
          nullable: false
        remoteHost:
          maxLength: 255
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The hostname or IPv4/IPv6 address of the remote host. The hostname may contain up to 255 characters without spaces.
        remoteDirectory:
          maxLength: 255
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The directory on the remote host where backup files will be saved. The directory path may contain up to 1024 characters without spaces.
        remoteUser:
          maxLength: 64
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The username used to log in to the remote host. The username may contain up to 64 characters without spaces.
        remotePassword:
          maxLength: 64
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: 'The password used to log in to the remote host. The password may contain up to 64 alphanumeric and special characters, excluding spaces and the following characters: ~ ; $ < > ‘’ \ / “” & , : ^ [ ] ( )'
          writeOnly: true
        transferProtocol:
          type: string
          description: The file transfer protocol used to copy backups to the remote host.
          enum:
            - FTP
            - SFTP
    DeploymentSchedule:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DeploymentSchedule
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        startDateTime:
          type: string
          description: The start date and time of the schedule.
          format: date-time
          nullable: false
          example: "2022-11-23T02:53:03Z"
        interval:
          type: string
          description: The recurring interval of the job. A null interval indicates that the job will only execute at the specified start date and time.
          example: PT1H
        enabled:
          type: boolean
          description: Indicates whether the job will run at the scheduled time.
          nullable: false
        configuration:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Configuration'
        deploymentType:
          type: string
          description: The type of deployment.
          nullable: false
          enum:
            - DifferentialDeployment
            - FullDeployment
            - ValidationDeployment
        deploymentServices:
          minItems: 1
          type: array
          description: The deployment service types.
          nullable: false
          items:
            type: string
            description: The deployment service types.
            enum:
              - DHCPv4
              - DHCPv6
              - DNS
              - TFTP
        servers:
          minItems: 1
          type: array
          description: The list of servers or server groups for the deployment.
          nullable: false
          writeOnly: true
          items:
            $ref: '#/components/schemas/ServerScope'
    Schedule:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        startDateTime:
          type: string
          description: The start date and time of the schedule.
          format: date-time
          nullable: false
          example: "2022-11-23T02:53:03Z"
        interval:
          type: string
          description: The recurring interval of the job. A null interval indicates that the job will only execute at the specified start date and time.
          example: PT1H
        enabled:
          type: boolean
          description: Indicates whether the job will run at the scheduled time.
          nullable: false
      discriminator:
        propertyName: type
    AnycastService:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - AnycastService
        serverVersion:
          type: string
          description: The DNS/DHCP Server software version.
          readOnly: true
        enabled:
          type: boolean
          description: Indicates whether the Anycast service is enabled.
          nullable: false
        manualOverrideEnabled:
          type: boolean
          description: Indicates whether the Anycast service configuration has been manually overridden.
          readOnly: true
        addresses:
          minItems: 1
          type: array
          description: The Anycast IP addresses.
          nullable: false
          items:
            type: string
            description: The Anycast IP addresses.
        routing:
          $ref: '#/components/schemas/RoutingProtocolBean'
    ArcSightServerBean:
      type: object
      allOf:
        - $ref: '#/components/schemas/SyslogRedirectionServerBean'
    BGPNeighbor:
      type: object
      properties:
        autonomousSystemNumber:
          maximum: 4294967295
          minimum: 1
          type: integer
          description: The Autonomous System Number (ASN) of the remote network containing the IPv4/IPv6 BGP peer.
          format: int64
          nullable: false
        address:
          type: string
          description: The IPv4/IPv6 address of the BGP router peering with the Anycast DNS server.
          nullable: false
        authenticationPassword:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The alphanumeric password to enable MD5 authentication in BGP communication with neighboring IPv4/IPv6 routers.
        hopLimit:
          maximum: 255
          minimum: 1
          type: integer
          description: The number of hops permitted from the Anycast DNS server and its closest peer via IPv4/IPv6.
          format: int32
        announceNextHopSelfEnabled:
          type: boolean
          description: Indicates whether the Announce next-hop-self option is enabled. If enabled, the DNS server advertises its IPv4/IPv6 peering address to the BGP peer as the next hop for all IPv4/IPv6 routes distributed by the DNS server.
      description: The IPv4/IPv6 BGP neighbors (peers).
    BGPPrefixFilter:
      type: object
      properties:
        filterType:
          type: string
          description: The type of BGP prefix filter.
          nullable: false
          enum:
            - INPUTv4
            - OUTPUTv4
            - INPUTv6
            - OUTPUTv6
        action:
          type: string
          description: The action to take on the filtered prefixes.
          nullable: false
          enum:
            - PERMIT
            - DENY
        prefix:
          type: string
          description: The IP address prefix to filter.
          nullable: false
          example: 192.168.0.0/24
      description: The anycast BGP prefix list.
    BgpRoutingProtocolBean:
      type: object
      allOf:
        - $ref: '#/components/schemas/RoutingProtocolBean'
        - type: object
          properties:
            autonomousSystemNumber:
              maximum: 4294967295
              minimum: 1
              type: integer
              description: The BGP local Autonomous System Number (ASN).
              format: int64
              nullable: false
            routerId:
              type: string
              description: The IPv4 address of the BGP router peering with the Anycast DNS server.
            commandLineInterfaceEnabled:
              type: boolean
              description: Indicates whether the BGP command-line interface is enabled.
              nullable: false
            commandLineInterfacePassword:
              type: string
              description: The Telnet password to access the BGP command-line interface.
            keepAliveInterval:
              type: string
              description: The frequency (in seconds) that keepalive notifications are sent to the BGP peer.
              nullable: false
            holdTimeInterval:
              type: string
              description: The interval (in seconds) after not receiving a keepalive notification that a BGP peer is declared dead.
              nullable: false
            neighbors:
              minItems: 1
              type: array
              description: The IPv4/IPv6 BGP neighbors (peers).
              nullable: false
              items:
                $ref: '#/components/schemas/BGPNeighbor'
            prefixFilters:
              type: array
              description: The anycast BGP prefix list.
              nullable: false
              items:
                $ref: '#/components/schemas/BGPPrefixFilter'
    ContainerMountPointBean:
      type: object
      properties:
        source:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The DNS/DHCP Server directory that is bind mounted to the container.
          nullable: false
        containerPath:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The container directory that is mapped to the DNS/DHCP Server directory.
          nullable: false
      description: The directories to bind mount to the Gateway container.
    ContainerPortMappingBean:
      type: object
      properties:
        hostPort:
          maximum: 65535
          minimum: 1
          type: integer
          description: The DNS/DHCP Server port that is mapped to the container port.
          format: int32
          nullable: false
        containerPort:
          maximum: 65535
          minimum: 1
          type: integer
          description: The host container port that is mapped to the DNS/DHCP Server port.
          format: int32
          nullable: false
      description: The list of ports to map between the DNS/DHCP Server service host and the Gateway container.
    DHCPActivityService:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DHCPActivityService
        serverVersion:
          type: string
          description: The DNS/DHCP Server software version.
          readOnly: true
        enabled:
          type: boolean
          description: Indicates whether the health telemetry service is enabled.
          nullable: false
        maxBufferedEvents:
          maximum: 101588000
          minimum: 1
          type: integer
          description: The maximum number of events to be stored in the memory buffer.
          format: int64
          nullable: false
        destination:
          $ref: '#/components/schemas/SinkBean'
        dhcpv4Enabled:
          type: boolean
          description: Indicates whether DHCP Activity service is enabled to retrieve DHCPv4 activity information.
          nullable: false
        dhcpv6Enabled:
          type: boolean
          description: Indicates whether DHCP Activity service is enabled to retrieve DHCPv6 activity information.
          nullable: false
    DHCPStatisticsService:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DHCPStatisticsService
        serverVersion:
          type: string
          description: The DNS/DHCP Server software version.
          readOnly: true
        enabled:
          type: boolean
          description: Indicates whether the health telemetry service is enabled.
          nullable: false
        maxBufferedEvents:
          maximum: 188235000
          minimum: 1
          type: integer
          description: The maximum number of events to be stored in the memory buffer.
          format: int64
          nullable: false
        destination:
          $ref: '#/components/schemas/SinkBean'
        dhcpv4Enabled:
          type: boolean
          description: Indicates whether DHCP Statistics service is enabled to retrieve DHCPv4 statistics information.
          nullable: false
        dhcpv6Enabled:
          type: boolean
          description: Indicates whether DHCP Statistics service is enabled to retrieve DHCPv6 statistics information.
          nullable: false
    DNSActivityService:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DNSActivityService
        serverVersion:
          type: string
          description: The DNS/DHCP Server software version.
          readOnly: true
        enabled:
          type: boolean
          description: Indicates whether the health telemetry service is enabled.
          nullable: false
        maxBufferedEvents:
          maximum: 64000000
          minimum: 1
          type: integer
          description: The maximum number of events to be stored in the memory buffer.
          format: int64
          nullable: false
        destination:
          $ref: '#/components/schemas/SinkBean'
        filters:
          type: array
          description: A list of filters applied to DNS events to exclude data from being logged.
          nullable: false
          items:
            $ref: '#/components/schemas/DnsActivityFilterBean'
    DNSResolverService:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DNSResolverService
        serverVersion:
          type: string
          description: The DNS/DHCP Server software version.
          readOnly: true
        servers:
          type: array
          description: The list of IP addresses of DNS resolvers.
          nullable: false
          items:
            type: string
            description: The list of IP addresses of DNS resolvers.
    DNSStatisticsService:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DNSStatisticsService
        serverVersion:
          type: string
          description: The DNS/DHCP Server software version.
          readOnly: true
        enabled:
          type: boolean
          description: Indicates whether the health telemetry service is enabled.
          nullable: false
        maxBufferedEvents:
          maximum: 36436000
          minimum: 1
          type: integer
          description: The maximum number of events to be stored in the memory buffer.
          format: int64
          nullable: false
        destination:
          $ref: '#/components/schemas/SinkBean'
        pollingInterval:
          type: string
          description: The frequency at which the DNS/DHCP Server is polled for DNS statistics events.
          nullable: false
    DnsActivityDomainNameFilterBean:
      type: object
      allOf:
        - $ref: '#/components/schemas/DnsActivityFilterBean'
        - type: object
          properties:
            value:
              type: string
              description: The pattern that matches domain names to exclude
              nullable: false
              example: '*-host.example.com'
    DnsActivityFilterBean:
      type: object
      properties:
        category:
          type: string
          description: The category of DNS events to exclude from logging
          nullable: false
          enum:
            - DOMAIN_NAME
            - QUERY
            - RESPONSE
            - SOURCE_ADDRESS
      description: A list of filters applied to DNS events to exclude data from being logged.
      discriminator:
        propertyName: category
    DnsActivityQueryFilterBean:
      type: object
      allOf:
        - $ref: '#/components/schemas/DnsActivityFilterBean'
        - type: object
          properties:
            value:
              type: string
              description: The DNS message type that is excluded
              nullable: false
              enum:
                - ALL
                - CLIENT
                - AUTH
                - RESOLVER
                - FORWARDER
                - UPDATE
    DnsActivityResponseFilterBean:
      type: object
      allOf:
        - $ref: '#/components/schemas/DnsActivityFilterBean'
        - type: object
          properties:
            value:
              type: string
              description: The DNS message type that is excluded
              nullable: false
              enum:
                - ALL
                - CLIENT
                - AUTH
                - RESOLVER
                - FORWARDER
                - UPDATE
    DnsActivitySourceAddressFilterBean:
      type: object
      allOf:
        - $ref: '#/components/schemas/DnsActivityFilterBean'
        - type: object
          properties:
            value:
              type: string
              description: The IPv4 or IPv6 block to be excluded from being logged
              nullable: false
              example: 192.0.2.0/24
    ElasticsearchSinkBean:
      type: object
      allOf:
        - $ref: '#/components/schemas/SinkBean'
        - type: object
          properties:
            url:
              type: string
              description: The URL of the Elasticsearch endpoint receiving the telemetry information.
              nullable: false
            index:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The Elasticsearch index name to which events are written.
              nullable: false
            username:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The basic authentication user name.
              nullable: false
            password:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The basic authentication password.
    FailoverAPIService:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - FailoverAPIService
        serverVersion:
          type: string
          description: The DNS/DHCP Server software version.
          readOnly: true
        enabled:
          type: boolean
          description: Indicates whether the Address Manager Failover API service is enabled.
          nullable: false
        certificate:
          type: string
          description: The Base64 encoded X.509 Address Manager server certificate.
          format: byte
        privateKey:
          type: string
          description: The Base64 encoded private key of the Address Manager server.
          format: byte
        trustStore:
          type: array
          description: The Base64 encoded Java keystore file (.jks) containing the root and any intermediate certificates required to verify the client certificate used in the failover API call.
          format: byte
          items:
            type: string
            description: The Base64 encoded Java keystore file (.jks) containing the root and any intermediate certificates required to verify the client certificate used in the failover API call.
            format: byte
        trustStorePassword:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The password for the truststore file.
    FirewallService:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - FirewallService
        serverVersion:
          type: string
          description: The DNS/DHCP Server software version.
          readOnly: true
        enabled:
          type: boolean
          description: Indicates whether the firewall service is enabled.
          nullable: false
        pingAllowed:
          type: boolean
          description: Indicates whether the server responds to the ping command.
          nullable: false
    GatewayContainerBean:
      type: object
      properties:
        name:
          type: string
          description: The name of the Gateway instance deployed to the DNS/DHCP Server.
          readOnly: true
        image:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The Gateway image deployed on the DNS/DHCP Server.
          nullable: false
        environmentVariables:
          minItems: 1
          type: array
          description: The environment variables to set for the container during startup.
          nullable: false
          items:
            $ref: '#/components/schemas/NameValuePairBean'
        portMappings:
          minItems: 1
          type: array
          description: The list of ports to map between the DNS/DHCP Server service host and the Gateway container.
          nullable: false
          items:
            $ref: '#/components/schemas/ContainerPortMappingBean'
        mountPoints:
          minItems: 1
          type: array
          description: The directories to bind mount to the Gateway container.
          nullable: false
          items:
            $ref: '#/components/schemas/ContainerMountPointBean'
      description: The Gateway container deployed to the DNS/DHCP Server.
    GatewayService:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - GatewayService
        serverVersion:
          type: string
          description: The DNS/DHCP Server software version.
          readOnly: true
        enabled:
          type: boolean
          description: Indicates whether the Gateway service is enabled.
          nullable: false
        state:
          type: string
          description: The status of the Gateway service running on the DNS/DHCP Server.
          enum:
            - RUNNING
            - STOPPED
            - DISABLED
            - UNKNOWN
        container:
          $ref: '#/components/schemas/GatewayContainerBean'
        repositoryUsername:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The docker username used to pull the Gateway image from the container repository.
        repositoryPassword:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The docker password used to pull the image from a private repository.
        deleteImageOnDisable:
          type: boolean
          description: Indicates whether the Gateway image is removed upon disabling the Gateway service.
        deleteMountPointsOnDisable:
          type: boolean
          description: Indicates whether the local volumes and the mounted data and log directories are removed upon disabling the Gateway service.
    HttpSinkBean:
      type: object
      allOf:
        - $ref: '#/components/schemas/SinkBean'
        - type: object
          properties:
            url:
              type: string
              description: The URL of the HTTP endpoint receiving the telemetry information.
              nullable: false
            token:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The bearer token used to authenticate with the HTTP endpoint.
            healthCheckUrl:
              type: string
              description: The URL of the HTTP endpoint receiving the health check information.
    IPAddressAndPrefix:
      type: object
      properties:
        address:
          type: string
          description: The IP address.
          nullable: false
        prefixLength:
          maximum: 128
          minimum: 0
          type: integer
          description: The CIDR prefix length.
          format: int32
          nullable: false
        prefix:
          type: integer
          format: int32
          writeOnly: true
      description: The IP addresses of the interface.
    InterfaceBean:
      type: object
      properties:
        interfaceType:
          type: string
          description: The interface type.
          nullable: false
          enum:
            - LOOPBACK
            - PHYSICAL
            - VLAN
            - BOND
        name:
          type: string
          description: The name of the interface.
          readOnly: true
        enabled:
          type: boolean
          description: Indicates whether the interface is enabled.
          nullable: false
        description:
          type: string
          description: The description of the interface.
        addresses:
          type: array
          description: The IP addresses of the interface.
          nullable: false
          items:
            $ref: '#/components/schemas/IPAddressAndPrefix'
        vlanId:
          maximum: 4096
          minimum: 1
          type: integer
          description: The VLAN ID of the interface.
          format: int32
        redundancyScenario:
          type: string
          description: The network redundancy scenario that is enabled for the interface.
          enum:
            - ACTIVE_BACKUP
            - ACTIVE_ACTIVE
      description: The server interfaces.
    InterfacesService:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - InterfacesService
        serverVersion:
          type: string
          description: The DNS/DHCP Server software version.
          readOnly: true
        dedicatedManagementEnabled:
          type: boolean
          description: Indicates whether dedicated management is enabled on the server.
          nullable: false
        interfaces:
          type: array
          description: The server interfaces.
          nullable: false
          items:
            $ref: '#/components/schemas/InterfaceBean'
        routes:
          type: array
          description: The static routes configured on the server.
          nullable: false
          items:
            $ref: '#/components/schemas/RouteBean'
    KafkaSinkBean:
      type: object
      allOf:
        - $ref: '#/components/schemas/SinkBean'
        - type: object
          properties:
            hosts:
              minItems: 1
              type: array
              description: The list of host and port pairs that are the addresses of the Kafka brokers in a bootstrap Kafka cluster that a Kafka client connects to initially to bootstrap itself.
              nullable: false
              items:
                type: string
                description: The list of host and port pairs that are the addresses of the Kafka brokers in a bootstrap Kafka cluster that a Kafka client connects to initially to bootstrap itself.
            topic:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The name of the Kafka topic to which events are written.
              nullable: false
            keyField:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The log field name or tags key used for the topic key.
    LicenseService:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - LicenseService
        serverVersion:
          type: string
          description: The DNS/DHCP Server software version.
          readOnly: true
        clientId:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The client ID of the installed license.
          nullable: false
        key:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The license key.
          nullable: false
    NTPServer:
      type: object
      properties:
        server:
          type: string
          description: The FQDN or IP address of the remote NTP server.
          nullable: false
          example: 10.10.10.10
        stratum:
          maximum: 15
          minimum: 1
          type: integer
          description: The stratum value for the NTP server. The value will be associated to an individual NTP server. Stratum values indicate the hierarchy level for the NTP server, which is the number of servers to a reference clock used to avoid synchronization loops by preferring servers with a lower stratum.
          format: int32
          example: 2
      description: The list of NTP servers to synchronize with.
    NTPService:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - NTPService
        serverVersion:
          type: string
          description: The DNS/DHCP Server software version.
          readOnly: true
        enabled:
          type: boolean
          description: Indicates whether the NTP service is enabled.
          nullable: false
        manualOverrideEnabled:
          type: boolean
          description: Indicates whether the NTP service configuration has been manually overridden.
          readOnly: true
        servers:
          type: array
          description: The list of NTP servers to synchronize with.
          nullable: false
          items:
            $ref: '#/components/schemas/NTPServer'
    OspfRoutingProtocolBean:
      type: object
      allOf:
        - $ref: '#/components/schemas/RoutingProtocolBean'
        - type: object
          properties:
            authenticationEnabled:
              type: boolean
              description: Indicates whether authentication is enabled.
              nullable: false
            authenticationPassword:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The password for authentication.
              example: P@ssw0rd
            authenticationKey:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The authentication key used for OSPF. The authentication key is used to compute the MD5 hash that is used to authenticate OSPF packets.
              example: 0SPFauthKey
            deadInterval:
              type: string
              description: The length of time that the peer/neighbor router will maintain a route to the primary router in the absence of hello messages.
              example: PT1M
            helloInterval:
              type: string
              description: The length of time that the primary router contacts its peer/neighbor to indicate that it's still active.
              example: PT20S
            areaId:
              type: string
              description: The OSPF area ID.
              nullable: false
              example: 0.0.0.1
            stubArea:
              type: boolean
              description: Indicates whether an OSPF subnet is used.
              nullable: false
            password:
              type: string
              writeOnly: true
    QradarServerBean:
      type: object
      allOf:
        - $ref: '#/components/schemas/SyslogRedirectionServerBean'
    RipRoutingProtocolBean:
      type: object
      allOf:
        - $ref: '#/components/schemas/RoutingProtocolBean'
        - type: object
          properties:
            authenticationEnabled:
              type: boolean
              description: Indicates whether authentication is enabled.
              nullable: false
            authenticationPassword:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The authentication for authentication.
    RouteBean:
      type: object
      properties:
        gateway:
          type: string
          description: The IP address of the gateway of the static route.
          nullable: false
        network:
          type: string
          description: The IP address of the network segment of the static route.
        prefixLength:
          maximum: 128
          minimum: 0
          type: integer
          description: The prefix length of the network segment of the static route.
          format: int32
          nullable: false
      description: The static routes configured on the server.
    RoutingProtocolBean:
      type: object
      properties:
        protocol:
          type: string
          description: The Anycast routing protocol.
          nullable: false
          enum:
            - OSPF
            - RIP
            - BGP
      description: The Anycast routing protocol configuration.
      discriminator:
        propertyName: protocol
    SNMPService:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - SNMPService
        serverVersion:
          type: string
          description: The DNS/DHCP Server software version.
          readOnly: true
        enabled:
          type: boolean
          description: Indicates whether the SNMP service is enabled.
          nullable: false
        manualOverrideEnabled:
          type: boolean
          description: Indicates whether the SNMP service configuration has been manually overridden.
          readOnly: true
        contactName:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The system name to be reported through SNMP.
          nullable: false
          example: BlueCat
        contactEmail:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The email address for the system contact to be reported through SNMP.
          nullable: false
          example: admin@examplecorp.com
        location:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The description of the system's location to be reported through SNMP.
          nullable: false
          example: Toronto Office
        description:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The description of the system to be reported through SNMP.
          nullable: false
          example: IT department
        pollingInterval:
          type: string
          description: The SNMP polling interval, in ISO 8601 duration format, that determines the frequency that SNMP values are refreshed on the system.
          nullable: false
          example: PT30S
        logLevel:
          type: string
          description: The logging level for SNMP events.
          nullable: false
          enum:
            - CRITICAL
            - ERROR
            - WARNING
            - INFO
            - DEBUG
        snmpv1:
          $ref: '#/components/schemas/Snmpv1Bean'
        snmpv2c:
          $ref: '#/components/schemas/Snmpv2cBean'
        snmpv3:
          $ref: '#/components/schemas/Snmpv3Bean'
        trapServers:
          maxItems: 10
          minItems: 0
          type: array
          description: The SNMP trap server configuration.
          nullable: false
          items:
            $ref: '#/components/schemas/SNMPTrapServer'
    SNMPTrapServer:
      type: object
      properties:
        enabled:
          type: boolean
          description: Indicates whether the SNMP trap server is enabled.
          nullable: false
        address:
          type: string
          description: The IP address of the SNMP trap server.
          nullable: false
          example: 10.10.10.10
        port:
          maximum: 65535
          minimum: 1
          type: integer
          description: The SNMP trap server port.
          format: int32
          nullable: false
          example: 334
        snmp:
          $ref: '#/components/schemas/SNMP'
      description: The SNMP trap server configuration.
    SSHService:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - SSHService
        serverVersion:
          type: string
          description: The DNS/DHCP Server software version.
          readOnly: true
        enabled:
          type: boolean
          description: Indicates whether the SSH service is enabled.
          nullable: false
        tacacsPlusAuthentication:
          $ref: '#/components/schemas/TACACSPlusAuthentication'
    Service:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        serverVersion:
          type: string
          description: The DNS/DHCP Server software version.
          readOnly: true
      discriminator:
        propertyName: type
    SinkBean:
      type: object
      properties:
        sinkType:
          type: string
          description: The output sink type.
          nullable: false
          enum:
            - ELASTICSEARCH
            - HTTP
            - KAFKA
            - SPLUNK
        healthCheckEnabled:
          type: boolean
          description: Indicates whether health check service is enabled on the downstream sink server.
          nullable: false
        caCertificate:
          type: string
          description: The CA certificate used to authenticate with the remote host.
          format: byte
        certificateVerificationEnabled:
          type: boolean
          description: Indicates whether the server attempts a TLS handshake using the uploaded CA certificate with the remote host's TLS server certificate.
          nullable: false
        hostnameVerificationEnabled:
          type: boolean
          description: Indicates whether the server validates the hostname part of the URI against the CN (Common Name) or SAN (Subject Alternative Name) of the server certificate during the TLS handshake.
          nullable: false
      description: The destination endpoint that consumes the audit data.
      discriminator:
        propertyName: sinkType
    SplunkSinkBean:
      type: object
      allOf:
        - $ref: '#/components/schemas/SinkBean'
        - type: object
          properties:
            url:
              type: string
              description: The URI of the Splunk HEC host.
              nullable: false
              example: https://10.10.10.10:8432
            token:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The Splunk HEC token.
              nullable: false
              example: ABCD0123-4567-890A-BCDE-F0123456789A
    SyslogRedirectionServerBean:
      type: object
      properties:
        serverType:
          type: string
          description: The syslog redirection server type.
          nullable: false
          enum:
            - SYSLOG
            - ARC_SIGHT
            - QRADAR
        address:
          type: string
          description: The IP address of the syslog server.
          nullable: false
      description: The list of servers to redirect syslog messages to.
      discriminator:
        propertyName: serverType
    SyslogServerBean:
      type: object
      allOf:
        - $ref: '#/components/schemas/SyslogRedirectionServerBean'
        - type: object
          properties:
            port:
              maximum: 65535
              minimum: 1
              type: integer
              description: The port used to connect to the syslog server.
              format: int32
              nullable: false
            syslogProtocol:
              type: string
              description: The syslog protocol used to format syslog messages.
              enum:
                - RFC_5424
                - RFC_3164
            severityLevel:
              type: string
              description: The severity level of messages that are sent to the syslog server.
              nullable: false
              enum:
                - EMERGENCY
                - ALERT
                - CRITICAL
                - ERROR
                - WARNING
                - NOTICE
                - INFORMATIONAL
            transport:
              $ref: '#/components/schemas/SyslogTransportBean'
            iso8601TimestampsEnabled:
              type: boolean
              description: Indicates whether the ISO 8601 timestamp format is used for syslog messages.
            serviceTypes:
              minItems: 1
              type: array
              description: The services for which syslog messages are generated.
              nullable: false
              items:
                type: string
                description: The services for which syslog messages are generated.
                enum:
                  - DNS
                  - DHCP
                  - APIV1
                  - APIV2
                  - OTHERS
    SyslogService:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - SyslogService
        serverVersion:
          type: string
          description: The DNS/DHCP Server software version.
          readOnly: true
        manualOverrideEnabled:
          type: boolean
          description: Indicates whether the syslog redirection service configuration has been manually overridden.
          readOnly: true
        iso8601TimestampsEnabled:
          type: boolean
          description: Indicates whether the ISO 8601 date time format is used when logging timestamps.
        servers:
          type: array
          description: The list of servers to redirect syslog messages to.
          nullable: false
          items:
            $ref: '#/components/schemas/SyslogRedirectionServerBean'
    SyslogTransportBean:
      type: object
      properties:
        protocol:
          type: string
          description: The syslog transport protocol.
          nullable: false
          enum:
            - UDP
            - TCP
            - TLS
      description: The transport settings used to connect to the syslog server.
      discriminator:
        propertyName: protocol
    TACACSGroup:
      type: object
      properties:
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the TACACS+ group.
          nullable: false
          example: global
        executables:
          type: array
          nullable: false
          items:
            type: string
            description: The path to a command that is granted to the TACACS+ group.
            example: /usr/bin/tail
      description: The list of TACACS+ groups that can authenticate against the TACACS+ server.
    TACACSPlusAuthentication:
      type: object
      properties:
        enabled:
          type: boolean
          description: Indicates whether TACACS+ authentication is enabled.
          nullable: false
        server:
          type: string
          description: The hostname or IP address of the TACACS+ server used for authentication.
          example: host1.example.com
        sharedSecret:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The shared secret used to encrypt and decrypt the patckets between the client and the server.
          example: Shar3dS3cret!
        users:
          type: array
          description: The list of users that can authenticate against the TACACS+ server.
          nullable: false
          items:
            $ref: '#/components/schemas/TACACSUser'
        groups:
          type: array
          description: The list of TACACS+ groups that can authenticate against the TACACS+ server.
          nullable: false
          items:
            $ref: '#/components/schemas/TACACSGroup'
      description: The TACACS+ configuration used for authentication.
    TACACSUser:
      type: object
      properties:
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the TACACS+ user.
          nullable: false
          example: user1
        memberOf:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the TACACS+ group that the user is a member of.
          nullable: false
          example: global
        executables:
          type: array
          nullable: false
          items:
            type: string
            description: The path to a command that is granted to the TACACS+ user.
            example: /usr/bin/tail
      description: The list of users that can authenticate against the TACACS+ server.
    TcpSyslogTransportBean:
      type: object
      allOf:
        - $ref: '#/components/schemas/SyslogTransportBean'
    TlsSyslogTransportBean:
      type: object
      allOf:
        - $ref: '#/components/schemas/SyslogTransportBean'
        - type: object
          properties:
            peerVerify:
              type: string
              description: The verification method of the remote peer.
              nullable: false
              enum:
                - REQUIRED_TRUSTED
                - REQUIRED_UNTRUSTED
                - OPTIONAL_TRUSTED
                - OPTIONAL_UNTRUSTED
            caCertificate:
              type: string
              description: The CA certificate used to verify the server certificate during the TLS handshake.
              format: byte
            certificate:
              type: string
              description: The client certificate used for authentication.
              format: byte
            privateKey:
              type: string
              description: The client private key used for authentication.
              format: byte
    UdpSyslogTransportBean:
      type: object
      allOf:
        - $ref: '#/components/schemas/SyslogTransportBean'
    UserSession:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - UserSession
        username:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The username used to initiate the session.
          nullable: false
          writeOnly: true
          example: admin
        password:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The associated password for the username used to initiate the session.
          nullable: false
          writeOnly: true
          example: password
        apiToken:
          type: string
          description: The API token of the user session.
          readOnly: true
          example: VZoO2Z0BjBaJyvuhE4vNJRWqI9upwDHk70UNi0Ez
        apiTokenExpirationDateTime:
          type: string
          description: The timestamp of the API token expiration.
          format: date-time
          readOnly: true
          example: "2022-09-15T17:52:07Z"
        remoteAddress:
          type: string
          description: The IP address of the device that initiated the user session.
          readOnly: true
          example: 192.168.1.1
        readOnly:
          type: boolean
          description: Indicates whether the initiated session is a read-only session. When database replication is configured between Address Manager servers, you can initiate a read-only session to call API methods with read-only support and retrieve information from the Secondary or Tertiary Address Manager server.
        loginDateTime:
          type: string
          description: A timestamp of when the session was initiated.
          format: date-time
          readOnly: true
          example: "2022-09-14T17:45:03Z"
        logoutDateTime:
          type: string
          description: A timestamp of when the session was terminated.
          format: date-time
          readOnly: true
          example: "2022-09-14T19:45:03Z"
        state:
          type: string
          description: The state of the user session.
          enum:
            - LOGGED_IN
            - LOGGED_OUT
            - TIMED_OUT
            - EXPIRED
            - LOGIN_FAIL
            - TERMINATED
        response:
          type: string
          description: The response from the authenticated user session.
          example: 'Authentication Error: Ensure that your username and password are correct.'
        user:
          $ref: '#/components/schemas/User'
        authenticator:
          $ref: '#/components/schemas/Authenticator'
    AddressManagerMonitoringBean:
      type: object
      properties:
        enabled:
          type: boolean
          description: Indicates whether Address Manager monitoring service is enabled.
          nullable: false
        address:
          type: string
          description: The IP address or fully-qualified domain name of the monitoring server.
        pollingInterval:
          type: string
          description: The time between polls performed by the monitoring service to Address Manager.
          nullable: false
        snmp:
          $ref: '#/components/schemas/SNMP'
      description: The Address Manager monitoring service settings.
    AuditDataSettings:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - AuditDataSettings
        administrativeHistoryRetentionPeriod:
          type: string
          description: The number of days to retain the administrative history records. A null retention period indicates that the data will be retained indefinitely.
          example: PT360H
        sessionAndEventsRetentionPeriod:
          type: string
          description: The number of days to retain the session and event history records. A null retention period indicates that the data will be retained indefinitely.
          example: PT360H
        dhcpTransactionRetentionPeriod:
          type: string
          description: The number of days to retain the DHCP transaction history records. A null retention period indicates that the data will be retained indefinitely. A retention period of 0 seconds indicates that the data wil not be retained.
          example: PT360H
        ddnsTransactionRetentionPeriod:
          type: string
          description: The number of days to retain the DDNS transaction history records. A null retention period indicates that the data will be retained indefinitely. A retention period of 0 seconds indicates that the data wil not be retained.
          example: PT360H
        exportEnabled:
          type: boolean
          description: Indicates if the audit data export service is enabled.
          nullable: false
        destination:
          $ref: '#/components/schemas/SinkBean'
    DHCPAlertSettings:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DHCPAlertSettings
        lowWaterMark:
          maximum: 100
          minimum: 0
          type: integer
          description: A DHCP alert is triggered when usage falls below this percentage (when too few addresses are in use).
          format: int32
          nullable: false
          example: 15
        highWaterMark:
          maximum: 100
          minimum: 0
          type: integer
          description: A DHCP alert is triggered when usage exceeds this percentage (when too many addresses are in use).
          format: int32
          nullable: false
          example: 95
        pollingInterval:
          type: string
          description: The time between DHCP usage polls performed by the alert service
          nullable: false
          example: PT6H
    F5ServerMonitoringBean:
      type: object
      properties:
        enabled:
          type: boolean
          description: Indicates whether BIG-IP DNS/LTM monitoring service is enabled.
          nullable: false
        pollingInterval:
          type: string
          description: The time between polls performed by the monitoring service to the BIG-IP DNS/LTM server.
          nullable: false
      description: The BIG-IP DNS/LTM monitoring service settings.
    GlobalSettings:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - GlobalSettings
        mandatoryCommentsEnabled:
          type: boolean
          description: Indicates whether users must provide a change control comment when creating, editing, or deleting resources.
          nullable: false
        rememberLastAddressEnabled:
          type: boolean
          description: Indicates whether the Address Manager UI Quick Actions widget will automatically provide the subsequent IPv4 address when adding host records.
          nullable: false
        sessionTimeout:
          type: string
          description: The maximum time period of user inactivity before a session is terminated.
          nullable: false
          example: PT20M
        disclaimerEnabled:
          type: boolean
          description: Indicates whether a disclaimer will display on the Address Manager UI login page with the contents of disclaimerText.
          nullable: false
        disclaimerText:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The disclaimer text or HTML for display on the Address Manager UI login page. If adding or editing disclaimer HTML through JSON, ensure that reserved characters are escaped.
          example: Example UI disclaimer message.
        customReverseZoneFormatsAllowed:
          type: boolean
          description: Indicates whether users can set a custom reverse zone name format in DNS deployment options.
          nullable: false
    InlinedX509Authenticator:
      title: X509Authenticator
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of authenticator.
          enum:
            - X509Authenticator
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name for the authenticator.
          nullable: false
          example: LDAP authenticator
    LogLevelSettings:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - LogLevelSettings
        addressManager:
          type: string
          description: The Address Manager log level.
          nullable: false
          enum:
            - "OFF"
            - FATAL
            - ERROR
            - WARN
            - INFO
            - DEBUG
            - TRACE
            - ALL
        restV2:
          type: string
          description: The RESTful v2 API log level.
          nullable: false
          enum:
            - "OFF"
            - FATAL
            - ERROR
            - WARN
            - INFO
            - DEBUG
            - TRACE
            - ALL
        zoneImport:
          type: string
          description: The Zone Import log level.
          nullable: false
          enum:
            - "OFF"
            - FATAL
            - ERROR
            - WARN
            - INFO
            - DEBUG
            - TRACE
            - ALL
        reconciliationService:
          type: string
          description: The Reconcilliation Service log level.
          nullable: false
          enum:
            - "OFF"
            - FATAL
            - ERROR
            - WARN
            - INFO
            - DEBUG
            - TRACE
            - ALL
        discoveryEngine:
          type: string
          description: The Discovery Engine log level.
          nullable: false
          enum:
            - "OFF"
            - FATAL
            - ERROR
            - WARN
            - INFO
            - DEBUG
            - TRACE
            - ALL
        snmpClient:
          type: string
          description: The SNMP Client log level.
          nullable: false
          enum:
            - "OFF"
            - FATAL
            - ERROR
            - WARN
            - INFO
            - DEBUG
            - TRACE
            - ALL
        monitoringService:
          type: string
          description: The Monitoring Service log level.
          nullable: false
          enum:
            - "OFF"
            - FATAL
            - ERROR
            - WARN
            - INFO
            - DEBUG
            - TRACE
            - ALL
        rrdTool:
          type: string
          description: The RRD Tool Update/Graph log level.
          nullable: false
          enum:
            - "OFF"
            - FATAL
            - ERROR
            - WARN
            - INFO
            - DEBUG
            - TRACE
            - ALL
    LoginPolicySettings:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - LoginPolicySettings
        enabled:
          type: boolean
          description: Indicates whether a custom login policy is enabled.
          nullable: false
        failureLimit:
          maximum: 100
          minimum: 1
          type: integer
          description: The limit for consecutive failed login attempts that results in a login delay.
          format: int32
          nullable: false
        failureLimitPeriod:
          type: string
          description: The timespan in which consecutive failed login attempts count towards the failure limit.
          nullable: false
        delayDuration:
          type: string
          description: The amount of time that a user must wait before they can attempt to log in after exceeding the login policy failure conditions.
          nullable: false
    MonitoringSettings:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - MonitoringSettings
        addressManagerMonitoring:
          $ref: '#/components/schemas/AddressManagerMonitoringBean'
        serverMonitoring:
          $ref: '#/components/schemas/ServerMonitoringBean'
        f5ServerMonitoring:
          $ref: '#/components/schemas/F5ServerMonitoringBean'
    PasswordPolicySettings:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - PasswordPolicySettings
        enabled:
          type: boolean
          description: Indicates whether a custom password policy is enabled.
          nullable: false
        minLength:
          minimum: 1
          type: integer
          description: The minimum length that the password must be.
          format: int32
          example: 8
        maxLength:
          minimum: 1
          type: integer
          description: The maximum length that the password can be.
          format: int32
          example: 32
        digitRequired:
          type: boolean
          description: Indicates whether the password must contain at least one digit.
          nullable: false
        mixedCaseRequired:
          type: boolean
          description: Indicates whether the password must contain mixed case letters.
          nullable: false
        specialCharacterRequired:
          type: boolean
          description: Indicates whether the password must contain at least one special character.
          nullable: false
    SAMLServiceProviderSettings:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - SAMLServiceProviderSettings
        addressManagerAbsoluteName:
          type: string
          description: The fully qualified domain name of the Address Manager server.
          nullable: false
          example: example.com
        metadataUrl:
          type: string
          description: The identifier of the service provider entity.
          readOnly: true
          example: https://example.com/sso/metadata
        consumeUrl:
          type: string
          description: The URL location where the response from the IdP will be returned to the service provider.
          readOnly: true
          example: https://example.com/sso/consume
        logoutUrl:
          type: string
          description: The URL location where the logout response message will be returned to the service provider.
          readOnly: true
          example: https://example.com/sso/logout
        nameIdFormat:
          type: string
          description: The specified constraints on the name identifier format used to represent the requested subject.
          nullable: false
          enum:
            - UNSPECIFIED
            - EMAIL_ADDRESS
            - ENTITY
            - TRANSIENT
            - PERSISTENT
            - ENCRYPTED
            - X509_SUBJECTNAME
            - WIN_QUALIFIED_NAME
            - KERBEROS
        signingEnabled:
          type: boolean
          description: Indicates whether the message sent by the service provider will be signed.
          nullable: false
        encryptionEnabled:
          type: boolean
          description: Indicates the requirement for assertions received by the service provider to be encrypted.
          nullable: false
        keyStore:
          type: array
          description: 'The Base64 encoded PKCS #12 archive containing the public and private key.'
          format: byte
          writeOnly: true
          items:
            type: string
            description: 'The Base64 encoded PKCS #12 archive containing the public and private key.'
            format: byte
        keyStorePassword:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: 'The password for the PKCS #12 file.'
          writeOnly: true
        organizationName:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The organization associated with the service provider.
          nullable: false
          example: Example Org.
        organizationUrl:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The website URL for the organization associated with the service provider.
          nullable: false
          example: en.example.org
        contactName:
          type: string
          description: The name of the contact for the organization associated with the service provider.
          example: Example Org Support
        contactEmail:
          type: string
          description: The contact email for the organization associated with the service provider.
          example: support@example.org
    SSOEnforcementSettings:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - SSOEnforcementSettings
        enabled:
          type: boolean
          description: Indicates whether SSO Enforcement is enabled.
          nullable: false
        samlIdentityProviderEnabled:
          type: boolean
          description: Indicates whether SAML identity provider is enabled.
          readOnly: true
        nonSsoAuthenticatorCount:
          type: integer
          description: The number of non-SSO authenticators.
          format: int32
          readOnly: true
        nonSsoGroupCount:
          type: integer
          description: The number of non-SSO groups.
          format: int32
          readOnly: true
        localAdminUserCount:
          type: integer
          description: The number of local administrator users.
          format: int32
          readOnly: true
        localNonAdminUserCount:
          type: integer
          description: The number of local non-administrator users.
          format: int32
          readOnly: true
    ServerMonitoringBean:
      type: object
      properties:
        enabled:
          type: boolean
          description: Indicates whether DNS/DHCP Server monitoring service is enabled.
          nullable: false
        pollingInterval:
          type: string
          description: The time between polls performed by the monitoring service to the DNS/DHCP Server.
          nullable: false
        statusRefreshInterval:
          type: string
          description: The interval at which Address Manager updates monitoring information in the Address Manager user interface.
          nullable: false
        failureDetectionThreshold:
          maximum: 2147483647
          minimum: 1
          type: integer
          description: The number of consecutive failures permitted before a problem affects the monitoring statistics.
          format: int64
          nullable: false
      description: The DNS/DHCP Server monitoring service settings.
    Settings:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
      discriminator:
        propertyName: type
    SystemSettings:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - SystemSettings
        hostname:
          type: string
          description: The hostname of the Address Manager server.
          readOnly: true
          example: new
        version:
          type: string
          description: The Address Manager server version.
          readOnly: true
          example: 9.5.0-500.GA.bcn
        address:
          type: string
          description: The management IP address of the Address Manager server.
          readOnly: true
          example: 192.168.1.2
        interfaceRedundancyEnabled:
          type: boolean
          description: Indicates whether Address Manager Active/Backup (eth0/eth1) bonding mode is active.
          nullable: false
        activeSessionCount:
          type: integer
          description: The current number of active Address Manager sessions.
          format: int32
          readOnly: true
          example: 2
    WebAccessSettings:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - WebAccessSettings
        server:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/AddressManagerServer'
        httpEnabled:
          type: boolean
          description: Indicates whether Address Manager is accessed through HTTP.
          nullable: false
        httpToHttpsRedirectionEnabled:
          type: boolean
          description: Indicates whether users are redirected to use HTTPS when attemping to access Address Manager using HTTP.
          nullable: false
        httpsEnabled:
          type: boolean
          description: Indicates whether Address Manager is accessed through HTTPS.
          nullable: false
        authenticator:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedX509Authenticator'
        privateKey:
          type: string
          description: The private key associated with the server certificate on your local machine or workstation.
          format: byte
          nullable: false
        password:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The alphanumeric password to secure your private key.
          writeOnly: true
        certificate:
          type: string
          description: The signed server certificate on your local machine or workstation.
          format: byte
          nullable: false
        caCertificates:
          type: array
          nullable: false
          items:
            type: string
            description: The associated CA certificate bundle on your local machine or workstation.
            format: byte
    KeySigningKey:
      type: object
      allOf:
        - $ref: '#/components/schemas/SigningKey'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              enum:
                - KeySigningKey
            keyProvider:
              type: string
              description: The DNSSEC key provider.
              enum:
                - ADDRESS_MANAGER
                - ENTRUST_HSM
            algorithm:
              type: string
              description: The algorithm used to sign the key.
              enum:
                - ECDSAP256SHA256
                - ECDSAP384SHA384
                - ED25519
                - ED448
                - RSAMD5
                - RSANSEC3SHA256
                - RSANSEC3SHA512
                - RSASHA1
                - RSASHA1NSEC3SHA1
                - RSASHA256
                - RSASHA512
            keyStartDateTime:
              type: string
              description: The date and time for the beginning of the key's validity period.
              format: date-time
              example: "2023-01-06T16:34:49.797Z"
            keyExpirationDateTime:
              type: string
              description: The date and time at which the key expires.
              format: date-time
              example: "2023-07-06T16:34:49.797Z"
            ttl:
              type: string
              description: The TTL (time to live) for the key if an override TTL is specified when the key is created.
              example: "2023-07-06T16:34:49.797Z"
            keyTag:
              type: integer
              description: The key tag value for the key. The key tag is used during DNSSEC validation and when signing and re-signing zones.
              format: int32
              example: 55071
            publicKey:
              type: string
              description: The public key text.
              example: 256 3 5 AwEAAa4vLiQZyucs+bbOGqrT+oqjc2xiJR/ODJtze3Vp1B27M2DWZjs7yOgLcSMNVQm7m
            publicKeyEncoding:
              type: string
              description: The public key encoding.
              readOnly: true
              enum:
                - PKCS8
                - X509
            dnsKeyRecord:
              type: string
              description: The value of the DNSKEY record.
              readOnly: true
              example: com. 3600 IN DNSKEY 257 3 10 AwEAAdkY2ykZl6PMr0pyhcSGPpHqu8nsfA1Zbaq
            privateKey:
              type: string
              description: The private key.
              format: byte
            privateKeyEncoding:
              type: string
              description: The private key encoding.
              readOnly: true
              enum:
                - PKCS8
                - X509
            flags:
              type: integer
              description: The flag used to verify the DNS record signature for resource records.
              format: int32
              example: 257
            dsRecord:
              type: string
              description: The DS record used to verify DNSKEY and RRSIG records.
              readOnly: true
    SigningKey:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - SigningKey
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        length:
          type: integer
          description: The key length, in bits.
          format: int32
          example: 1024
        state:
          type: string
          description: The state of the key.
          enum:
            - GENERATED
            - NOT_GENERATED
            - REGENERATE
        keyGenerationDateTime:
          type: string
          description: The date and time that they key was generated.
          format: date-time
          readOnly: true
          example: "2023-01-06T16:34:49.797Z"
      description: The TSIG key used to sign DDNS updates.
      discriminator:
        propertyName: type
    TSIGKey:
      type: object
      allOf:
        - $ref: '#/components/schemas/SigningKey'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              enum:
                - TSIGKey
            name:
              minLength: 1
              pattern: ^.*\S+.*$
              type: string
              description: The name of the resource.
              nullable: false
              example: name
            length:
              type: integer
              description: The key length, in bits.
              format: int32
              nullable: false
              example: 1024
            algorithm:
              type: string
              description: The algorithm used to sign the key.
              nullable: false
              enum:
                - MD5
                - SHA1
                - SHA256
                - SHA512
            sharedSecret:
              type: array
              description: The TSIG shared secret key, Base64 encoded.
              format: byte
              items:
                type: string
                description: The TSIG shared secret key, Base64 encoded.
                format: byte
    ZoneSigningKey:
      type: object
      allOf:
        - $ref: '#/components/schemas/SigningKey'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              enum:
                - ZoneSigningKey
            keyProvider:
              type: string
              description: The DNSSEC key provider.
              enum:
                - ADDRESS_MANAGER
                - ENTRUST_HSM
            algorithm:
              type: string
              description: The algorithm used to sign the key.
              enum:
                - ECDSAP256SHA256
                - ECDSAP384SHA384
                - ED25519
                - ED448
                - RSAMD5
                - RSANSEC3SHA256
                - RSANSEC3SHA512
                - RSASHA1
                - RSASHA1NSEC3SHA1
                - RSASHA256
                - RSASHA512
            keyStartDateTime:
              type: string
              description: The date and time for the beginning of the key's validity period.
              format: date-time
              example: "2023-01-06T16:34:49.797Z"
            keyExpirationDateTime:
              type: string
              description: The date and time at which the key expires.
              format: date-time
              example: "2023-07-06T16:34:49.797Z"
            ttl:
              type: string
              description: The TTL (time to live) for the key if an override TTL is specified when the key is created.
              example: "2023-07-06T16:34:49.797Z"
            keyTag:
              type: integer
              description: The key tag value for the key. The key tag is used during DNSSEC validation and when signing and re-signing zones.
              format: int32
              example: 55071
            publicKey:
              type: string
              description: The public key text.
              example: 256 3 5 AwEAAa4vLiQZyucs+bbOGqrT+oqjc2xiJR/ODJtze3Vp1B27M2DWZjs7yOgLcSMNVQm7m
            publicKeyEncoding:
              type: string
              description: The public key encoding.
              readOnly: true
              enum:
                - PKCS8
                - X509
            dnsKeyRecord:
              type: string
              description: The value of the DNSKEY record.
              readOnly: true
              example: com. 3600 IN DNSKEY 257 3 10 AwEAAdkY2ykZl6PMr0pyhcSGPpHqu8nsfA1Zbaq
            privateKey:
              type: string
              description: The private key.
              format: byte
            privateKeyEncoding:
              type: string
              description: The private key encoding.
              readOnly: true
              enum:
                - PKCS8
                - X509
            flags:
              type: integer
              description: The flag used to verify the DNS record signature for resource records.
              format: int32
              example: 257
    IPv4BlockSplit:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - IPv4BlockSplit
        transaction:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Transaction'
        block:
          required:
            - id
          nullable: false
          allOf:
            - $ref: '#/components/schemas/InlinedIPv4Block'
        splitPointAddress:
          type: string
          description: The IP address of the point at which you would like to split the block.
    IPv4NetworkSplit:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - IPv4NetworkSplit
        transaction:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Transaction'
        network:
          required:
            - id
          nullable: false
          allOf:
            - $ref: '#/components/schemas/InlinedIPv4Network'
        networkCount:
          maximum: 1024
          minimum: 2
          type: integer
          description: The number of resultant sub-networks after the split.
          format: int32
          nullable: false
        gatewayPreserved:
          type: boolean
          description: Indicates whether the gateway address of the original network is kept.
          writeOnly: true
        defaultGatewayAssigned:
          type: boolean
          description: Indicates whether the first IP address after the network ID is assigned as the default gateway address.
          writeOnly: true
        conflictResolutionStrategy:
          type: string
          description: The method used to resolve conflicts between template items and the resource the template is applied to.
          writeOnly: true
          enum:
            - USE_EXISTING
            - OVERWRITE
        template:
          required:
            - id
          writeOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedIPv4Template'
    Split:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        transaction:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Transaction'
      discriminator:
        propertyName: type
    DHCPv4Subclass:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DHCPv4Subclass
        name:
          type: string
          description: The name of the resource.
          readOnly: true
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        description:
          type: string
          description: The description for the DHCP subclass value.
        value:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The DHCP subclass value.
          nullable: false
    Task:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - Task
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name or description for the task.
          nullable: false
          example: task1
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        priority:
          type: string
          description: The priority level of the task.
          nullable: false
          enum:
            - ALL
            - LOW
            - NORMAL
            - HIGH
        state:
          type: string
          description: The current status of the task.
          nullable: false
          enum:
            - NOT_STARTED
            - IN_PROGRESS
            - COMPLETED
            - WAITING_FOR_OTHER
            - DEFERRED
        percentComplete:
          maximum: 100
          minimum: 0
          type: integer
          description: The current progress percentage of the task.
          format: int32
          nullable: false
        startDateTime:
          type: string
          description: The start date for the task.
          format: date-time
          example: "2022-01-15T00:00:00Z"
        dueDateTime:
          type: string
          description: The due date for the task.
          format: date-time
          example: "2022-01-25T00:00:00Z"
        comment:
          type: string
          description: Custom comments for the task.
          example: A custom comment.
    IPv4TemplateApplication:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - IPv4TemplateApplication
        state:
          type: string
          description: The state of the template application operation.
          readOnly: true
          enum:
            - PENDING
            - QUEUED
            - RUNNING
            - CANCELLED
            - CANCELLING
            - COMPLETED
            - COMPLETED_WITH_ERRORS
            - COMPLETED_WITH_WARNINGS
            - FAILED
            - UNKNOWN
        startDateTime:
          type: string
          description: The date and time that the template application operation started.
          format: date-time
          readOnly: true
          example: "2022-11-15T15:41:34Z"
        completionDateTime:
          type: string
          description: The date and time that the template application operation completed.
          format: date-time
          readOnly: true
          example: "2022-11-15T15:41:40Z"
        conflictResolutionStrategy:
          type: string
          description: The method used to resolve conflicts between template items and the resource the template is applied to.
          enum:
            - USE_EXISTING
            - OVERWRITE
            - ABORT
        deploymentOptionsApplied:
          type: boolean
          description: Indicates whether deployment options set in the template are applied.
        gatewayItemApplied:
          type: boolean
          description: Indicates whether the template settings for the gateway address are applied.
        reservedRangeItemsApplied:
          type: boolean
          description: Indicates whether the reserved address ranges set in the template are applied.
        dhcpRangeItemsApplied:
          type: boolean
          description: Indicates whether the DHCP reserved address ranges set in the template are applied.
        ipGroupItemsApplied:
          type: boolean
          description: Indicates whether the IP groups set in the template are applied.
        orphanedAddressConversionStrategy:
          type: string
          description: Determines whether orphaned DHCP allocated IPv4 addresses are converted into another assignment type and the type of host record assigned to the orphaned record.
          enum:
            - STATIC
            - DHCP_RESERVED
            - UNASSIGNED
    TemplateApplication:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        state:
          type: string
          description: The state of the template application operation.
          readOnly: true
          enum:
            - PENDING
            - QUEUED
            - RUNNING
            - CANCELLED
            - CANCELLING
            - COMPLETED
            - COMPLETED_WITH_ERRORS
            - COMPLETED_WITH_WARNINGS
            - FAILED
            - UNKNOWN
        startDateTime:
          type: string
          description: The date and time that the template application operation started.
          format: date-time
          readOnly: true
          example: "2022-11-15T15:41:34Z"
        completionDateTime:
          type: string
          description: The date and time that the template application operation completed.
          format: date-time
          readOnly: true
          example: "2022-11-15T15:41:40Z"
        conflictResolutionStrategy:
          type: string
          description: The method used to resolve conflicts between template items and the resource the template is applied to.
          enum:
            - USE_EXISTING
            - OVERWRITE
            - ABORT
      discriminator:
        propertyName: type
    ZoneTemplateApplication:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ZoneTemplateApplication
        state:
          type: string
          description: The state of the template application operation.
          readOnly: true
          enum:
            - PENDING
            - QUEUED
            - RUNNING
            - CANCELLED
            - CANCELLING
            - COMPLETED
            - COMPLETED_WITH_ERRORS
            - COMPLETED_WITH_WARNINGS
            - FAILED
            - UNKNOWN
        startDateTime:
          type: string
          description: The date and time that the template application operation started.
          format: date-time
          readOnly: true
          example: "2022-11-15T15:41:34Z"
        completionDateTime:
          type: string
          description: The date and time that the template application operation completed.
          format: date-time
          readOnly: true
          example: "2022-11-15T15:41:40Z"
        conflictResolutionStrategy:
          type: string
          description: The method used to resolve conflicts between template items and the resource the template is applied to.
          enum:
            - USE_EXISTING
            - OVERWRITE
            - ABORT
    Template:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
      discriminator:
        propertyName: type
    TFTPGroup:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - TFTPGroup
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the TFTP group.
          nullable: false
          example: TFTP GROUP 1
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
    TrustRelationship:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - TrustRelationship
        address:
          type: string
          description: The IP address of the remote Address Manager server that is part of the trust relationship.
          nullable: false
          example: 192.168.1.1
        username:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The API username of the remote Address Manager server that is used to establish the trust relationship.
          nullable: false
          writeOnly: true
          example: apiUser
        password:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The password of the API user that is used to establish the trust relationship with the remote Address Manager server.
          nullable: false
          writeOnly: true
          example: apiPassword
        keyGenerationDateTime:
          type: string
          description: The timestamp of when the SSH key was created for exchange with the remote Address Manager server to establish the trust relationship.
          format: date-time
          readOnly: true
          example: "2022-09-14T19:35:37Z"
        state:
          type: string
          description: The state of the trust relationship.
          enum:
            - TRUSTED
            - UNTRUSTED
            - REFRESH_KEYS
    UserDefinedFieldDefinition:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - UserDefinedFieldDefinition
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the user defined field.
          nullable: false
          example: BlueCatGateway
        displayName:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The display name of the user defined field.
          nullable: false
          example: BlueCat Gateway
        resourceType:
          type: string
          description: The resource type that the user defined field is applied to.
          nullable: false
          enum:
            - ACL
            - AbstractKeySigningKey
            - AbstractNetworkInterface
            - AbstractServer
            - AbstractZoneSigningKey
            - AddressManagerAuthenticator
            - AliasRecord
            - Authenticator
            - Configuration
            - DHCPClientOption
            - DHCPDeploymentRole
            - DHCPForwardZone
            - DHCPReverseZone
            - DHCPServiceOption
            - DHCPUniqueIdentifier
            - DHCPVendorOption
            - DHCPVendorOptionDefinition
            - DHCPZone
            - DHCPZoneGroup
            - DHCPv4ClientClass
            - DHCPv4ClientOption
            - DHCPv4CustomClientOptionDefinition
            - DHCPv4RawOption
            - DHCPv4ServiceOption
            - DHCPv4Subclass
            - DHCPv6ClientOption
            - DHCPv6RawOption
            - DHCPv6ServiceOption
            - DNS64
            - DNSDeploymentRole
            - DNSOption
            - DNSRawOption
            - DNSSECSigningPolicy
            - DefaultClientOption
            - DefaultDHCPOption
            - DefaultDHCPServiceOption
            - DefaultDNSOption
            - DeploymentRole
            - DeploymentSchedule
            - Device
            - DeviceSubtype
            - DeviceType
            - ENUMNumberZone
            - ENUMZone
            - EntrustKeySigningKey
            - EntrustZoneSigningKey
            - ExternalHostRecord
            - GenericRecord
            - HINFORecord
            - HSMConfiguration
            - HSMKeySigningKey
            - HSMServer
            - HSMZoneSigningKey
            - HTTPSRecord
            - HostRecord
            - IPServerInterface
            - IPv4Address
            - IPv4Block
            - IPv4DHCPRange
            - IPv4Group
            - IPv4Network
            - IPv4Prefix
            - IPv4Range
            - IPv4ReconciliationPolicy
            - IPv4Template
            - IPv6Address
            - IPv6Block
            - IPv6DHCPRange
            - IPv6Network
            - IPv6Prefix
            - IPv6ReconciliationPolicy
            - IPv6Template
            - InternalRootZone
            - KerberosAuthenticator
            - KerberosRealm
            - KerberosServicePrincipal
            - KeyDistributionCenter
            - KeySigningKey
            - LDAPAuthenticator
            - Location
            - MACAddress
            - MACPool
            - MXRecord
            - NAPTRRecord
            - NamingPolicy
            - NamingPolicyRestriction
            - NetworkInterface
            - NotificationGroup
            - OAuthAuthorizationServer
            - PublishedInterface
            - RADIUSAuthenticator
            - RawOption
            - Report
            - ReportSchedule
            - ResourceRecord
            - ResponsePolicy
            - ResponsePolicyZone
            - SAMLIdentityProvider
            - SRVRecord
            - SVCBRecord
            - Server
            - ServerGroup
            - ServerGroupInterface
            - ServerInterface
            - ServiceOption
            - SigningKey
            - StartOfAuthority
            - TACACSPlusAuthenticator
            - TFTPDeploymentRole
            - TFTPFile
            - TFTPFolder
            - TFTPGroup
            - TFTPNode
            - TSIGKey
            - TXTRecord
            - Tag
            - TagGroup
            - Task
            - URIRecord
            - User
            - UserGroup
            - VendorProfile
            - View
            - VirtualInterface
            - X509Authenticator
            - Zone
            - ZoneSigningKey
            - ZoneTemplate
        dataType:
          type: string
          description: The data type of the user defined field.
          nullable: false
          enum:
            - BOOLEAN
            - DATE
            - EMAIL
            - INTEGER
            - LONG
            - TEXT
            - URL
            - WORKFLOW
        defaultValue:
          type: string
          description: The default value of the user defined field.
          example: all
        required:
          type: boolean
          description: Indicates whether the user defined field is required or optional for the resource.
        predefinedValues:
          type: array
          description: A list of pre-defined values of the user defined field.
          items:
            type: string
            description: A list of pre-defined values of the user defined field.
        validationProperties:
          type: object
          properties:
            min:
              type: integer
              description: The minimum value
              format: int64
              example: 3
            max:
              type: integer
              description: The maximum value
              format: int64
              example: 1000
            minLength:
              type: integer
              description: The minimum length
              format: int32
              example: 0
            maxLength:
              type: integer
              description: The maximum length
              format: int32
              example: 10
            pattern:
              type: string
              description: The pattern to match against. The wildcard characters supported are '*' and '?'.
              example: '*@b.co*'
          additionalProperties:
            type: string
            description: Validation rules assigned to the field when configuring the user defined field.
          description: Validation rules assigned to the field when configuring the user defined field.
    UserDefinedLinkDefinition:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - UserDefinedLinkDefinition
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the user-defined link definition.
          nullable: false
          example: UDL IP4Addr to IP4Block
        displayName:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The display name of the user-defined link definition.
          nullable: false
          example: UDL IP4Addr to IP4Block
        description:
          type: string
          description: The description of the user-defined link definition.
          example: A UDL to link IPv4 Addresses to IPv4 Blocks.
        sourceTypes:
          type: array
          description: The source entity types of the user-defined link definition.
          nullable: false
          items:
            type: string
            description: The source entity types of the user-defined link definition.
            enum:
              - DenyMACPool
              - Device
              - IPv4Address
              - IPv4Block
              - IPv4DHCPRange
              - IPv4Group
              - IPv4Network
              - IPv6Address
              - IPv6Block
              - IPv6DHCPRange
              - IPv6Network
              - MACAddress
              - MACPool
              - Server
              - ServerGroup
              - View
              - Zone
        destinationTypes:
          type: array
          description: The destination entity types of the user-defined link definition.
          nullable: false
          items:
            type: string
            description: The destination entity types of the user-defined link definition.
            enum:
              - DenyMACPool
              - Device
              - IPv4Address
              - IPv4Block
              - IPv4DHCPRange
              - IPv4Group
              - IPv4Network
              - IPv6Address
              - IPv6Block
              - IPv6DHCPRange
              - IPv6Network
              - MACAddress
              - MACPool
              - Server
              - ServerGroup
              - View
              - Zone
    InlinedUserDefinedLinkDefinition:
      title: UserDefinedLinkDefinition
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - UserDefinedLinkDefinition
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the user-defined link definition.
          nullable: false
          example: UDL IP4Addr to IP4Block
    UserDefinedLinkedResource:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        linkDescription:
          type: string
          description: The description for the user-defined link.
          example: Sample description.
        linkDefinition:
          nullable: false
          anyOf:
            - required:
                - id
              allOf:
                - $ref: '#/components/schemas/InlinedUserDefinedLinkDefinition'
            - required:
                - name
              allOf:
                - $ref: '#/components/schemas/InlinedUserDefinedLinkDefinition'
        linkedResource:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Resource'
    VendorProfile:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - VendorProfile
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the DHCP vendor profile.
          nullable: false
          example: Cisco IP phones
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        identifier:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The Vendor Class Identifier.
          nullable: false
          example: Cisco Systems, Inc. IP Phone CP-7940G
        description:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The description of the DHCP vendor profile.
          nullable: false
          example: Vendor profile for Cisco IP phones
    DHCPForwardZone:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DHCPForwardZone
        name:
          type: string
          description: The name of the resource.
          readOnly: true
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        primaryDnsServerAddress:
          type: string
          description: The IP address of the zone's primary DNS server.
          nullable: false
          example: 10.10.10.10
        secondaryDnsServerAddress:
          type: string
          description: The IP address of the zone's secondary DNS server.
          example: 10.10.10.20
        dynamicUpdateSigningKeyType:
          type: string
          description: The type of key used to sign DDNS updates.
          nullable: false
          enum:
            - NONE
            - TSIG
            - GSS_TSIG
        dynamicUpdateSigningKey:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedSigningKey'
        dynamicUpdateSigningKeyRealm:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedKerberosRealm'
        zone:
          nullable: false
          anyOf:
            - required:
                - id
              allOf:
                - $ref: '#/components/schemas/InlinedZone'
            - required:
                - absoluteName
              allOf:
                - $ref: '#/components/schemas/InlinedZone'
    DHCPReverseZone:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DHCPReverseZone
        name:
          type: string
          description: The name of the resource.
          readOnly: true
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        primaryDnsServerAddress:
          type: string
          description: The IP address of the zone's primary DNS server.
          nullable: false
          example: 10.10.10.10
        secondaryDnsServerAddress:
          type: string
          description: The IP address of the zone's secondary DNS server.
          example: 10.10.10.20
        dynamicUpdateSigningKeyType:
          type: string
          description: The type of key used to sign DDNS updates.
          nullable: false
          enum:
            - NONE
            - TSIG
            - GSS_TSIG
        dynamicUpdateSigningKey:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedSigningKey'
        dynamicUpdateSigningKeyRealm:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedKerberosRealm'
        prefix:
          nullable: false
          anyOf:
            - required:
                - id
              allOf:
                - $ref: '#/components/schemas/InlinedPrefix'
            - required:
                - range
              allOf:
                - $ref: '#/components/schemas/InlinedPrefix'
    DhcpZone:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        name:
          type: string
          description: The name of the resource.
          readOnly: true
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        primaryDnsServerAddress:
          type: string
          description: The IP address of the zone's primary DNS server.
          nullable: false
          example: 10.10.10.10
        secondaryDnsServerAddress:
          type: string
          description: The IP address of the zone's secondary DNS server.
          example: 10.10.10.20
        dynamicUpdateSigningKeyType:
          type: string
          description: The type of key used to sign DDNS updates.
          nullable: false
          enum:
            - NONE
            - TSIG
            - GSS_TSIG
        dynamicUpdateSigningKey:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedSigningKey'
        dynamicUpdateSigningKeyRealm:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedKerberosRealm'
      discriminator:
        propertyName: type
    InlinedKerberosRealm:
      title: KerberosRealm
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - KerberosRealm
        name:
          type: string
          description: The name for the Kerberos realm.
          nullable: false
          example: example.company.net
    InlinedPrefix:
      title: Prefix
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        name:
          type: string
          description: The name of the resource.
          example: name
        range:
          type: string
          description: The address range for the IP block or network.
    InlinedSigningKey:
      title: SigningKey
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - SigningKey
        name:
          type: string
          description: The name of the resource.
          example: name
    DHCPZoneGroup:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DHCPZoneGroup
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the DHCP zone group.
          nullable: false
          example: Zone Group 1
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
    AbstractZone:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        view:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/View'
      discriminator:
        propertyName: type
    ENUMNumberZone:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ENUMNumberZone
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        view:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/View'
        numberName:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The numeric value of the ENUM number.
        absoluteName:
          type: string
          description: The FQDN of the ENUM zone number.
          readOnly: true
    ENUMZone:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ENUMZone
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The value for the portion of the telephone number that the ENUM zone represents. ENUM zones represents a portion of a telephone number, such as the country code, area code, or exchange.
          nullable: false
          example: "5678"
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        view:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/View'
        deploymentEnabled:
          type: boolean
          description: Indicates whether the ENUM zone is deployable.
          nullable: false
        absoluteName:
          type: string
          description: The FQDN of the ENUM zone.
          readOnly: true
    ExternalHostsZone:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ExternalHostsZone
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        view:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/View'
    InlinedResponsePolicy:
      title: ResponsePolicy
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ResponsePolicy
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the response policy
          nullable: false
          example: Block Response Policy
    InternalRootZone:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - InternalRootZone
        name:
          type: string
          description: The name of the resource.
          readOnly: true
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        view:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/View'
        deploymentEnabled:
          type: boolean
          description: Indicates whether the root zone is deployable.
          nullable: false
    ResponsePolicyZone:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ResponsePolicyZone
        name:
          minLength: 1
          pattern: ^.*\S+.*$
          type: string
          description: The name of the resource.
          nullable: false
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
        view:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/View'
        responsePolicyZoneType:
          type: string
          description: The type of response policy zone.
          nullable: false
          enum:
            - LOCAL
            - FEED
            - EXTERNAL
        responsePolicy:
          required:
            - id
          allOf:
            - $ref: '#/components/schemas/InlinedResponsePolicy'
        overridePolicyType:
          type: string
          description: The response policy type set for BlueCat Security Feed.
          enum:
            - ALLOWLIST
            - BLACKHOLE
            - BLOCKLIST
            - REDIRECT
        overrideRefreshTime:
          type: string
          description: The custom refresh time interval set for BlueCat Security Feed, in seconds.
        redirectTarget:
          type: string
          description: The target FQDN to which all undesirable connection attemps are redirected.
        feedCategories:
          type: array
          description: A list of BlueCat Security Feed categories that the response policy zone is subscribed to.
          items:
            type: string
            description: A list of BlueCat Security Feed categories that the response policy zone is subscribed to.
    BadRequestError:
      type: object
      properties:
        status:
          type: integer
          format: int32
          nullable: false
          readOnly: true
          enum:
            - 400
        reason:
          type: string
          nullable: false
          readOnly: true
          enum:
            - Bad Request
        code:
          type: string
          nullable: false
          readOnly: true
          enum:
            - ActiveServerConfigurationError
            - ActiveServerMissingHaBackbone
            - AddressHasLinkedRecords
            - AddressIsBroadcastAddress
            - AddressIsNetworkId
            - AddressIsNetworkRouterAnycast
            - AddressIsReserved
            - AddressNotInNetwork
            - AddressNotInRestrictedRanges
            - AddressProtocolMatch
            - AddressProtocolMismatch
            - ArrayFieldSizeTooBig
            - ArrayFieldSizeTooSmall
            - AuthenticatorMismatch
            - BlankFieldValue
            - BrokenMandatoryDependency
            - BrokenOptionalDependency
            - CannotAssociateServerAssignedOption
            - CannotEnableSso
            - CannotFailoverWhileNodesDisconnected
            - CannotFetchGroupsFromLdapAuthenticator
            - ConflictingFieldsList
            - ConflictingOrderBySortDirections
            - ConflictingResourceFieldValues
            - CreateUpdateNetworkGatewayNotSupported
            - DatabaseNotInReplicatedState
            - DatabaseReplicationInProgress
            - DedicatedManagementNotEnabled
            - DeleteAuthenticatorNotAllowed
            - DeploymentFailedToStart
            - DhcpDeploymentValidationNotEnabled
            - DnsDeploymentValidationNotEnabled
            - DuplicateFieldValue
            - DuplicateFilterField
            - DuplicateOrderByField
            - DuplicateOrderByOperator
            - DurationValueNotDivisibleBy
            - DurationValueOutsideRange
            - EmptyFieldValue
            - EmptyRequestBody
            - FailoverTargetAlreadyPrimaryServer
            - FieldsParseError
            - FieldsTokenError
            - FieldHasPatchOnlyUpdate
            - FieldNotPatchable
            - FieldValueTooSmall
            - FilterNeedsRefinement
            - FilterParseError
            - FilterTokenError
            - ImportInProgress
            - IncompatibleServerProfile
            - IncompatibleServerVersion
            - InterfaceRedundancyConfigurationError
            - InvalidAnycastAddress
            - InvalidAsciiString
            - InvalidCsv
            - InvalidDateValue
            - InvalidDnsFeedLicense
            - InvalidDuidValue
            - InvalidDurationValue
            - InvalidEmailAddress
            - InvalidBase64Value
            - InvalidEnumValue
            - InvalidEnumZoneAbsoluteNameLength
            - InvalidEnumZoneName
            - InvalidFieldName
            - InvalidFieldPath
            - InvalidFileCharacterEncoding
            - InvalidFileContentDisposition
            - InvalidFileDataValue
            - InvalidFilterAddress
            - InvalidFilterAddressRange
            - InvalidFilterAddressRangeSize
            - InvalidFilterCountsAndPercentages
            - InvalidFilterDate
            - InvalidFilterEnumValue
            - InvalidFilterField
            - InvalidFilterMacAddress
            - InvalidFilterPartialAddress
            - InvalidFilterPercentage
            - InvalidFilterValue
            - InvalidFilterValueType
            - InvalidFullyQualifiedDomainName
            - InvalidFullyQualifiedDomainNameField
            - InvalidGatewayMountPointValue
            - InvalidHeaderValue
            - InvalidInlinedResource
            - InvalidIpv4AddressValue
            - InvalidIpv4LoopbackPrefixLength
            - InvalidIpv4RangeValue
            - InvalidIpv6AddressValue
            - InvalidIpv6BlockPrefixLength
            - InvalidIpv6LoopbackPrefixLength
            - InvalidIpv6NetworkPrefixLength
            - InvalidIpv6RangeValue
            - InvalidIpAddressState
            - InvalidIpAddressValue
            - InvalidIpAddressOrFullyQualifiedDomainNameValue
            - InvalidIpBlockValue
            - InvalidIpRangeValue
            - InvalidLdapGroupName
            - InvalidLimitParameterValue
            - InvalidLocationCode
            - InvalidMacAddressValue
            - InvalidMatchCriteria
            - InvalidMoveDestination
            - InvalidNumberZoneAbsoluteNameLength
            - InvalidNtpServerAddressForStratum
            - InvalidOffsetParameterValue
            - InvalidPaginationParameter
            - InvalidPartialMacAddressFilter
            - InvalidPolicyItemNameValue
            - InvalidPrivateKeyValue
            - InvalidQueryParameterValue
            - InvalidRegularExpression
            - InvalidResourceFieldValue
            - InvalidResourceId
            - InvalidResourceRecordData
            - InvalidResourceType
            - InvalidRetentionRestrictions
            - InvalidServerPatchFile
            - InvalidSplitPointAddress
            - InvalidStartEndDates
            - InvalidStringCharacters
            - InvalidStringFieldPrefix
            - InvalidTrustRelationshipCredentials
            - InvalidTopLevelMerge
            - InvalidTtlValue
            - InvalidUdfDateValue
            - InvalidUdfDefaultValue
            - InvalidUdfEmailValue
            - InvalidUdfNumberValue
            - InvalidUdfPredefinedValue
            - InvalidUdfPredefinedValues
            - InvalidUdfUrlValue
            - InvalidUdfValidationProperties
            - InvalidUdfValue
            - InvalidUidValue
            - InvalidUndoTransactionId
            - InvalidUrlScheme
            - InvalidUrlValue
            - InvalidX509CertificateValue
            - InvalidZoneName
            - IpRangeBroadcastOrNetworkIdAssigned
            - IpRangeDoesNotOverlap
            - IpRangeExcludesAssignedAddresses
            - IpRangeExcludesChildRanges
            - IpRangeExcludesDhcpRanges
            - IpRangeExcludesGateway
            - IpRangeIncludesGateway
            - IpRangeNotAlignedOnRangeBoundary
            - IpRangeOutsideNetworkBlockBoundary
            - IpRangeOutsideParent
            - IpRangeOverlapsSiblings
            - IpRangeOverlapsRangeInOtherConfiguration
            - IpRangePartiallyIncludesChildRanges
            - IpRangeTooBig
            - IpRangeTooSmall
            - JsonDeserializationError
            - JsonParseError
            - JsonFieldParseError
            - MacAddressInUse
            - MismatchedLocationCodeParent
            - MismatchedManagementAndServicesInterfaces
            - MismatchedMergeTypes
            - MissingMandatoryChangeControlComment
            - MissingMergeDestinationInSiblings
            - MissingPatchableField
            - MissingQueryParameter
            - MissingRequiredDeploymentRoleInterface
            - MissingRequiredField
            - MissingRequiredFilterField
            - MissingRequiredFilterPredicate
            - MoveAddressUnsupportedState
            - MoveRolesWithOptionsOnServer
            - MultipleBgpNeighborsNotSupported
            - MultipleQueryParameterValues
            - MultipleValuesNotAllowed
            - NamingPolicyViolation
            - NamingPolicyRestrictionViolation
            - NetworkInterfaceNotConfigured
            - NothingToDeployForUser
            - NoAssignedDeploymentRoles
            - NoHsmConfiguration
            - NoKeyDistributionCentersInRealm
            - NoPreviousFullDeploymentForDifferential
            - NoSpaceForAddress
            - NoSpaceForBlock
            - NoSpaceForNetwork
            - NoSpaceForRange
            - OrderByParseError
            - OrderByTokenError
            - PaginationNotSupported
            - PassiveServerConfigurationError
            - PassiveServerIsF5PoolMember
            - PassiveServerMissingHaBackbone
            - PasswordFailedRequirements
            - RedirectPolicyTypeDisabled
            - ReplicatedServerLimitReached
            - ReplicationOperationNotAllowed
            - ResetServerServicesRequired
            - ResourceFieldNotInConfiguration
            - ResourceFieldNotInRestrictedZones
            - ResourceHasCircularReference
            - ResourceHasRecordsNotInZone
            - ResourceNotInConfiguration
            - ResourceNotInRestrictedZones
            - ResourceNotInTemplate
            - ResourceNotInView
            - ServerCommandError
            - ServerControlResetRequired
            - ServerGroupNotMultiPrimary
            - ServerGroupSizeLimitReached
            - ServerHasAssignedDeploymentOptions
            - ServerHasAssignedDeploymentRoles
            - ServerIsDeploying
            - ServerIsMultiPrimaryServerGroupMember
            - ServerIsPassive
            - ServerManagementAddressProtocolMismatch
            - ServerNotActive
            - ServerNotDisabled
            - ServerNotManaged
            - ServerNotStandaloneServer
            - ServerNotTrusted
            - ServerServiceInterfaceNameMismatch
            - ServerSslHandshakeError
            - SigningPolicyInUse
            - SsoEnforcementRequirementsUnmet
            - StringFieldTooBig
            - StringFieldTooSmall
            - TemplateApplicationFailedToStart
            - TemplateNotAssigned
            - TotalCountNotSupported
            - TrustRelationshipLimitReached
            - UdfPredefinedValueInUse
            - UdfValidationPropertiesInUse
            - UdfValueExceedsMaximumLength
            - UdfValueLessThanMinimum
            - UdfValueLessThanMinimumLength
            - UdfValueOutsideRange
            - UnsupportedAggregateOperator
            - UnsupportedAggregateFilterOperator
            - UnsupportedDeploymentOptionScope
            - UnsupportedDeploymentRoleInterfaceType
            - UnsupportedEmbeddableCollection
            - UnsupportedEmbeddableResource
            - UnsupportedFieldsOperatorForMediaType
            - UnsupportedFilterOperator
            - UnsupportedFilterOperatorForNullValue
            - UnsupportedHeaderEncoding
            - UnsupportedHeaderValue
            - UnsupportedImportFileType
            - UnsupportedMultiPrimaryDeploymentOption
            - UnsupportedOrderByField
            - UnsupportedOrderByOperator
            - UnsupportedResourceFieldValue
            - UnsupportedResourceType
            - UnsupportedServerCommand
            - ValueLessThanMinimum
            - ValueOutsideRange
            - WorkflowRequestNotPending
            - WrongCsvRowFieldCount
            - WrongResourceType
        message:
          type: string
          nullable: false
          readOnly: true
    UnauthorizedError:
      type: object
      properties:
        status:
          type: integer
          format: int32
          nullable: false
          readOnly: true
          enum:
            - 401
        reason:
          type: string
          nullable: false
          readOnly: true
          enum:
            - Unauthorized
        code:
          type: string
          nullable: false
          readOnly: true
          enum:
            - InvalidAuthorizationCredentials
            - InvalidServerPassword
            - InvalidUsernameOrApiKey
            - InvalidUsernameOrPassword
        message:
          type: string
          nullable: false
          readOnly: true
    ForbiddenError:
      type: object
      properties:
        status:
          type: integer
          format: int32
          nullable: false
          readOnly: true
          enum:
            - 403
        reason:
          type: string
          nullable: false
          readOnly: true
          enum:
            - Forbidden
        code:
          type: string
          nullable: false
          readOnly: true
          enum:
            - AccessDenied
            - CreateNotAllowed
            - DeleteLastLinkNotAllowed
            - DeleteNotAllowed
            - DisableHaServerServiceNotSupported
            - EnableHaServerServiceNotSupported
            - FieldUpdateNotAllowed
            - FileSizeTooBig
            - InvalidAuthorizationScheme
            - OperationNotPermitted
            - ReadOnlySession
            - ReadOnlySessionOnPrimary
            - ResourceInUse
            - ServerInReplication
            - UpdateNotAllowed
            - WorkflowRequestApproveDenyNotAllowed
        message:
          type: string
          nullable: false
          readOnly: true
    NotFoundError:
      type: object
      properties:
        status:
          type: integer
          format: int32
          nullable: false
          readOnly: true
          enum:
            - 404
        reason:
          type: string
          nullable: false
          readOnly: true
          enum:
            - Not Found
        code:
          type: string
          nullable: false
          readOnly: true
          enum:
            - ActiveServerNotConnected
            - CannotConnectToServer
            - InlinedResourceNotFound
            - NetworkNotFoundForAddress
            - PassiveServerNotConnected
            - ResourceNotFound
            - ResourceFieldNotFound
            - ServerGroupHasNoMembers
            - ServerNotConnected
            - ServerServiceInterfaceNotConnected
            - WrongResourceCollection
        message:
          type: string
          nullable: false
          readOnly: true
    ACLResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /accessControlLists/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /accessControlLists
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ACLCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/accessControlLists?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/accessControlLists?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    CollectionCount:
      type: integer
      format: int32
      nullable: false
      readOnly: true
    CollectionTotalCount:
      type: integer
      format: int32
      nullable: false
      readOnly: true
    ACLPostRequestBody:
      required:
        - matchElements
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/ACL'
    ConflictError:
      type: object
      properties:
        status:
          type: integer
          format: int32
          nullable: false
          readOnly: true
          enum:
            - 409
        reason:
          type: string
          nullable: false
          readOnly: true
          enum:
            - Conflict
        code:
          type: string
          nullable: false
          readOnly: true
          enum:
            - IpAddressConflictsWithSplitNetwork
            - IpGroupConflictsWithSplitNetwork
            - IpRangeConflictsWithSplitNetwork
            - ResourceAlreadyExists
            - ResourceConflictsWithOther
            - StaleResourceState
            - WorkflowRequestAlreadyPending
        message:
          type: string
          nullable: false
          readOnly: true
    ACLPutRequestBody:
      required:
        - matchElements
        - name
      allOf:
        - $ref: '#/components/schemas/ACL'
    AccessRightResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /accessRights/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /accessRights
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    AccessRightCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/accessRights?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/accessRights?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    AccessRightPostRequestBody:
      required:
        - defaultAccessLevel
        - type
        - userScope
      allOf:
        - $ref: '#/components/schemas/AccessRight'
    AdministrativeAccessRightPostRequestBody:
      required:
        - administrativeAccessRights
        - type
        - userScope
      allOf:
        - $ref: '#/components/schemas/AdministrativeAccessRight'
    AccessRightPutRequestBody:
      required:
        - accessOverrides
        - defaultAccessLevel
        - deploymentsAllowed
        - quickDeploymentsAllowed
        - selectiveDeploymentsAllowed
        - workflowLevel
      allOf:
        - $ref: '#/components/schemas/AccessRight'
    AdministrativeAccessRightPutRequestBody:
      required:
        - administrativeAccessRights
      allOf:
        - $ref: '#/components/schemas/AdministrativeAccessRight'
    GenericRecordResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /resourceRecords/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /resourceRecords
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    GenericRecordCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/resourceRecords?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/resourceRecords?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4AddressResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /addresses/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /addresses
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4AddressCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/addresses?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/addresses?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4AddressPostRequestBody:
      required:
        - state
        - type
      allOf:
        - $ref: '#/components/schemas/IPv4Address'
    IPv6AddressPostRequestBody:
      required:
        - state
        - type
      allOf:
        - $ref: '#/components/schemas/IPv6Address'
    IPv4AddressPutRequestBody:
      required:
        - state
      allOf:
        - $ref: '#/components/schemas/IPv4Address'
    IPv6AddressPutRequestBody:
      required:
        - state
      allOf:
        - $ref: '#/components/schemas/IPv6Address'
    ResourceResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: //12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ResourceCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ResourcePostRequestBody:
      required:
        - type
      allOf:
        - $ref: '#/components/schemas/Resource'
    ViewResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /views/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /views
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ViewCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/views?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/views?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4BlockResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /blocks/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /blocks
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4BlockCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/blocks?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/blocks?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4BlockPostRequestBody:
      required:
        - range
        - type
      allOf:
        - $ref: '#/components/schemas/IPv4Block'
    IPv4NetworkPostRequestBody:
      required:
        - range
        - type
      allOf:
        - $ref: '#/components/schemas/IPv4Network'
    ZonePostRequestBody:
      required:
        - type
      allOf:
        - $ref: '#/components/schemas/Zone'
    AddressManagerAuthenticatorResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /authenticators/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /authenticators
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    AddressManagerAuthenticatorCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/authenticators?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/authenticators?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    KerberosAuthenticatorPostRequestBody:
      required:
        - hostname
        - name
        - realm
        - type
      allOf:
        - $ref: '#/components/schemas/KerberosAuthenticator'
    LDAPAuthenticatorPostRequestBody:
      required:
        - adminDn
        - adminPassword
        - aliasDereferencePolicy
        - hostname
        - name
        - referralPolicy
        - schemaType
        - searchBase
        - type
      allOf:
        - $ref: '#/components/schemas/LDAPAuthenticator'
    OAuthAuthorizationServerPostRequestBody:
      required:
        - emailClaim
        - groupClaim
        - name
        - type
        - userClaim
        - validationMethod
      allOf:
        - $ref: '#/components/schemas/OAuthAuthorizationServer'
    RADIUSAuthenticatorPostRequestBody:
      required:
        - authenticationProtocol
        - hostname
        - name
        - sharedSecret
        - type
      allOf:
        - $ref: '#/components/schemas/RADIUSAuthenticator'
    SAMLIdentityProviderPostRequestBody:
      required:
        - entityId
        - name
        - signOnUrl
        - signingCertificate
        - type
      allOf:
        - $ref: '#/components/schemas/SAMLIdentityProvider'
    TACACSPlusAuthenticatorPostRequestBody:
      required:
        - authenticationProtocol
        - hostname
        - name
        - sharedSecret
        - type
      allOf:
        - $ref: '#/components/schemas/TACACSPlusAuthenticator'
    X509AuthenticatorPostRequestBody:
      required:
        - caCertificates
        - name
        - primaryServerUrl
        - type
      allOf:
        - $ref: '#/components/schemas/X509Authenticator'
    KerberosAuthenticatorResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /authenticators/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /authenticators
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    KerberosAuthenticatorPutRequestBody:
      required:
        - hostname
        - name
        - realm
      allOf:
        - $ref: '#/components/schemas/KerberosAuthenticator'
    LDAPAuthenticatorPutRequestBody:
      required:
        - adminDn
        - aliasDereferencePolicy
        - emailPrefix
        - groupObjectClass
        - hostname
        - memberOfPrefix
        - name
        - port
        - referralPolicy
        - schemaType
        - searchBase
        - sslEnabled
        - userObjectClass
        - userPrefix
      allOf:
        - $ref: '#/components/schemas/LDAPAuthenticator'
    OAuthAuthorizationServerPutRequestBody:
      required:
        - emailClaim
        - enabled
        - groupClaim
        - name
        - userClaim
        - validationMethod
      allOf:
        - $ref: '#/components/schemas/OAuthAuthorizationServer'
    RADIUSAuthenticatorPutRequestBody:
      required:
        - authenticationProtocol
        - hostname
        - name
        - port
        - retries
        - timeout
      allOf:
        - $ref: '#/components/schemas/RADIUSAuthenticator'
    SAMLIdentityProviderPutRequestBody:
      required:
        - emailAttribute
        - enabled
        - entityId
        - groupAttribute
        - name
        - signOnUrl
        - signingCertificate
      allOf:
        - $ref: '#/components/schemas/SAMLIdentityProvider'
    TACACSPlusAuthenticatorPutRequestBody:
      required:
        - attributes
        - authenticationProtocol
        - hostname
        - name
        - port
        - timeout
      allOf:
        - $ref: '#/components/schemas/TACACSPlusAuthenticator'
    X509AuthenticatorPutRequestBody:
      required:
        - caCertificates
        - ldapUserMatchOption
        - name
        - primaryServerUrl
      allOf:
        - $ref: '#/components/schemas/X509Authenticator'
    DatabaseBackupFileResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /backups/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /backups
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DatabaseBackupFileCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/backups?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/backups?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DatabaseBackupFilePostRequestBody:
      required:
        - fileData
        - fileInfo
      type: object
      properties:
        fileInfo:
          $ref: '#/components/schemas/DatabaseBackupFile'
        fileData:
          type: string
          format: binary
    IPv6BlockPostRequestBody:
      required:
        - range
        - type
      allOf:
        - $ref: '#/components/schemas/IPv6Block'
    IPv4BlockPutRequestBody:
      required:
        - defaultZonesInherited
        - range
        - restrictedZonesInherited
        - reverseZoneSigned
      allOf:
        - $ref: '#/components/schemas/IPv4Block'
    IPv6BlockPutRequestBody:
      required:
        - range
      allOf:
        - $ref: '#/components/schemas/IPv6Block'
    DHCPv4ClientClassResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /clientClasses/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /clientClasses
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DHCPv4ClientClassCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/clientClasses?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/clientClasses?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DHCPv4ClientClassPostRequestBody:
      required:
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/DHCPv4ClientClass'
    DHCPv4ClientClassPutRequestBody:
      required:
        - name
      allOf:
        - $ref: '#/components/schemas/DHCPv4ClientClass'
    DHCPClientIdentifierResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /clientIdentifiers/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /clientIdentifiers
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DHCPClientIdentifierCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/clientIdentifiers?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/clientIdentifiers?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ConfigurationResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /configurations/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /configurations
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ConfigurationCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/configurations?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/configurations?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ConfigurationPostRequestBody:
      required:
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/Configuration'
    ConfigurationPutRequestBody:
      required:
        - checkIntegrityValidation
        - checkMxCnameValidation
        - checkMxValidation
        - checkNamesValidation
        - checkNsValidation
        - checkSrvCnameValidation
        - checkWildcardValidation
        - dhcpConfigurationValidationEnabled
        - dnsConfigurationValidationEnabled
        - dnsFeedEnabled
        - dnsOptionInheritanceEnabled
        - dnsZoneValidationEnabled
        - keyAutoRegenerationEnabled
        - name
        - serverMonitoringEnabled
      allOf:
        - $ref: '#/components/schemas/Configuration'
    AddressManagerDatabaseResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /databases/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /databases
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    AddressManagerDatabaseCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/databases?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/databases?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    AddressManagerDatabasePutRequestBody:
      required:
        - backupEnabled
        - replicationEnabled
      allOf:
        - $ref: '#/components/schemas/AddressManagerDatabase'
    ZoneCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/zones?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/zones?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ZoneResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /zones/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /zones
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    AliasRecordResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /resourceRecords/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /resourceRecords
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    AliasRecordCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/resourceRecords?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/resourceRecords?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DHCPv4CustomClientOptionDefinitionCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/deploymentOptionDefinitions?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/deploymentOptionDefinitions?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DHCPv4CustomClientOptionDefinitionResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deploymentOptionDefinitions/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deploymentOptionDefinitions
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DHCPVendorOptionDefinitionCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/deploymentOptionDefinitions?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/deploymentOptionDefinitions?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DHCPVendorOptionDefinitionResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deploymentOptionDefinitions/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deploymentOptionDefinitions
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DHCPv4CustomClientOptionDefinitionPostRequestBody:
      required:
        - code
        - description
        - displayName
        - name
        - type
        - valueFormat
      allOf:
        - $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinition'
    DHCPVendorOptionDefinitionPostRequestBody:
      required:
        - code
        - description
        - displayName
        - name
        - type
        - valueFormat
      allOf:
        - $ref: '#/components/schemas/DHCPVendorOptionDefinition'
    DHCPv4CustomClientOptionDefinitionPutRequestBody:
      required:
        - description
        - displayName
        - name
      allOf:
        - $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinition'
    DHCPVendorOptionDefinitionPutRequestBody:
      required:
        - description
        - displayName
        - name
      allOf:
        - $ref: '#/components/schemas/DHCPVendorOptionDefinition'
    DHCPv4ClientOptionCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/deploymentOptions?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/deploymentOptions?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DHCPv4ClientOptionResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deploymentOptions/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deploymentOptions
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DHCPVendorOptionCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/deploymentOptions?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/deploymentOptions?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DHCPVendorOptionResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deploymentOptions/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deploymentOptions
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DNSOptionCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/deploymentOptions?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/deploymentOptions?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DNSOptionResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deploymentOptions/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deploymentOptions
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DHCPv4ClientOptionPostRequestBody:
      required:
        - type
        - value
      allOf:
        - $ref: '#/components/schemas/DHCPv4ClientOption'
    DHCPv4RawOptionPostRequestBody:
      required:
        - type
        - value
      allOf:
        - $ref: '#/components/schemas/DHCPv4RawOption'
    DHCPv4ServiceOptionPostRequestBody:
      required:
        - type
        - value
      allOf:
        - $ref: '#/components/schemas/DHCPv4ServiceOption'
    DHCPv6ClientOptionPostRequestBody:
      required:
        - type
        - value
      allOf:
        - $ref: '#/components/schemas/DHCPv6ClientOption'
    DHCPv6RawOptionPostRequestBody:
      required:
        - type
        - value
      allOf:
        - $ref: '#/components/schemas/DHCPv6RawOption'
    DHCPv6ServiceOptionPostRequestBody:
      required:
        - type
        - value
      allOf:
        - $ref: '#/components/schemas/DHCPv6ServiceOption'
    DHCPVendorOptionPostRequestBody:
      required:
        - definition
        - type
      allOf:
        - $ref: '#/components/schemas/DHCPVendorOption'
    DNSOptionPostRequestBody:
      required:
        - type
        - value
      allOf:
        - $ref: '#/components/schemas/DNSOption'
    DNSRawOptionPostRequestBody:
      required:
        - type
        - value
      allOf:
        - $ref: '#/components/schemas/DNSRawOption'
    StartOfAuthorityPostRequestBody:
      required:
        - type
      allOf:
        - $ref: '#/components/schemas/StartOfAuthority'
    DHCPv4ClientOptionPutRequestBody:
      required:
        - value
      allOf:
        - $ref: '#/components/schemas/DHCPv4ClientOption'
    DHCPv4RawOptionPutRequestBody:
      required:
        - value
      allOf:
        - $ref: '#/components/schemas/DHCPv4RawOption'
    DHCPv4ServiceOptionPutRequestBody:
      required:
        - value
      allOf:
        - $ref: '#/components/schemas/DHCPv4ServiceOption'
    DHCPv6ClientOptionPutRequestBody:
      required:
        - value
      allOf:
        - $ref: '#/components/schemas/DHCPv6ClientOption'
    DHCPv6RawOptionPutRequestBody:
      required:
        - value
      allOf:
        - $ref: '#/components/schemas/DHCPv6RawOption'
    DHCPv6ServiceOptionPutRequestBody:
      required:
        - value
      allOf:
        - $ref: '#/components/schemas/DHCPv6ServiceOption'
    DNSOptionPutRequestBody:
      required:
        - value
      allOf:
        - $ref: '#/components/schemas/DNSOption'
    DNSRawOptionPutRequestBody:
      required:
        - value
      allOf:
        - $ref: '#/components/schemas/DNSRawOption'
    StartOfAuthorityPutRequestBody:
      allOf:
        - $ref: '#/components/schemas/StartOfAuthority'
    DHCPVendorOptionPutRequestBody:
      allOf:
        - $ref: '#/components/schemas/DHCPVendorOption'
    FullDeploymentResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deployments/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deployments
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    FullDeploymentCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/deployments?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/deployments?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    QuickDeploymentCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/deployments?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/deployments?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    QuickDeploymentResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deployments/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deployments
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    SelectiveDeploymentPostRequestBody:
      required:
        - resources
        - type
      allOf:
        - $ref: '#/components/schemas/SelectiveDeployment'
    SelectiveDeploymentResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deployments/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deployments
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    QuickDeploymentPostRequestBody:
      required:
        - type
      allOf:
        - $ref: '#/components/schemas/QuickDeployment'
    FullDeploymentPostRequestBody:
      required:
        - service
        - type
      allOf:
        - $ref: '#/components/schemas/FullDeployment'
    DifferentialDeploymentPostRequestBody:
      required:
        - service
        - type
      allOf:
        - $ref: '#/components/schemas/DifferentialDeployment'
    ValidationDeploymentPostRequestBody:
      required:
        - service
        - type
      allOf:
        - $ref: '#/components/schemas/ValidationDeployment'
    DHCPDeploymentRoleCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/deploymentRoles?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/deploymentRoles?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DHCPDeploymentRoleResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deploymentRoles/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deploymentRoles
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DNSDeploymentRoleResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deploymentRoles/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deploymentRoles
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DNSDeploymentRoleCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/deploymentRoles?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/deploymentRoles?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    TFTPDeploymentRoleCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/deploymentRoles?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/deploymentRoles?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    TFTPDeploymentRoleResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deploymentRoles/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deploymentRoles
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DHCPDeploymentRolePostRequestBody:
      required:
        - interfaces
        - roleType
        - type
      allOf:
        - $ref: '#/components/schemas/DHCPDeploymentRole'
    DNSDeploymentRolePostRequestBody:
      required:
        - interfaces
        - roleType
        - type
      allOf:
        - $ref: '#/components/schemas/DNSDeploymentRole'
    TFTPDeploymentRolePostRequestBody:
      required:
        - server
        - type
      allOf:
        - $ref: '#/components/schemas/TFTPDeploymentRole'
    DHCPDeploymentRolePutRequestBody:
      required:
        - roleType
      allOf:
        - $ref: '#/components/schemas/DHCPDeploymentRole'
    DNSDeploymentRolePutRequestBody:
      required:
        - roleType
      allOf:
        - $ref: '#/components/schemas/DNSDeploymentRole'
    TFTPDeploymentRolePutRequestBody:
      required:
        - server
      allOf:
        - $ref: '#/components/schemas/TFTPDeploymentRole'
    DeviceCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/devices?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/devices?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DeviceResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /devices/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /devices
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DevicePostRequestBody:
      required:
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/Device'
    DevicePutRequestBody:
      required:
        - name
      allOf:
        - $ref: '#/components/schemas/Device'
    DeviceSubtypeResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deviceSubtypes/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deviceSubtypes
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DeviceSubtypeCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/deviceSubtypes?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/deviceSubtypes?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DeviceSubtypePostRequestBody:
      required:
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/DeviceSubtype'
    DeviceSubtypePutRequestBody:
      required:
        - name
      allOf:
        - $ref: '#/components/schemas/DeviceSubtype'
    DeviceTypeResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deviceTypes/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /deviceTypes
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DeviceTypeCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/deviceTypes?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/deviceTypes?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DeviceTypePostRequestBody:
      required:
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/DeviceType'
    DeviceTypePutRequestBody:
      required:
        - name
      allOf:
        - $ref: '#/components/schemas/DeviceType'
    DiscoveredARPEntry:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          readOnly: true
          enum:
            - DiscoveredARPEntry
        device:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/DiscoveredDevice'
        address:
          type: string
          description: The IP address of the discovered device on the network.
          readOnly: true
        macAddress:
          type: string
          description: The MAC address of the discovered device on the network.
          readOnly: true
        interface:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/DiscoveredInterface'
    DiscoveredDevice:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          readOnly: true
      description: The device details of the discovered device on the network.
      discriminator:
        propertyName: type
    DiscoveredHost:
      type: object
      allOf:
        - $ref: '#/components/schemas/DiscoveredDevice'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              readOnly: true
              enum:
                - DiscoveredHost
            device:
              readOnly: true
              allOf:
                - $ref: '#/components/schemas/DiscoveredDevice'
            address:
              type: string
              description: The IP address of the discovered device on the network.
              readOnly: true
            macAddress:
              type: string
              description: The MAC address of the discovered device on the network.
              readOnly: true
            interface:
              readOnly: true
              allOf:
                - $ref: '#/components/schemas/DiscoveredInterface'
    DiscoveredInterface:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          readOnly: true
          enum:
            - DiscoveredInterface
        device:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/DiscoveredDevice'
        name:
          type: string
          description: The name of the physical or virtual interface of the device.
          readOnly: true
        description:
          type: string
          description: The description of the device interface.
          readOnly: true
        interfaceIndex:
          type: integer
          description: The unique index of the interface.
          format: int32
          readOnly: true
        macAddress:
          type: string
          description: The MAC address of the device interface.
          readOnly: true
        speed:
          type: integer
          description: The speed of the interface in bits per second.
          format: int32
          readOnly: true
        connector:
          type: string
          description: Indicates whether the device interface sublayer has a physical connector.
          readOnly: true
        alias:
          type: string
          description: The alias name of the device interface.
          readOnly: true
      description: The linked interface details of the discovered device on the network.
    DiscoveredMACAddress:
      type: object
      allOf:
        - $ref: '#/components/schemas/DiscoveredDevice'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              readOnly: true
              enum:
                - DiscoveredMACAddress
            device:
              readOnly: true
              allOf:
                - $ref: '#/components/schemas/DiscoveredDevice'
            macAddress:
              type: string
              description: The unicast MAC address of the of the discovered device port.
              readOnly: true
            portMode:
              type: string
              description: Indicates whether the discovered device port is trunking.
              readOnly: true
              enum:
                - TRUNK
                - ACCESS
            interface:
              readOnly: true
              allOf:
                - $ref: '#/components/schemas/DiscoveredInterface'
    DiscoveredNetwork:
      type: object
      allOf:
        - $ref: '#/components/schemas/DiscoveredDevice'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              readOnly: true
              enum:
                - DiscoveredNetwork
            device:
              readOnly: true
              allOf:
                - $ref: '#/components/schemas/DiscoveredDevice'
            range:
              type: string
              description: The IP address range of the network discovered on the device.
              readOnly: true
            interface:
              readOnly: true
              allOf:
                - $ref: '#/components/schemas/DiscoveredInterface'
    DiscoveredRouter:
      type: object
      allOf:
        - $ref: '#/components/schemas/DiscoveredDevice'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              readOnly: true
              enum:
                - DiscoveredRouter
            name:
              type: string
              description: The name of the discovered device on the network.
              readOnly: true
              example: Main-Switch.qa.example.corp
            description:
              type: string
              description: The description of the discovered device on the network.
              readOnly: true
              example: Pingsweep synthetic switch version 1.0
            address:
              type: string
              description: The IP address of the discovered device on the network.
              readOnly: true
              example: 192.168.1.1
            location:
              type: string
              description: The location of the discovered device on the network.
              readOnly: true
    DiscoveredSwitch:
      type: object
      allOf:
        - $ref: '#/components/schemas/DiscoveredDevice'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              readOnly: true
              enum:
                - DiscoveredSwitch
            name:
              type: string
              description: The name of the discovered device on the network.
              readOnly: true
              example: Main-Switch.qa.example.corp
            description:
              type: string
              description: The description of the discovered device on the network.
              readOnly: true
              example: Pingsweep synthetic switch version 1.0
            address:
              type: string
              description: The IP address of the discovered device on the network.
              readOnly: true
              example: 192.168.1.1
            location:
              type: string
              description: The location of the discovered device on the network.
              readOnly: true
    DiscoveredVLAN:
      type: object
      allOf:
        - $ref: '#/components/schemas/DiscoveredDevice'
        - type: object
          properties:
            type:
              type: string
              description: The resource type.
              readOnly: true
              enum:
                - DiscoveredVLAN
            device:
              readOnly: true
              allOf:
                - $ref: '#/components/schemas/DiscoveredDevice'
            name:
              type: string
              description: The name of the discovered VLAN.
              readOnly: true
            vlanId:
              type: integer
              description: The ID of the discovered VLAN.
              format: int32
              readOnly: true
            interface:
              readOnly: true
              allOf:
                - $ref: '#/components/schemas/DiscoveredInterface'
    DiscoveredARPEntryResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /discoveredDevices/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /discoveredDevices
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DiscoveredARPEntryCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/discoveredDevices?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/discoveredDevices?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    Event:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - Event
        eventType:
          type: string
          description: The log level of the event.
          enum:
            - INFO
            - WARNING
            - ERROR
            - SUCCESS
            - FAILED
            - NOT_DEPLOYED
            - INVALID
            - NO_ROLE
            - RESPONSE_POLICY_ZONES_NOT_DEPLOYED
            - VALID
        category:
          type: string
          description: The classification of the event, such as an APPLICATION or DEPLOYMENT event.
          enum:
            - APPLICATION
            - DATABASE_MAINTENANCE
            - DATA_CHECKER
            - DATA_COLLECTION
            - DDNS_NOTIFICATION
            - DEPLOYMENT
            - DEPLOYMENT_DATA_VALIDATION
            - DHCP_ALERT
            - DHCP_LEASE_SYNCHRONIZATION
            - DNSSEC_KEY_EXPIRATION
            - IP_RECONCILIATION
            - IP_TEMPLATE
            - MIGRATION
            - REPORT_SCHEDULER
            - SERVER_HIGH_AVAILABILITY
            - SERVER_MONITORING
            - SOFTWARE_UPDATE
            - SSO_MANAGEMENT
            - SYSTEM_MAINTENANCE
            - TRUST_RELATIONSHIP
            - WORKFLOW_REQUEST
            - ZONE_TEMPLATE
            - MULTI_PRIMARY_DNS_SYNC
        subcategory:
          type: string
          description: The subcategory classification of the event.
          enum:
            - DNS
            - DHCPv4
            - DHCPv6
            - TFTP
        source:
          $ref: '#/components/schemas/Resource'
        sourceName:
          type: string
          description: The name of the software component involved in the event.
        message:
          type: string
          description: The message describing the event.
        dateTime:
          type: string
          description: The date and time that the event occurred.
          format: date-time
        details:
          type: object
        taskId:
          type: string
          description: The ID of the task performed.
          format: uuid
        payload:
          type: string
          description: The payload associated with the task.
        user:
          $ref: '#/components/schemas/User'
    EventResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /events/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /events
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    EventCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/events?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/events?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    TFTPFileResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /files/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /files
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    TFTPFileCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/files?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/files?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ServerFile:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ServerFile
        name:
          type: string
          description: The name of the server file.
          readOnly: true
          example: example.sh
        permissions:
          type: array
          description: The list of permissions associated with the server file.
          readOnly: true
          items:
            type: string
            description: The list of permissions associated with the server file.
            enum:
              - OWNER_READ
              - OWNER_WRITE
              - OWNER_EXECUTE
              - GROUP_READ
              - GROUP_WRITE
              - GROUP_EXECUTE
              - OTHERS_READ
              - OTHERS_WRITE
              - OTHERS_EXECUTE
        size:
          type: integer
          description: The size of the server file.
          format: int64
          readOnly: true
          example: 10193
        owner:
          type: string
          description: The owner of the server file.
          readOnly: true
        group:
          type: string
          description: The operating system user group that owns the server file.
          readOnly: true
        modificationDateTime:
          type: string
          description: The date and time that the server file was last modified.
          format: date-time
          readOnly: true
          example: "2023-11-28T21:38:45Z"
    ServerFileResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /files/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /files
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ServerFileCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/files?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/files?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    TFTPFilePostRequestBody:
      required:
        - fileData
        - fileInfo
      type: object
      properties:
        fileInfo:
          $ref: '#/components/schemas/FileInfo'
        fileData:
          type: string
          format: binary
    TFTPFolderPostRequestBody:
      required:
        - fileData
        - fileInfo
      type: object
      properties:
        fileInfo:
          $ref: '#/components/schemas/FileInfo'
        fileData:
          type: string
          format: binary
    TFTPFilePutRequestBody:
      required:
        - name
      allOf:
        - $ref: '#/components/schemas/TFTPFile'
    TFTPFolderPutRequestBody:
      required:
        - name
      allOf:
        - $ref: '#/components/schemas/TFTPFolder'
    UserGroupResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /groups/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /groups
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    UserGroupCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/groups?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/groups?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    UserGroupPostRequestBody:
      required:
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/UserGroup'
    UserGroupPutRequestBody:
      required:
        - administratorPrivilege
        - groupType
        - name
      allOf:
        - $ref: '#/components/schemas/UserGroup'
    IPv4BlockImport:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of import
          enum:
            - IPv4BlockImport
        contentType:
          type: string
          description: The content type of the import data
          readOnly: true
          example: application/vnd.bcn.proteus-migration+xml; v=3.0
        size:
          type: integer
          description: The size of the import, in bytes
          format: int64
          readOnly: true
          example: 10193
        state:
          type: string
          description: The current state of the import
          enum:
            - PENDING
            - QUEUED
            - RUNNING
            - CANCELLED
            - CANCELLING
            - COMPLETED
            - COMPLETED_WITH_ERRORS
            - COMPLETED_WITH_WARNINGS
            - FAILED
            - UNKNOWN
        creationDateTime:
          type: string
          description: The date and time the import resource was created
          format: date-time
          readOnly: true
          example: "2022-11-07T10:34:22Z"
        startDateTime:
          type: string
          description: The date and time the import was started
          format: date-time
          readOnly: true
          example: "2022-11-07T10:38:23Z"
        completionDateTime:
          type: string
          description: The date and time the import completed
          format: date-time
          readOnly: true
          example: "2022-11-07T10:47:43Z"
        resources:
          type: array
          description: A list of imported resources.
          writeOnly: true
          items:
            $ref: '#/components/schemas/IPv4Block'
    IPv4NetworkImport:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of import
          enum:
            - IPv4NetworkImport
        contentType:
          type: string
          description: The content type of the import data
          readOnly: true
          example: application/vnd.bcn.proteus-migration+xml; v=3.0
        size:
          type: integer
          description: The size of the import, in bytes
          format: int64
          readOnly: true
          example: 10193
        state:
          type: string
          description: The current state of the import
          enum:
            - PENDING
            - QUEUED
            - RUNNING
            - CANCELLED
            - CANCELLING
            - COMPLETED
            - COMPLETED_WITH_ERRORS
            - COMPLETED_WITH_WARNINGS
            - FAILED
            - UNKNOWN
        creationDateTime:
          type: string
          description: The date and time the import resource was created
          format: date-time
          readOnly: true
          example: "2022-11-07T10:34:22Z"
        startDateTime:
          type: string
          description: The date and time the import was started
          format: date-time
          readOnly: true
          example: "2022-11-07T10:38:23Z"
        completionDateTime:
          type: string
          description: The date and time the import completed
          format: date-time
          readOnly: true
          example: "2022-11-07T10:47:43Z"
        resources:
          type: array
          description: A list of imported resources.
          writeOnly: true
          items:
            $ref: '#/components/schemas/IPv4Network'
    IPv6BlockImport:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of import
          enum:
            - IPv6BlockImport
        contentType:
          type: string
          description: The content type of the import data
          readOnly: true
          example: application/vnd.bcn.proteus-migration+xml; v=3.0
        size:
          type: integer
          description: The size of the import, in bytes
          format: int64
          readOnly: true
          example: 10193
        state:
          type: string
          description: The current state of the import
          enum:
            - PENDING
            - QUEUED
            - RUNNING
            - CANCELLED
            - CANCELLING
            - COMPLETED
            - COMPLETED_WITH_ERRORS
            - COMPLETED_WITH_WARNINGS
            - FAILED
            - UNKNOWN
        creationDateTime:
          type: string
          description: The date and time the import resource was created
          format: date-time
          readOnly: true
          example: "2022-11-07T10:34:22Z"
        startDateTime:
          type: string
          description: The date and time the import was started
          format: date-time
          readOnly: true
          example: "2022-11-07T10:38:23Z"
        completionDateTime:
          type: string
          description: The date and time the import completed
          format: date-time
          readOnly: true
          example: "2022-11-07T10:47:43Z"
        resources:
          type: array
          description: A list of imported resources.
          writeOnly: true
          items:
            $ref: '#/components/schemas/IPv6Block'
    IPv6NetworkImport:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of import
          enum:
            - IPv6NetworkImport
        contentType:
          type: string
          description: The content type of the import data
          readOnly: true
          example: application/vnd.bcn.proteus-migration+xml; v=3.0
        size:
          type: integer
          description: The size of the import, in bytes
          format: int64
          readOnly: true
          example: 10193
        state:
          type: string
          description: The current state of the import
          enum:
            - PENDING
            - QUEUED
            - RUNNING
            - CANCELLED
            - CANCELLING
            - COMPLETED
            - COMPLETED_WITH_ERRORS
            - COMPLETED_WITH_WARNINGS
            - FAILED
            - UNKNOWN
        creationDateTime:
          type: string
          description: The date and time the import resource was created
          format: date-time
          readOnly: true
          example: "2022-11-07T10:34:22Z"
        startDateTime:
          type: string
          description: The date and time the import was started
          format: date-time
          readOnly: true
          example: "2022-11-07T10:38:23Z"
        completionDateTime:
          type: string
          description: The date and time the import completed
          format: date-time
          readOnly: true
          example: "2022-11-07T10:47:43Z"
        resources:
          type: array
          description: A list of imported resources.
          writeOnly: true
          items:
            $ref: '#/components/schemas/IPv6Network'
    IPv4BlockImportResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /imports/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /imports
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4BlockImportCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/imports?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/imports?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4AddressImport:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of import
          enum:
            - IPv4AddressImport
        contentType:
          type: string
          description: The content type of the import data
          readOnly: true
          example: application/vnd.bcn.proteus-migration+xml; v=3.0
        size:
          type: integer
          description: The size of the import, in bytes
          format: int64
          readOnly: true
          example: 10193
        state:
          type: string
          description: The current state of the import
          enum:
            - PENDING
            - QUEUED
            - RUNNING
            - CANCELLED
            - CANCELLING
            - COMPLETED
            - COMPLETED_WITH_ERRORS
            - COMPLETED_WITH_WARNINGS
            - FAILED
            - UNKNOWN
        creationDateTime:
          type: string
          description: The date and time the import resource was created
          format: date-time
          readOnly: true
          example: "2022-11-07T10:34:22Z"
        startDateTime:
          type: string
          description: The date and time the import was started
          format: date-time
          readOnly: true
          example: "2022-11-07T10:38:23Z"
        completionDateTime:
          type: string
          description: The date and time the import completed
          format: date-time
          readOnly: true
          example: "2022-11-07T10:47:43Z"
        resources:
          type: array
          description: A list of imported resources.
          writeOnly: true
          items:
            $ref: '#/components/schemas/IPv4Address'
    IPv6AddressImport:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of import
          enum:
            - IPv6AddressImport
        contentType:
          type: string
          description: The content type of the import data
          readOnly: true
          example: application/vnd.bcn.proteus-migration+xml; v=3.0
        size:
          type: integer
          description: The size of the import, in bytes
          format: int64
          readOnly: true
          example: 10193
        state:
          type: string
          description: The current state of the import
          enum:
            - PENDING
            - QUEUED
            - RUNNING
            - CANCELLED
            - CANCELLING
            - COMPLETED
            - COMPLETED_WITH_ERRORS
            - COMPLETED_WITH_WARNINGS
            - FAILED
            - UNKNOWN
        creationDateTime:
          type: string
          description: The date and time the import resource was created
          format: date-time
          readOnly: true
          example: "2022-11-07T10:34:22Z"
        startDateTime:
          type: string
          description: The date and time the import was started
          format: date-time
          readOnly: true
          example: "2022-11-07T10:38:23Z"
        completionDateTime:
          type: string
          description: The date and time the import completed
          format: date-time
          readOnly: true
          example: "2022-11-07T10:47:43Z"
        resources:
          type: array
          description: A list of imported resources.
          writeOnly: true
          items:
            $ref: '#/components/schemas/IPv6Address'
    ResourceRecordImport:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of import
          enum:
            - ResourceRecordImport
        contentType:
          type: string
          description: The content type of the import data
          readOnly: true
          example: application/vnd.bcn.proteus-migration+xml; v=3.0
        size:
          type: integer
          description: The size of the import, in bytes
          format: int64
          readOnly: true
          example: 10193
        state:
          type: string
          description: The current state of the import
          enum:
            - PENDING
            - QUEUED
            - RUNNING
            - CANCELLED
            - CANCELLING
            - COMPLETED
            - COMPLETED_WITH_ERRORS
            - COMPLETED_WITH_WARNINGS
            - FAILED
            - UNKNOWN
        creationDateTime:
          type: string
          description: The date and time the import resource was created
          format: date-time
          readOnly: true
          example: "2022-11-07T10:34:22Z"
        startDateTime:
          type: string
          description: The date and time the import was started
          format: date-time
          readOnly: true
          example: "2022-11-07T10:38:23Z"
        completionDateTime:
          type: string
          description: The date and time the import completed
          format: date-time
          readOnly: true
          example: "2022-11-07T10:47:43Z"
        resources:
          type: array
          description: A list of imported resources.
          writeOnly: true
          items:
            $ref: '#/components/schemas/ResourceRecord'
    ZoneImport:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of import
          enum:
            - ZoneImport
        contentType:
          type: string
          description: The content type of the import data
          readOnly: true
          example: application/vnd.bcn.proteus-migration+xml; v=3.0
        size:
          type: integer
          description: The size of the import, in bytes
          format: int64
          readOnly: true
          example: 10193
        state:
          type: string
          description: The current state of the import
          enum:
            - PENDING
            - QUEUED
            - RUNNING
            - CANCELLED
            - CANCELLING
            - COMPLETED
            - COMPLETED_WITH_ERRORS
            - COMPLETED_WITH_WARNINGS
            - FAILED
            - UNKNOWN
        creationDateTime:
          type: string
          description: The date and time the import resource was created
          format: date-time
          readOnly: true
          example: "2022-11-07T10:34:22Z"
        startDateTime:
          type: string
          description: The date and time the import was started
          format: date-time
          readOnly: true
          example: "2022-11-07T10:38:23Z"
        completionDateTime:
          type: string
          description: The date and time the import completed
          format: date-time
          readOnly: true
          example: "2022-11-07T10:47:43Z"
        resources:
          type: array
          description: A list of imported resources.
          writeOnly: true
          items:
            $ref: '#/components/schemas/Zone'
    IPv4AddressImportResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /imports/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /imports
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4AddressImportCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/imports?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/imports?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ResponsePolicyItemImportResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /imports/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /imports
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ResponsePolicyItemImportCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/imports?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/imports?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ZoneImportResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /imports/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /imports
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ZoneImportCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/imports?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/imports?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ResourceRecordImportResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /imports/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /imports
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ResourceRecordImportCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/imports?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/imports?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ResourceImportResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /imports/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /imports
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4BlockImportPostRequestBody:
      required:
        - type
      allOf:
        - $ref: '#/components/schemas/IPv4BlockImport'
    IPv4NetworkImportPostRequestBody:
      required:
        - type
      allOf:
        - $ref: '#/components/schemas/IPv4NetworkImport'
    IPv6BlockImportPostRequestBody:
      required:
        - type
      allOf:
        - $ref: '#/components/schemas/IPv6BlockImport'
    IPv6NetworkImportPostRequestBody:
      required:
        - type
      allOf:
        - $ref: '#/components/schemas/IPv6NetworkImport'
    ResourceImportPostRequestBody:
      required:
        - fileData
        - fileInfo
      type: object
      properties:
        fileInfo:
          $ref: '#/components/schemas/ResourceImport'
        fileData:
          type: string
          format: binary
    IPv4AddressImportPostRequestBody:
      required:
        - type
      allOf:
        - $ref: '#/components/schemas/IPv4AddressImport'
    IPv6AddressImportPostRequestBody:
      required:
        - type
      allOf:
        - $ref: '#/components/schemas/IPv6AddressImport'
    ResponsePolicyItemImportPostRequestBody:
      required:
        - fileData
        - fileInfo
      type: object
      properties:
        fileInfo:
          $ref: '#/components/schemas/ResponsePolicyItemImport'
        fileData:
          type: string
          format: binary
    ZoneImportPostRequestBody:
      required:
        - type
      allOf:
        - $ref: '#/components/schemas/ZoneImport'
    ResourceRecordImportPostRequestBody:
      required:
        - type
      allOf:
        - $ref: '#/components/schemas/ResourceRecordImport'
    NetworkInterfaceCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/interfaces?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/interfaces?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    NetworkInterfaceResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /interfaces/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /interfaces
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ServerGroupInterface:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ServerGroupInterface
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        configuration:
          required:
            - id
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
    ServerGroupInterfaceCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/interfaces?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/interfaces?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ServerGroupInterfaceResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /interfaces/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /interfaces
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    PublishedInterfacePostRequestBody:
      required:
        - name
        - primaryAddress
        - type
      allOf:
        - $ref: '#/components/schemas/PublishedInterface'
    PublishedInterfaceResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /interfaces/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /interfaces
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    PublishedInterfacePutRequestBody:
      required:
        - name
        - primaryAddress
      allOf:
        - $ref: '#/components/schemas/PublishedInterface'
    IPv4GroupResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /ipGroups/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /ipGroups
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4GroupCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/ipGroups?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/ipGroups?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4GroupPostRequestBody:
      required:
        - name
        - range
        - type
      allOf:
        - $ref: '#/components/schemas/IPv4Group'
    IPv4GroupPutRequestBody:
      required:
        - name
        - range
      allOf:
        - $ref: '#/components/schemas/IPv4Group'
    KeyDistributionCenterResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /keyDistributionCenters/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /keyDistributionCenters
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    KeyDistributionCenterCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/keyDistributionCenters?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/keyDistributionCenters?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    KeyDistributionCenterPostRequestBody:
      required:
        - host
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/KeyDistributionCenter'
    KeyDistributionCenterPutRequestBody:
      required:
        - host
        - name
        - port
      allOf:
        - $ref: '#/components/schemas/KeyDistributionCenter'
    DHCPv4LeaseCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/leases?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/leases?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DHCPv4Lease:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DHCPv4Lease
    DHCPv6Lease:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DHCPv6Lease
    DHCPv4LeaseResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /leases/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /leases
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    LocationResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /locations/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /locations
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    LocationCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/locations?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/locations?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    LocationPostRequestBody:
      required:
        - code
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/Location'
    LocationPutRequestBody:
      allOf:
        - $ref: '#/components/schemas/Location'
    DatabaseLog:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - DatabaseLog
        name:
          type: string
          description: The name of the log file.
          readOnly: true
          example: server.log
        size:
          type: integer
          description: The size of the log file, in bytes.
          format: int64
          readOnly: true
          example: 10193
        modificationDateTime:
          type: string
          description: The date and time that the log file was modified.
          format: date-time
          readOnly: true
          example: "2023-12-11T13:15:00Z"
    DatabaseLogResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /logs/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /logs
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DatabaseLogCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/logs?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/logs?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ImportLog:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ImportLog
        name:
          type: string
          description: The name of the log file.
          readOnly: true
          example: server.log
        size:
          type: integer
          description: The size of the log file, in bytes.
          format: int64
          readOnly: true
          example: 10193
        modificationDateTime:
          type: string
          description: The date and time that the log file was modified.
          format: date-time
          readOnly: true
          example: "2023-12-11T13:15:00Z"
    ImportLogResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /logs/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /logs
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ImportLogCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/logs?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/logs?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    SystemLog:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - SystemLog
        name:
          type: string
          description: The name of the log file.
          readOnly: true
          example: server.log
        size:
          type: integer
          description: The size of the log file, in bytes.
          format: int64
          readOnly: true
          example: 10193
        modificationDateTime:
          type: string
          description: The date and time that the log file was modified.
          format: date-time
          readOnly: true
          example: "2023-12-11T13:15:00Z"
    SystemLogResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /logs/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /logs
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    SystemLogCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/logs?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/logs?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ServerLog:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - ServerLog
        name:
          type: string
          description: The name of the log file.
          readOnly: true
          example: server.log
        size:
          type: integer
          description: The size of the log file, in bytes.
          format: int64
          readOnly: true
          example: 10193
        modificationDateTime:
          type: string
          description: The date and time that the log file was modified.
          format: date-time
          readOnly: true
          example: "2023-12-11T13:15:00Z"
    ServerLogResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /logs/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /logs
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ServerLogCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/logs?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/logs?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    MACAddressCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/macAddresses?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/macAddresses?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    MACAddressResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /macAddresses/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /macAddresses
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    MACAddressPostRequestBody:
      required:
        - address
        - type
      allOf:
        - $ref: '#/components/schemas/MACAddress'
    MACAddressPutRequestBody:
      required:
        - address
      allOf:
        - $ref: '#/components/schemas/MACAddress'
    DenyMACPoolCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/macPools?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/macPools?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DenyMACPoolResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /macPools/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /macPools
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    MACPoolPostRequestBody:
      required:
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/MACPool'
    MACPoolResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /macPools/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /macPools
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    MACPoolPutRequestBody:
      required:
        - instantDeploymentEnabled
        - name
      allOf:
        - $ref: '#/components/schemas/MACPool'
    IPv4BlockMergeCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/merges?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/merges?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4BlockMergeResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /merges/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /merges
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4DHCPRangeMergeCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/merges?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/merges?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4DHCPRangeMergeResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /merges/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /merges
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4BlockMergePostRequestBody:
      required:
        - blocks
        - destination
        - type
      allOf:
        - $ref: '#/components/schemas/IPv4BlockMerge'
    IPv4NetworkMergePostRequestBody:
      required:
        - destination
        - networks
        - type
      allOf:
        - $ref: '#/components/schemas/IPv4NetworkMerge'
    IPv4DHCPRangeMergePostRequestBody:
      required:
        - destination
        - ranges
        - type
      allOf:
        - $ref: '#/components/schemas/IPv4DHCPRangeMerge'
    IPv4AddressMoveCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/moves?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/moves?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4AddressMove:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - IPv4AddressMove
        transaction:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Transaction'
        destination:
          required:
            - address
          nullable: false
          allOf:
            - $ref: '#/components/schemas/InlinedIPv4Address'
        source:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Address'
    InlinedIPv4Address:
      title: IPv4Address
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of IP address.
          enum:
            - IPv4Address
        name:
          type: string
          description: The name of the resource.
          example: name
        address:
          type: string
          description: The IP address.
    IPv6AddressMove:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - IPv6AddressMove
        transaction:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Transaction'
        destination:
          nullable: false
          anyOf:
            - required:
                - address
              allOf:
                - $ref: '#/components/schemas/InlinedIPv6Address'
            - required:
                - macAddress
              allOf:
                - $ref: '#/components/schemas/InlinedIPv6Address'
        source:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Address'
    InlinedIPv6Address:
      title: IPv6Address
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of IP address.
          enum:
            - IPv6Address
        name:
          type: string
          description: The name of the resource.
          example: name
        address:
          type: string
          description: The IP address.
        macAddress:
          anyOf:
            - required:
                - id
              allOf:
                - $ref: '#/components/schemas/InlinedMACAddress'
            - required:
                - address
              allOf:
                - $ref: '#/components/schemas/InlinedMACAddress'
    IPv4AddressMoveResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /moves/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /moves
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4BlockMoveCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/moves?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/moves?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4BlockMove:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - IPv4BlockMove
        transaction:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Transaction'
        destination:
          required:
            - range
          nullable: false
          allOf:
            - $ref: '#/components/schemas/InlinedIPv4Block'
        source:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Block'
    IPv6BlockMove:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - IPv6BlockMove
        transaction:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Transaction'
        destination:
          required:
            - range
          nullable: false
          allOf:
            - $ref: '#/components/schemas/InlinedIPv6Block'
        source:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Block'
    InlinedIPv6Block:
      title: IPv6Block
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The type of IP block.
          enum:
            - IPv6Block
        name:
          type: string
          description: The name of the resource.
          example: name
        range:
          type: string
          description: The address range for the IPv6 block.
          nullable: false
    IPv4BlockMoveResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /moves/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /moves
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DeploymentRoleMoveCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/moves?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/moves?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DeploymentRoleMoveResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /moves/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /moves
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4NetworkMove:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - IPv4NetworkMove
        transaction:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Transaction'
        destination:
          required:
            - range
          nullable: false
          allOf:
            - $ref: '#/components/schemas/InlinedIPv4Network'
        source:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Network'
    IPv6NetworkMove:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - IPv6NetworkMove
        transaction:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Transaction'
        destination:
          required:
            - range
          nullable: false
          allOf:
            - $ref: '#/components/schemas/InlinedIPv6Network'
        source:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Network'
    InlinedIPv6Network:
      title: IPv6Network
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - IPv6Network
        name:
          type: string
          description: The name of the resource.
          example: name
        range:
          type: string
          description: The address range for the IPv6 network.
          nullable: false
    IPv4NetworkMoveCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/moves?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/moves?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4NetworkMoveResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /moves/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /moves
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ResourceRecordMoveCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/moves?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/moves?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ResourceRecordMoveResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /moves/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /moves
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ZoneMoveCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/moves?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/moves?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ZoneMoveResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /moves/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /moves
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4AddressMovePostRequestBody:
      required:
        - destination
        - type
      allOf:
        - $ref: '#/components/schemas/IPv4AddressMove'
    IPv6AddressMovePostRequestBody:
      required:
        - destination
        - type
      allOf:
        - $ref: '#/components/schemas/IPv6AddressMove'
    IPv4BlockMovePostRequestBody:
      required:
        - destination
        - type
      allOf:
        - $ref: '#/components/schemas/IPv4BlockMove'
    IPv6BlockMovePostRequestBody:
      required:
        - destination
        - type
      allOf:
        - $ref: '#/components/schemas/IPv6BlockMove'
    IPv4NetworkMovePostRequestBody:
      required:
        - destination
        - type
      allOf:
        - $ref: '#/components/schemas/IPv4NetworkMove'
    IPv6NetworkMovePostRequestBody:
      required:
        - destination
        - type
      allOf:
        - $ref: '#/components/schemas/IPv6NetworkMove'
    ResourceRecordMovePostRequestBody:
      required:
        - destination
        - type
      allOf:
        - $ref: '#/components/schemas/ResourceRecordMove'
    DeploymentRoleMovePostRequestBody:
      required:
        - destination
        - roleTypes
        - type
      allOf:
        - $ref: '#/components/schemas/DeploymentRoleMove'
    ZoneMovePostRequestBody:
      required:
        - destination
        - type
      allOf:
        - $ref: '#/components/schemas/ZoneMove'
    NamingPolicyCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/namingPolicies?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/namingPolicies?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    NamingPolicyResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /namingPolicies/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /namingPolicies
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    NamingPolicyPostRequestBody:
      required:
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/NamingPolicy'
    NamingPolicyPutRequestBody:
      required:
        - name
      allOf:
        - $ref: '#/components/schemas/NamingPolicy'
    NamingPolicyRestrictionResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /namingPolicyRestrictions/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /namingPolicyRestrictions
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    NamingPolicyRestrictionCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/namingPolicyRestrictions?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/namingPolicyRestrictions?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    NamingPolicyRestrictionPostRequestBody:
      required:
        - name
        - restrictions
        - type
      allOf:
        - $ref: '#/components/schemas/NamingPolicyRestriction'
    NamingPolicyRestrictionPutRequestBody:
      required:
        - name
        - restrictions
      allOf:
        - $ref: '#/components/schemas/NamingPolicyRestriction'
    NamingPolicyConnectorValueResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /namingPolicyValues/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /namingPolicyValues
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    NamingPolicyConnectorValueCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/namingPolicyValues?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/namingPolicyValues?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    NamingPolicyConnectorValuePostRequestBody:
      required:
        - connector
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/NamingPolicyConnectorValue'
    NamingPolicyIncrementalValuePostRequestBody:
      required:
        - incrementType
        - incrementalRole
        - name
        - paddingType
        - type
      allOf:
        - $ref: '#/components/schemas/NamingPolicyIncrementalValue'
    NamingPolicyIntegerValuePostRequestBody:
      required:
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/NamingPolicyIntegerValue'
    NamingPolicyRequiredValuePostRequestBody:
      required:
        - elements
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/NamingPolicyRequiredValue'
    NamingPolicyTextValuePostRequestBody:
      required:
        - name
        - textType
        - type
      allOf:
        - $ref: '#/components/schemas/NamingPolicyTextValue'
    NamingPolicyConnectorValuePutRequestBody:
      required:
        - connector
        - name
      allOf:
        - $ref: '#/components/schemas/NamingPolicyConnectorValue'
    NamingPolicyIncrementalValuePutRequestBody:
      required:
        - incrementType
        - incrementalRole
        - name
        - paddingType
      allOf:
        - $ref: '#/components/schemas/NamingPolicyIncrementalValue'
    NamingPolicyIntegerValuePutRequestBody:
      required:
        - name
      allOf:
        - $ref: '#/components/schemas/NamingPolicyIntegerValue'
    NamingPolicyRequiredValuePutRequestBody:
      required:
        - elements
        - name
      allOf:
        - $ref: '#/components/schemas/NamingPolicyRequiredValue'
    NamingPolicyTextValuePutRequestBody:
      required:
        - name
        - textType
      allOf:
        - $ref: '#/components/schemas/NamingPolicyTextValue'
    IPv4NetworkCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/networks?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/networks?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4NetworkResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /networks/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /networks
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv6NetworkPostRequestBody:
      required:
        - range
        - type
      allOf:
        - $ref: '#/components/schemas/IPv6Network'
    IPv4NetworkPutRequestBody:
      required:
        - defaultZonesInherited
        - dynamicUpdateEnabled
        - range
        - restrictedZonesInherited
        - reverseZoneSigned
      allOf:
        - $ref: '#/components/schemas/IPv4Network'
    IPv6NetworkPutRequestBody:
      required:
        - range
      allOf:
        - $ref: '#/components/schemas/IPv6Network'
    NotificationGroupResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /notificationGroups/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /notificationGroups
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    NotificationGroupCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/notificationGroups?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/notificationGroups?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    NotificationGroupPostRequestBody:
      required:
        - notificationType
        - type
      allOf:
        - $ref: '#/components/schemas/NotificationGroup'
    NotificationGroupPutRequestBody:
      required:
        - eventSubscriptions
        - notificationType
      allOf:
        - $ref: '#/components/schemas/NotificationGroup'
    Operation:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - Operation
        operationType:
          type: string
          description: The operation performed.
          readOnly: true
          enum:
            - ADD
            - CHANGE
            - DELETE
            - UNDO
            - BULK
        resourceId:
          type: integer
          description: The ID of the resource that the operation is performed on.
          format: int64
          readOnly: true
        resourceType:
          type: string
          description: The resource type that the operation is performed on.
          readOnly: true
          enum:
            - ACL
            - AbstractKeySigningKey
            - AbstractNetworkInterface
            - AbstractServer
            - AbstractZoneSigningKey
            - AccessRight
            - AddressManager
            - AddressManagerAuthenticator
            - AddressManagerDatabase
            - AddressManagerServer
            - AdministrativeAccessRight
            - AliasRecord
            - AnycastService
            - AuditDataSettings
            - Authenticator
            - Configuration
            - DHCPActivityService
            - DHCPAlertSettings
            - DHCPClientIdentifier
            - DHCPClientOption
            - DHCPDeploymentRole
            - DHCPForwardZone
            - DHCPReverseZone
            - DHCPServiceOption
            - DHCPStatisticsService
            - DHCPUniqueIdentifier
            - DHCPVendorOption
            - DHCPVendorOptionDefinition
            - DHCPZone
            - DHCPZoneGroup
            - DHCPv4ClientClass
            - DHCPv4ClientOption
            - DHCPv4ClientOptionDefinition
            - DHCPv4CustomClientOptionDefinition
            - DHCPv4Lease
            - DHCPv4RawOption
            - DHCPv4ServiceOption
            - DHCPv4ServiceOptionDefinition
            - DHCPv4Subclass
            - DHCPv6ClientOption
            - DHCPv6ClientOptionDefinition
            - DHCPv6Lease
            - DHCPv6RawOption
            - DHCPv6ServiceOption
            - DHCPv6ServiceOptionDefinition
            - DNS64
            - DNSActivityService
            - DNSDeploymentRole
            - DNSOption
            - DNSOptionDefinition
            - DNSRawOption
            - DNSResolverService
            - DNSSECSigningPolicy
            - DNSStatisticsService
            - Dashboard
            - DatabaseBackupFile
            - DatabaseBackupSchedule
            - DatabaseLog
            - DefaultClientOption
            - DefaultDHCPOption
            - DefaultDHCPServiceOption
            - DefaultDNSOption
            - DenyMACPool
            - DeploymentRole
            - DeploymentRoleMove
            - DeploymentSchedule
            - Device
            - DeviceSubtype
            - DeviceType
            - DifferentialDeployment
            - DiscoveredARPEntry
            - DiscoveredHost
            - DiscoveredInterface
            - DiscoveredMACAddress
            - DiscoveredNetwork
            - DiscoveredRouter
            - DiscoveredSwitch
            - DiscoveredVLAN
            - ENUMNumberZone
            - ENUMZone
            - EntrustKeySigningKey
            - EntrustZoneSigningKey
            - Event
            - ExternalHostRecord
            - ExternalHostsZone
            - FailoverAPIService
            - FirewallService
            - FullDeployment
            - GatewayService
            - GenericRecord
            - GlobalSettings
            - HAServer
            - HINFORecord
            - HSMConfiguration
            - HSMKeySigningKey
            - HSMServer
            - HSMZoneSigningKey
            - HTTPSRecord
            - HostRecord
            - IPServerInterface
            - IPv4Address
            - IPv4AddressImport
            - IPv4AddressMove
            - IPv4Block
            - IPv4BlockImport
            - IPv4BlockMerge
            - IPv4BlockMove
            - IPv4BlockSplit
            - IPv4DHCPRange
            - IPv4DHCPRangeMerge
            - IPv4DHCPRangeTemplateItem
            - IPv4GatewayTemplateItem
            - IPv4Group
            - IPv4GroupTemplateItem
            - IPv4HiddenTemplateItemChild
            - IPv4Network
            - IPv4NetworkImport
            - IPv4NetworkMerge
            - IPv4NetworkMove
            - IPv4NetworkSplit
            - IPv4Prefix
            - IPv4Range
            - IPv4ReconciliationPolicy
            - IPv4ReservedRangeTemplateItem
            - IPv4Template
            - IPv4TemplateApplication
            - IPv6Address
            - IPv6AddressImport
            - IPv6AddressMove
            - IPv6Block
            - IPv6BlockImport
            - IPv6BlockMove
            - IPv6DHCPRange
            - IPv6Network
            - IPv6NetworkImport
            - IPv6NetworkMove
            - IPv6Prefix
            - IPv6ReconciliationPolicy
            - IPv6Template
            - IPv6TemplateItem
            - ImportLog
            - InterfacesService
            - InternalRootZone
            - KerberosAuthenticator
            - KerberosRealm
            - KerberosServicePrincipal
            - KeyDistributionCenter
            - KeySigningKey
            - LDAPAuthenticator
            - LicenseService
            - Location
            - LocationGroup
            - Log
            - LogLevelSettings
            - LoginPolicySettings
            - MACAddress
            - MACPool
            - MXRecord
            - MonitoringSettings
            - NAPTRRecord
            - NTPService
            - NamingPolicy
            - NamingPolicyConnectorValue
            - NamingPolicyIncrementalValue
            - NamingPolicyIntegerValue
            - NamingPolicyRequiredValue
            - NamingPolicyRestriction
            - NamingPolicyTextValue
            - NetworkInterface
            - NotificationGroup
            - OAuthAuthorizationServer
            - Operation
            - PasswordPolicySettings
            - Preference
            - PublishedInterface
            - QuickDeployment
            - RADIUSAuthenticator
            - RawOption
            - Report
            - ReportSchedule
            - Resource
            - ResourceImport
            - ResourceRecord
            - ResourceRecordImport
            - ResourceRecordMove
            - ResponsePolicy
            - ResponsePolicyItem
            - ResponsePolicyItemImport
            - ResponsePolicyZone
            - ResponsePolicyZoneFeedCategory
            - SAMLIdentityProvider
            - SAMLServiceProviderSettings
            - SNMPService
            - SRVRecord
            - SSHService
            - SSOEnforcementSettings
            - SVCBRecord
            - SelectiveDeployment
            - Server
            - ServerFile
            - ServerGroup
            - ServerGroupInterface
            - ServerInterface
            - ServerLog
            - ServerPatch
            - ServerPatchApplication
            - ServiceOption
            - SigningKey
            - StartOfAuthority
            - StartOfAuthorityDefinition
            - SyslogService
            - SystemLog
            - SystemSettings
            - TACACSPlusAuthenticator
            - TFTPDeploymentRole
            - TFTPFile
            - TFTPFolder
            - TFTPGroup
            - TFTPNode
            - TSIGKey
            - TXTRecord
            - Tag
            - TagGroup
            - Task
            - Transaction
            - TrustRelationship
            - URIRecord
            - User
            - UserDefinedFieldDefinition
            - UserDefinedLinkDefinition
            - UserGroup
            - UserSession
            - ValidationDeployment
            - VendorProfile
            - View
            - VirtualInterface
            - WebAccessSettings
            - Widget
            - WorkflowRequest
            - X509Authenticator
            - Zone
            - ZoneImport
            - ZoneMove
            - ZoneSigningKey
            - ZoneTemplate
            - ZoneTemplateApplication
        fieldUpdates:
          type: array
          description: A list of updated fields.
          readOnly: true
          items:
            $ref: '#/components/schemas/FieldUpdateBean'
    OperationResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /operations/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /operations
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    OperationCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/operations?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/operations?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ServerPatchApplicationResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /patchApplications/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /patchApplications
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ServerPatchApplicationCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/patchApplications?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/patchApplications?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ServerPatchApplicationPostRequestBody:
      required:
        - patch
        - type
      allOf:
        - $ref: '#/components/schemas/ServerPatchApplication'
    ServerPatchResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /patches/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /patches
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ServerPatchCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/patches?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/patches?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ServerPatchPostRequestBody:
      required:
        - fileData
        - fileInfo
      type: object
      properties:
        fileInfo:
          $ref: '#/components/schemas/ServerPatch'
        fileData:
          type: string
          format: binary
    ResponsePolicyItemResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /policyItems/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /policyItems
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ResponsePolicyItemCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/policyItems?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/policyItems?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ResponsePolicyItemPostRequestBody:
      required:
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/ResponsePolicyItem'
    ResponsePolicyItemPutRequestBody:
      required:
        - name
      allOf:
        - $ref: '#/components/schemas/ResponsePolicyItem'
    IPv4DHCPRangeCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/ranges?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/ranges?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4DHCPRangeResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /ranges/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /ranges
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4DHCPRangePostRequestBody:
      required:
        - range
        - type
      allOf:
        - $ref: '#/components/schemas/IPv4DHCPRange'
    IPv6DHCPRangePostRequestBody:
      required:
        - range
        - type
      allOf:
        - $ref: '#/components/schemas/IPv6DHCPRange'
    IPv4DHCPRangePutRequestBody:
      required:
        - exclusionRanges
        - range
        - splitAroundStaticAddresses
      allOf:
        - $ref: '#/components/schemas/IPv4DHCPRange'
    IPv6DHCPRangePutRequestBody:
      required:
        - range
      allOf:
        - $ref: '#/components/schemas/IPv6DHCPRange'
    KerberosRealmCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/realms?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/realms?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    KerberosRealmResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /realms/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /realms
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    KerberosRealmPostRequestBody:
      required:
        - domain
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/KerberosRealm'
    KerberosRealmPutRequestBody:
      required:
        - domain
        - name
      allOf:
        - $ref: '#/components/schemas/KerberosRealm'
    IPv4ReconciliationPolicyCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/reconciliationPolicies?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/reconciliationPolicies?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4ReconciliationPolicyResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /reconciliationPolicies/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /reconciliationPolicies
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4ReconciliationPolicyPostRequestBody:
      required:
        - discoveryMethod
        - startDateTime
        - type
      allOf:
        - $ref: '#/components/schemas/IPv4ReconciliationPolicy'
    IPv6ReconciliationPolicyPostRequestBody:
      required:
        - discoveryMethod
        - startDateTime
        - type
      allOf:
        - $ref: '#/components/schemas/IPv6ReconciliationPolicy'
    IPv4ReconciliationPolicyPutRequestBody:
      required:
        - blackHoleVlan
        - discoveryMethod
        - enabled
        - skipFqdnEnabled
        - startDateTime
        - trunkDefaultVlan
      allOf:
        - $ref: '#/components/schemas/IPv4ReconciliationPolicy'
    IPv6ReconciliationPolicyPutRequestBody:
      required:
        - blackHoleVlan
        - discoveryMethod
        - enabled
        - skipFqdnEnabled
        - startDateTime
        - trunkDefaultVlan
      allOf:
        - $ref: '#/components/schemas/IPv6ReconciliationPolicy'
    ExternalHostRecordCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/resourceRecords?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/resourceRecords?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ExternalHostRecordResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /resourceRecords/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /resourceRecords
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ExternalHostRecordPostRequestBody:
      required:
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/ExternalHostRecord'
    HostRecordPostRequestBody:
      required:
        - addresses
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/HostRecord'
    AliasRecordPostRequestBody:
      required:
        - linkedRecord
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/AliasRecord'
    GenericRecordPostRequestBody:
      required:
        - name
        - rdata
        - recordType
        - type
      allOf:
        - $ref: '#/components/schemas/GenericRecord'
    HINFORecordPostRequestBody:
      required:
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/HINFORecord'
    HTTPSRecordPostRequestBody:
      required:
        - linkedRecord
        - name
        - priority
        - type
      allOf:
        - $ref: '#/components/schemas/HTTPSRecord'
    MXRecordPostRequestBody:
      required:
        - linkedRecord
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/MXRecord'
    NAPTRRecordPostRequestBody:
      required:
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/NAPTRRecord'
    SRVRecordPostRequestBody:
      required:
        - linkedRecord
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/SRVRecord'
    SVCBRecordPostRequestBody:
      required:
        - linkedRecord
        - name
        - priority
        - type
      allOf:
        - $ref: '#/components/schemas/SVCBRecord'
    TXTRecordPostRequestBody:
      required:
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/TXTRecord'
    URIRecordPostRequestBody:
      required:
        - name
        - target
        - type
      allOf:
        - $ref: '#/components/schemas/URIRecord'
    AliasRecordPutRequestBody:
      required:
        - linkedRecord
        - name
      allOf:
        - $ref: '#/components/schemas/AliasRecord'
    ExternalHostRecordPutRequestBody:
      required:
        - name
      allOf:
        - $ref: '#/components/schemas/ExternalHostRecord'
    GenericRecordPutRequestBody:
      required:
        - name
        - rdata
      allOf:
        - $ref: '#/components/schemas/GenericRecord'
    HINFORecordPutRequestBody:
      required:
        - name
      allOf:
        - $ref: '#/components/schemas/HINFORecord'
    HostRecordPutRequestBody:
      required:
        - name
        - reverseRecord
      allOf:
        - $ref: '#/components/schemas/HostRecord'
    HTTPSRecordPutRequestBody:
      required:
        - linkedRecord
        - name
        - priority
      allOf:
        - $ref: '#/components/schemas/HTTPSRecord'
    MXRecordPutRequestBody:
      required:
        - linkedRecord
        - name
        - priority
      allOf:
        - $ref: '#/components/schemas/MXRecord'
    NAPTRRecordPutRequestBody:
      required:
        - name
        - order
        - preference
      allOf:
        - $ref: '#/components/schemas/NAPTRRecord'
    SRVRecordPutRequestBody:
      required:
        - linkedRecord
        - name
        - port
        - priority
        - weight
      allOf:
        - $ref: '#/components/schemas/SRVRecord'
    SVCBRecordPutRequestBody:
      required:
        - linkedRecord
        - name
        - priority
      allOf:
        - $ref: '#/components/schemas/SVCBRecord'
    TXTRecordPutRequestBody:
      required:
        - name
      allOf:
        - $ref: '#/components/schemas/TXTRecord'
    URIRecordPutRequestBody:
      required:
        - name
        - priority
        - target
        - weight
      allOf:
        - $ref: '#/components/schemas/URIRecord'
    ResponsePolicyCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/responsePolicies?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/responsePolicies?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ResponsePolicyResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /responsePolicies/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /responsePolicies
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ResponsePolicyPostRequestBody:
      required:
        - name
        - policyType
        - type
      allOf:
        - $ref: '#/components/schemas/ResponsePolicy'
    ResponsePolicyPutRequestBody:
      required:
        - name
        - policyType
      allOf:
        - $ref: '#/components/schemas/ResponsePolicy'
    ViewPostRequestBody:
      required:
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/View'
    AddressManager:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The resource identifier.
          format: int64
          example: 12345
        type:
          type: string
          description: The resource type.
          enum:
            - AddressManager
        name:
          type: string
          description: The name of the resource.
          example: name
        userDefinedFields:
          type: object
          additionalProperties:
            type: object
          description: User-defined fields set for the resource.
          example:
            udf1: value1
            udf2: value2
        version:
          type: string
          description: The Address Manager version.
        hostname:
          type: string
          description: The hostname of the Address Manager appliance
    AddressManagerResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: //12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DeploymentScheduleCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/schedules?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/schedules?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DeploymentScheduleResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /schedules/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /schedules
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DatabaseBackupScheduleResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /schedules/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /schedules
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DatabaseBackupScheduleCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/schedules?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/schedules?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DeploymentSchedulePostRequestBody:
      required:
        - deploymentServices
        - name
        - servers
        - startDateTime
        - type
      allOf:
        - $ref: '#/components/schemas/DeploymentSchedule'
    DatabaseBackupSchedulePostRequestBody:
      required:
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/DatabaseBackupSchedule'
    DatabaseBackupSchedulePutRequestBody:
      required:
        - localBackupsEnabled
        - remoteBackupsEnabled
      allOf:
        - $ref: '#/components/schemas/DatabaseBackupSchedule'
    DeploymentSchedulePutRequestBody:
      required:
        - deploymentServices
        - deploymentType
        - enabled
        - name
        - startDateTime
      allOf:
        - $ref: '#/components/schemas/DeploymentSchedule'
    ServerGroupCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/serverGroups?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/serverGroups?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ServerGroupResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /serverGroups/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /serverGroups
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ServerGroupPostRequestBody:
      required:
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/ServerGroup'
    ServerGroupPutRequestBody:
      allOf:
        - $ref: '#/components/schemas/ServerGroup'
    ServerCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/servers?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/servers?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ServerResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /servers/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /servers
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    AddressManagerServerResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /servers/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /servers
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    AddressManagerServerCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/servers?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/servers?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ServerPostRequestBody:
      required:
        - name
        - profile
        - type
      allOf:
        - $ref: '#/components/schemas/Server'
    HAServerPostRequestBody:
      required:
        - activeServer
        - interfaces
        - passiveServer
        - type
      allOf:
        - $ref: '#/components/schemas/HAServer'
    AddressManagerServerPostRequestBody:
      required:
        - address
        - type
      allOf:
        - $ref: '#/components/schemas/AddressManagerServer'
    ServerPutRequestBody:
      required:
        - checkIntegrityValidation
        - checkMxCnameValidation
        - checkMxValidation
        - checkNamesValidation
        - checkNsValidation
        - checkSrvCnameValidation
        - checkWildcardValidation
        - connected
        - dedicatedManagementEnabled
        - dhcpConfigurationValidationEnabled
        - dnsConfigurationValidationEnabled
        - dnsZoneValidationEnabled
        - haBackboneEnabled
        - hsmSupportEnabled
        - interfaceRedundancyEnabled
        - name
        - overrideConfigurationLevelDhcpValidation
        - overrideConfigurationLevelDnsValidation
        - profile
      allOf:
        - $ref: '#/components/schemas/Server'
    HAServerPutRequestBody:
      required:
        - checkIntegrityValidation
        - checkMxCnameValidation
        - checkMxValidation
        - checkNamesValidation
        - checkNsValidation
        - checkSrvCnameValidation
        - checkWildcardValidation
        - dhcpConfigurationValidationEnabled
        - dnsConfigurationValidationEnabled
        - dnsZoneValidationEnabled
        - haBackboneEnabled
        - name
        - overrideConfigurationLevelDhcpValidation
        - overrideConfigurationLevelDnsValidation
      allOf:
        - $ref: '#/components/schemas/HAServer'
    KerberosServicePrincipalCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/servicePrincipals?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/servicePrincipals?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    KerberosServicePrincipalResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /servicePrincipals/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /servicePrincipals
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    KerberosServicePrincipalPostRequestBody:
      required:
        - keyVersionNumber
        - name
        - password
        - type
      allOf:
        - $ref: '#/components/schemas/KerberosServicePrincipal'
    KerberosServicePrincipalPutRequestBody:
      required:
        - keyVersionNumber
        - name
      allOf:
        - $ref: '#/components/schemas/KerberosServicePrincipal'
    AnycastServiceResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /services/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /services
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    AnycastServiceCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/services?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/services?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DNSResolverServiceResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /services/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /services
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DNSResolverServiceCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/services?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/services?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    AnycastServicePutRequestBody:
      required:
        - addresses
        - enabled
        - routing
      allOf:
        - $ref: '#/components/schemas/AnycastService'
    DHCPActivityServicePutRequestBody:
      required:
        - dhcpv4Enabled
        - dhcpv6Enabled
        - enabled
        - maxBufferedEvents
      allOf:
        - $ref: '#/components/schemas/DHCPActivityService'
    DHCPStatisticsServicePutRequestBody:
      required:
        - dhcpv4Enabled
        - dhcpv6Enabled
        - enabled
        - maxBufferedEvents
      allOf:
        - $ref: '#/components/schemas/DHCPStatisticsService'
    DNSActivityServicePutRequestBody:
      required:
        - enabled
        - filters
        - maxBufferedEvents
      allOf:
        - $ref: '#/components/schemas/DNSActivityService'
    DNSResolverServicePutRequestBody:
      required:
        - servers
      allOf:
        - $ref: '#/components/schemas/DNSResolverService'
    DNSStatisticsServicePutRequestBody:
      required:
        - enabled
        - maxBufferedEvents
        - pollingInterval
      allOf:
        - $ref: '#/components/schemas/DNSStatisticsService'
    FirewallServicePutRequestBody:
      required:
        - enabled
        - pingAllowed
      allOf:
        - $ref: '#/components/schemas/FirewallService'
    GatewayServicePutRequestBody:
      required:
        - enabled
      allOf:
        - $ref: '#/components/schemas/GatewayService'
    InterfacesServicePutRequestBody:
      required:
        - dedicatedManagementEnabled
        - interfaces
        - routes
      allOf:
        - $ref: '#/components/schemas/InterfacesService'
    LicenseServicePutRequestBody:
      required:
        - clientId
        - key
      allOf:
        - $ref: '#/components/schemas/LicenseService'
    NTPServicePutRequestBody:
      required:
        - enabled
        - servers
      allOf:
        - $ref: '#/components/schemas/NTPService'
    SNMPServicePutRequestBody:
      required:
        - contactEmail
        - contactName
        - description
        - enabled
        - location
        - logLevel
        - pollingInterval
        - snmpv1
        - snmpv2c
        - snmpv3
        - trapServers
      allOf:
        - $ref: '#/components/schemas/SNMPService'
    SSHServicePutRequestBody:
      required:
        - enabled
      allOf:
        - $ref: '#/components/schemas/SSHService'
    SyslogServicePutRequestBody:
      required:
        - servers
      allOf:
        - $ref: '#/components/schemas/SyslogService'
    FailoverAPIServicePutRequestBody:
      required:
        - enabled
      allOf:
        - $ref: '#/components/schemas/FailoverAPIService'
    UserSessionResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /sessions/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /sessions
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    UserSessionCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/sessions?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/sessions?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    UserSessionPostRequestBody:
      required:
        - password
        - type
        - username
      allOf:
        - $ref: '#/components/schemas/UserSession'
    AuditDataSettingsResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /settings/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /settings
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    AuditDataSettingsCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/settings?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/settings?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    AuditDataSettingsPutRequestBody:
      required:
        - exportEnabled
      allOf:
        - $ref: '#/components/schemas/AuditDataSettings'
    DHCPAlertSettingsPutRequestBody:
      required:
        - highWaterMark
        - lowWaterMark
        - pollingInterval
      allOf:
        - $ref: '#/components/schemas/DHCPAlertSettings'
    GlobalSettingsPutRequestBody:
      required:
        - customReverseZoneFormatsAllowed
        - disclaimerEnabled
        - mandatoryCommentsEnabled
        - rememberLastAddressEnabled
        - sessionTimeout
      allOf:
        - $ref: '#/components/schemas/GlobalSettings'
    LogLevelSettingsPutRequestBody:
      required:
        - addressManager
        - discoveryEngine
        - monitoringService
        - reconciliationService
        - restV2
        - rrdTool
        - snmpClient
        - zoneImport
      allOf:
        - $ref: '#/components/schemas/LogLevelSettings'
    LoginPolicySettingsPutRequestBody:
      required:
        - delayDuration
        - enabled
        - failureLimit
        - failureLimitPeriod
      allOf:
        - $ref: '#/components/schemas/LoginPolicySettings'
    MonitoringSettingsPutRequestBody:
      required:
        - addressManagerMonitoring
        - serverMonitoring
      allOf:
        - $ref: '#/components/schemas/MonitoringSettings'
    PasswordPolicySettingsPutRequestBody:
      required:
        - digitRequired
        - enabled
        - mixedCaseRequired
        - specialCharacterRequired
      allOf:
        - $ref: '#/components/schemas/PasswordPolicySettings'
    SAMLServiceProviderSettingsPutRequestBody:
      required:
        - addressManagerAbsoluteName
        - encryptionEnabled
        - nameIdFormat
        - organizationName
        - organizationUrl
        - signingEnabled
      allOf:
        - $ref: '#/components/schemas/SAMLServiceProviderSettings'
    SSOEnforcementSettingsPutRequestBody:
      required:
        - enabled
      allOf:
        - $ref: '#/components/schemas/SSOEnforcementSettings'
    SystemSettingsPutRequestBody:
      required:
        - interfaceRedundancyEnabled
      allOf:
        - $ref: '#/components/schemas/SystemSettings'
    WebAccessSettingsPutRequestBody:
      required:
        - caCertificates
        - certificate
        - httpEnabled
        - httpToHttpsRedirectionEnabled
        - httpsEnabled
        - privateKey
      allOf:
        - $ref: '#/components/schemas/WebAccessSettings'
    KeySigningKeyCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/signingKeys?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/signingKeys?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    KeySigningKeyResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /signingKeys/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /signingKeys
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    TSIGKeyCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/signingKeys?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/signingKeys?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    TSIGKeyResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /signingKeys/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /signingKeys
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    TSIGKeyPostRequestBody:
      required:
        - algorithm
        - length
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/TSIGKey'
    TSIGKeyPutRequestBody:
      required:
        - algorithm
        - length
        - name
      allOf:
        - $ref: '#/components/schemas/TSIGKey'
    DNSSECSigningPolicyCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/signingPolicies?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/signingPolicies?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DNSSECSigningPolicyResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /signingPolicies/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /signingPolicies
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DNSSECSigningPolicyPostRequestBody:
      required:
        - keyProvider
        - keySigningKeyAlgorithm
        - keySigningKeyLength
        - keySigningKeyOverlapPeriod
        - keySigningKeyRolloverMethod
        - keySigningKeyValidityPeriod
        - name
        - signatureDigestAlgorithm
        - signatureResigningPeriod
        - signatureValidityPeriod
        - type
        - zoneSigningKeyAlgorithm
        - zoneSigningKeyLength
        - zoneSigningKeyOverlapPeriod
        - zoneSigningKeyRolloverMethod
        - zoneSigningKeyValidityPeriod
      allOf:
        - $ref: '#/components/schemas/DNSSECSigningPolicy'
    DNSSECSigningPolicyPutRequestBody:
      required:
        - keyProvider
        - keySigningKeyAlgorithm
        - keySigningKeyLength
        - keySigningKeyOverlapPeriod
        - keySigningKeyRolloverMethod
        - keySigningKeyValidityPeriod
        - name
        - signatureDigestAlgorithm
        - signatureResigningPeriod
        - signatureValidityPeriod
        - zoneSigningKeyAlgorithm
        - zoneSigningKeyLength
        - zoneSigningKeyOverlapPeriod
        - zoneSigningKeyRolloverMethod
        - zoneSigningKeyValidityPeriod
      allOf:
        - $ref: '#/components/schemas/DNSSECSigningPolicy'
    IPv4BlockSplitCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/splits?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/splits?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4BlockSplitResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /splits/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /splits
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4BlockSplitPostRequestBody:
      required:
        - block
        - type
      allOf:
        - $ref: '#/components/schemas/IPv4BlockSplit'
    IPv4NetworkSplitPostRequestBody:
      required:
        - network
        - networkCount
        - type
      allOf:
        - $ref: '#/components/schemas/IPv4NetworkSplit'
    DHCPv4SubclassCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/subclasses?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/subclasses?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DHCPv4SubclassResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /subclasses/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /subclasses
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DHCPv4SubclassPostRequestBody:
      required:
        - type
        - value
      allOf:
        - $ref: '#/components/schemas/DHCPv4Subclass'
    DHCPv4SubclassPutRequestBody:
      required:
        - value
      allOf:
        - $ref: '#/components/schemas/DHCPv4Subclass'
    UserCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/users?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/users?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    UserResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /users/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /users
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    UserPostRequestBody:
      required:
        - accessType
        - email
        - name
        - securityPrivilege
        - type
      allOf:
        - $ref: '#/components/schemas/User'
    TagGroupResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /tagGroups/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /tagGroups
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    TagGroupCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/tagGroups?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/tagGroups?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    TagGroupPostRequestBody:
      required:
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/TagGroup'
    TagGroupPutRequestBody:
      required:
        - name
      allOf:
        - $ref: '#/components/schemas/TagGroup'
    TagCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/tags?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/tags?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    TagResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /tags/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /tags
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    TagPostRequestBody:
      required:
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/Tag'
    TagPutRequestBody:
      required:
        - name
      allOf:
        - $ref: '#/components/schemas/Tag'
    TaskResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /tasks/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /tasks
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    TaskCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/tasks?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/tasks?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    TaskPostRequestBody:
      required:
        - name
        - percentComplete
        - priority
        - state
        - type
      allOf:
        - $ref: '#/components/schemas/Task'
    TaskPutRequestBody:
      required:
        - name
        - percentComplete
        - priority
        - state
      allOf:
        - $ref: '#/components/schemas/Task'
    IPv4TemplateApplicationCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/templateApplications?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/templateApplications?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4TemplateApplicationResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /templateApplications/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /templateApplications
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ZoneTemplateApplicationCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/templateApplications?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/templateApplications?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ZoneTemplateApplicationResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /templateApplications/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /templateApplications
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4TemplateApplicationPostRequestBody:
      required:
        - type
      allOf:
        - $ref: '#/components/schemas/IPv4TemplateApplication'
    ZoneTemplateApplicationPostRequestBody:
      required:
        - type
      allOf:
        - $ref: '#/components/schemas/ZoneTemplateApplication'
    IPv4DHCPRangeTemplateItemResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /templateItems/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /templateItems
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4DHCPRangeTemplateItemCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/templateItems?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/templateItems?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4DHCPRangeTemplateItemPostRequestBody:
      required:
        - rangeDefinitionFormat
        - startOffset
        - type
      allOf:
        - $ref: '#/components/schemas/IPv4DHCPRangeTemplateItem'
    IPv4GroupTemplateItemPostRequestBody:
      required:
        - name
        - rangeDefinitionFormat
        - size
        - startOffset
        - type
      allOf:
        - $ref: '#/components/schemas/IPv4GroupTemplateItem'
    IPv4ReservedRangeTemplateItemPostRequestBody:
      required:
        - rangeDefinitionFormat
        - size
        - startOffset
        - type
      allOf:
        - $ref: '#/components/schemas/IPv4ReservedRangeTemplateItem'
    IPv4DHCPRangeTemplateItemPutRequestBody:
      required:
        - rangeDefinitionFormat
        - splitAroundStaticAddresses
        - startOffset
      allOf:
        - $ref: '#/components/schemas/IPv4DHCPRangeTemplateItem'
    IPv4GatewayTemplateItemPutRequestBody:
      required:
        - rangeDefinitionFormat
        - startOffset
      allOf:
        - $ref: '#/components/schemas/IPv4GatewayTemplateItem'
    IPv4GroupTemplateItemPutRequestBody:
      required:
        - name
        - rangeDefinitionFormat
        - size
        - startOffset
      allOf:
        - $ref: '#/components/schemas/IPv4GroupTemplateItem'
    IPv4ReservedRangeTemplateItemPutRequestBody:
      required:
        - rangeDefinitionFormat
        - size
        - startOffset
      allOf:
        - $ref: '#/components/schemas/IPv4ReservedRangeTemplateItem'
    IPv4TemplateCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/templates?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/templates?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4TemplateResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /templates/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /templates
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ZoneTemplateCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/templates?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/templates?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ZoneTemplateResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /templates/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /templates
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    IPv4TemplatePostRequestBody:
      required:
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/IPv4Template'
    ZoneTemplatePostRequestBody:
      required:
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/ZoneTemplate'
    IPv4TemplatePutRequestBody:
      required:
        - name
      allOf:
        - $ref: '#/components/schemas/IPv4Template'
    ZoneTemplatePutRequestBody:
      required:
        - name
      allOf:
        - $ref: '#/components/schemas/ZoneTemplate'
    TFTPGroupCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/tftpGroups?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/tftpGroups?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    TFTPGroupResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /tftpGroups/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /tftpGroups
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    TFTPGroupPostRequestBody:
      required:
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/TFTPGroup'
    TFTPGroupPutRequestBody:
      allOf:
        - $ref: '#/components/schemas/TFTPGroup'
    TransactionCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/transactions?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/transactions?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    TransactionResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /transactions/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /transactions
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    TransactionPostRequestBody:
      required:
        - transactionId
        - transactionType
        - type
      allOf:
        - $ref: '#/components/schemas/Transaction'
    TrustRelationshipResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /trustRelationships/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /trustRelationships
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    TrustRelationshipCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/trustRelationships?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/trustRelationships?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    TrustRelationshipPostRequestBody:
      required:
        - address
        - password
        - type
        - username
      allOf:
        - $ref: '#/components/schemas/TrustRelationship'
    UserDefinedFieldDefinitionResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /userDefinedFieldDefinitions/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /userDefinedFieldDefinitions
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    UserDefinedFieldDefinitionCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/userDefinedFieldDefinitions?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/userDefinedFieldDefinitions?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    UserDefinedFieldDefinitionPostRequestBody:
      required:
        - dataType
        - displayName
        - name
        - resourceType
        - type
      allOf:
        - $ref: '#/components/schemas/UserDefinedFieldDefinition'
    UserDefinedFieldDefinitionPutRequestBody:
      required:
        - displayName
        - resourceType
      allOf:
        - $ref: '#/components/schemas/UserDefinedFieldDefinition'
    UserDefinedLinkDefinitionResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /userDefinedLinkDefinitions/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /userDefinedLinkDefinitions
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    UserDefinedLinkDefinitionCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/userDefinedLinkDefinitions?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/userDefinedLinkDefinitions?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    UserDefinedLinkDefinitionPostRequestBody:
      required:
        - destinationTypes
        - displayName
        - name
        - sourceTypes
        - type
      allOf:
        - $ref: '#/components/schemas/UserDefinedLinkDefinition'
    UserDefinedLinkDefinitionPutRequestBody:
      required:
        - destinationTypes
        - sourceTypes
      allOf:
        - $ref: '#/components/schemas/UserDefinedLinkDefinition'
    UserPutRequestBody:
      required:
        - accessType
        - accountLocked
        - authenticator
        - email
        - historyPrivilege
        - passwordResetRequired
        - securityPrivilege
        - x509Required
      allOf:
        - $ref: '#/components/schemas/User'
    VendorProfileResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /vendorProfiles/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /vendorProfiles
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    VendorProfileCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/vendorProfiles?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/vendorProfiles?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    VendorProfilePostRequestBody:
      required:
        - description
        - identifier
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/VendorProfile'
    VendorProfilePutRequestBody:
      required:
        - description
        - identifier
        - name
      allOf:
        - $ref: '#/components/schemas/VendorProfile'
    ViewPutRequestBody:
      required:
        - deviceRegistrationEnabled
      allOf:
        - $ref: '#/components/schemas/View'
    WorkflowRequestCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/workflowRequests?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/workflowRequests?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    WorkflowRequestResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /workflowRequests/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /workflowRequests
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DHCPForwardZoneResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /zoneDeclarations/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /zoneDeclarations
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DHCPForwardZoneCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/zoneDeclarations?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/zoneDeclarations?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DHCPForwardZonePostRequestBody:
      required:
        - primaryDnsServerAddress
        - type
        - zone
      allOf:
        - $ref: '#/components/schemas/DHCPForwardZone'
    DHCPReverseZonePostRequestBody:
      required:
        - prefix
        - primaryDnsServerAddress
        - type
      allOf:
        - $ref: '#/components/schemas/DHCPReverseZone'
    DHCPForwardZonePutRequestBody:
      required:
        - dynamicUpdateSigningKeyType
        - primaryDnsServerAddress
        - zone
      allOf:
        - $ref: '#/components/schemas/DHCPForwardZone'
    DHCPReverseZonePutRequestBody:
      required:
        - dynamicUpdateSigningKeyType
        - prefix
        - primaryDnsServerAddress
      allOf:
        - $ref: '#/components/schemas/DHCPReverseZone'
    DHCPZoneGroupCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/zoneGroups?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/zoneGroups?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DHCPZoneGroupResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /zoneGroups/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /zoneGroups
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    DHCPZoneGroupPostRequestBody:
      required:
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/DHCPZoneGroup'
    DHCPZoneGroupPutRequestBody:
      allOf:
        - $ref: '#/components/schemas/DHCPZoneGroup'
    ResponsePolicyZoneCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/zones?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/zones?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ResponsePolicyZoneResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /zones/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /zones
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ENUMZoneCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/zones?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/zones?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ENUMZoneResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /zones/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /zones
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ENUMNumberZoneResourceLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /zones/12345
          nullable: false
          readOnly: true
        collection:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /zones
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ENUMNumberZoneCollectionHalLinks:
      type: object
      properties:
        next:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/zones?offset=2000&limit=1000
          nullable: false
          readOnly: true
        prev:
          type: object
          properties:
            href:
              type: string
              nullable: false
              readOnly: true
              example: /api/v2/zones?offset=0&limit=1000
          nullable: false
          readOnly: true
      nullable: false
      readOnly: true
    ENUMZonePostRequestBody:
      required:
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/ENUMZone'
    InternalRootZonePostRequestBody:
      required:
        - type
      allOf:
        - $ref: '#/components/schemas/InternalRootZone'
    ResponsePolicyZonePostRequestBody:
      required:
        - name
        - responsePolicyZoneType
        - type
      allOf:
        - $ref: '#/components/schemas/ResponsePolicyZone'
    ENUMNumberZonePostRequestBody:
      required:
        - name
        - type
      allOf:
        - $ref: '#/components/schemas/ENUMNumberZone'
    ENUMNumberZonePutRequestBody:
      required:
        - name
      allOf:
        - $ref: '#/components/schemas/ENUMNumberZone'
    ENUMZonePutRequestBody:
      required:
        - deploymentEnabled
        - name
      allOf:
        - $ref: '#/components/schemas/ENUMZone'
    InternalRootZonePutRequestBody:
      required:
        - deploymentEnabled
      allOf:
        - $ref: '#/components/schemas/InternalRootZone'
    ResponsePolicyZonePutRequestBody:
      required:
        - name
        - responsePolicyZoneType
      allOf:
        - $ref: '#/components/schemas/ResponsePolicyZone'
    ZonePutRequestBody:
      required:
        - deploymentEnabled
        - dynamicUpdateEnabled
        - name
        - signed
      allOf:
        - $ref: '#/components/schemas/Zone'
  parameters:
    x-bcn-change-control-comment:
      name: x-bcn-change-control-comment
      in: header
      description: The change control comment.
      required: false
      schema:
        type: string
        example: ""
    id:
      name: id
      in: path
      description: The ID of the resource.
      required: true
      schema:
        type: integer
        format: int64
        example: 12345
    fields:
      name: fields
      in: query
      description: The subset of response resource field paths.
      required: false
      schema:
        type: string
    limit:
      name: limit
      in: query
      description: The maximum number of resources returned in the response.
      required: false
      schema:
        type: integer
        format: int32
    offset:
      name: offset
      in: query
      description: The offset of the first resource returned in the response.
      required: false
      schema:
        type: integer
        format: int32
    filter:
      name: filter
      in: query
      description: The query filter string.
      required: false
      schema:
        type: string
    orderBy:
      name: orderBy
      in: query
      description: The field path to order the response resources by.
      required: false
      schema:
        type: string
    total:
      name: total
      in: query
      description: Return the total number of resources matching the query.
      required: false
      schema:
        type: boolean
    collectionId:
      name: collectionId
      in: path
      description: The ID of the collection resource.
      required: true
      schema:
        type: integer
        format: int64
        example: 12345
  examples:
    accessControlListExampleAllMatchElements:
      summary: ACL with each type of match element
      description: Creates a DNS access control list called example-acl that matches an IPv4 network and an existing TSIG key, but excludes external hosts.
      value:
        name: example-acl
        matchElements:
          - 192.168.0.0/24
          - '! externalHosts'
          - key tsigKey1
    accessRightExampleDefault:
      summary: Create a default access right
      description: Creates a default view access right for a user with an override for alias records.
      value:
        type: AccessRight
        defaultAccessLevel: VIEW
        userScope:
          id: 123456
          type: User
        accessOverrides:
          - resourceType: AliasRecord
            accessLevel: FULL
    accessRightExampleWithOwner:
      summary: Create a resource access right
      description: Creates a view access right for a group on a specific configuration.
      value:
        type: AccessRight
        defaultAccessLevel: VIEW
        userScope:
          id: 123456
          type: UserGroup
        resource:
          id: 234567
          type: Configuration
    accessRightExampleAdministrativeAccessRight:
      summary: Create an administrative access right
      description: Creates an administrative access right for a user, granting partial admin privileges
      value:
        type: AdministrativeAccessRight
        userScope:
          id: 123456
          type: User
        administrativeAccessRights:
          - resourceType: Event
            accessLevel: VIEW
          - resourceType: Log
            accessLevel: VIEW
          - resourceType: Report
            accessLevel: VIEW
    addressExampleLinkDeviceAddress:
      summary: Link an IPv4 address to a device
      description: Links an assigned IPv4 address to an existing device.
      value:
        type: IPv4Address
        id: 123456
    addressExampleLinkMacAddressAddress:
      summary: Link an IPv4 address to a MAC address
      description: Links an assigned IPv4 address to an existing MAC address.
      value:
        type: IPv4Address
        id: 123456
    addressExampleStaticIpv4:
      summary: Create a static IPv4 address
      description: Creates a static IPv4 address assignment.
      value:
        type: IPv4Address
        state: STATIC
        address: 192.168.0.10
    addressExampleNextStaticIpv4:
      summary: Create the next available static IPv4 address
      description: Creates a static IPv4 address assignment using the next available address in the network.
      value:
        type: IPv4Address
        state: STATIC
    addressExampleDhcpReservedIpv4:
      summary: Create a DHCP reserved IPv4 address
      description: Creates a DHCP reserved IPv4 address assignment using the supplied MAC address.
      value:
        type: IPv4Address
        state: DHCP_RESERVED
        address: 192.168.0.20
        macAddress:
          address: AB-CD-EF-12-34-56
          type: MACAddress
    addressExampleDhcpReservedIpv4WithMacPool:
      summary: Create a DHCP reserved IPv4 address with MAC address pool assignment
      description: Creates a DHCP reserved IPv4 address assignment using the supplied MAC address assigned to an existing MAC pool.
      value:
        type: IPv4Address
        state: DHCP_RESERVED
        address: 192.168.0.20
        macAddress:
          address: AB-CD-EF-12-34-56
          type: MACAddress
          macPool:
            id: 1234
    addressExampleStaticIpv6:
      summary: Create a static IPv6 address
      description: Creates a static IPv6 address assignment using the supplied MAC address.
      value:
        type: IPv6Address
        state: STATIC
        address: 2000::ABCD
        macAddress:
          address: AB-CD-EF-12-34-56
          type: MACAddress
    addressExampleStaticIpv6FromMac:
      summary: Create a static IPv6 address from a MAC address
      description: Creates a static IPv6 address assignment using the supplied MAC address to generate the address value.
      value:
        type: IPv6Address
        state: STATIC
        macAddress:
          address: AA-BB-CC-11-22-33
          type: MACAddress
    addressExampleMacDhcpReservedIpv6:
      summary: Create a DHCP reserved IPv6 address using a MAC address
      description: Creates a DHCP reserved IPv6 address assignment using the supplied MAC address.
      value:
        type: IPv6Address
        state: DHCP_RESERVED
        address: 2000::FF
        macAddress:
          address: AB-CD-EF-12-34-56
          type: MACAddress
    addressExampleDuidDhcpReservedIpv6:
      summary: Create a DHCP reserved IPv6 address using a DUID
      description: Creates a DHCP reserved IPv6 address assignment using the supplied DUID.
      value:
        type: IPv6Address
        state: DHCP_RESERVED
        address: 2000::1
        clientIdentifier:
          type: DHCPUniqueIdentifier
          duid: 01-02-03-04
    addressExampleLinkResourceRecordAssignedAddress:
      summary: Link an assigned IPv4 address to a host record
      description: Links an assigned IPv4 address to an existing host record.
      value:
        type: IPv4Address
        id: 123456
    addressExampleLinkResourceRecordUnassignedAddress:
      summary: Assign and link an IPv4 address to a host record
      description: Assigns a STATIC IPv4 address and links it so an existing host record.
      value:
        type: IPv4Address
        address: 192.168.0.10
    annotatedResourceExampleSetServerLocation:
      summary: Set the location of a server
      description: Sets the location of a server by adding it to the location's list of annotated resources.
      value:
        type: Server
        id: 12345
    appliedResourceExampleApplyPolicyToZone:
      summary: Apply a signing policy to a zone
      description: Applies a DNSSEC signing policy to a zone.
      value:
        type: Zone
        id: 123456
    authenticatorExampleKerberos:
      summary: Create a Kerberos authenticator
      description: Creates a kerberos authenticator using the supplied hostname and realm.
      value:
        type: KerberosAuthenticator
        name: Kerberos Authenticator
        hostname: https://hostname.com
        realm: DOMAIN.COM
    authenticatorExampleLdap:
      summary: Create an LDAP authenticator
      description: Creates an active directory LDAP authenticator.
      value:
        type: LDAPAuthenticator
        name: LDAP Authenticator
        hostname: https://hostname.com
        adminDn: admin
        adminPassword: password
        sslEnabled: true
        schemaType: ACTIVE_DIRECTORY
        searchBase: cn=users,dc=example,dc=com
        referralPolicy: FOLLOW
        aliasDereferencePolicy: ALWAYS
    authenticatorExampleOauth:
      summary: Create an OAuth 2.0 authorization server
      description: Creates an OAuth 2.0 authorization server using local token validation.
      value:
        type: OAuthAuthorizationServer
        name: OAuth Authorization Server
        enabled: false
        userClaim: sub
        groupClaim: group
        emailClaim: email
        validationMethod: LOCAL
        audience: BAM-API
        issuer: https://issuer.com/trust
        signingCertificate: MIIBqzCCARQCCQCSA41h/YhSczANBgkqhkiG9w0BAQsFADAaMRgwFgYDVQQDDA9hdXRoLXNlcnZlci5jb20wHhcNMjMwMzIyMTc1NjE3WhcNMjQwMzIxMTc1NjE3WjAaMRgwFgYDVQQDDA9hdXRoLXNlcnZlci5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMDan6hsWx7UGoTeuDTYiYQ7y2SLgRpxJo3L4RCilV40UZGfSWJgVTFh89YdU2l2Tlci1gRmgFpRA+GRdZv4+qdUhKIg7VmLQWD+qCXrIIgBSTMJbd89apdR7PO15Mc7s2TDsVAN8oaF9X9KcqmaBBVdUBALxsOOyx0lyHiAGdc9AgMBAAEwDQYJKoZIhvcNAQELBQADgYEAh/ouJ0O6NK1zvW87AtJzzI8NYDPu/STudUYzQ9fwHQt4SEZBbMB/8TiHqjk1TITrX+R3fejHvHz5rm510mClQZgWlD85Tz/SfvW+Vcu2UvGFitNG1BbE3CM5nstfKlHCD+7/wyiYhXyHOS/gClb6DdCkgMhtrSEGn9qSxMv9DXI=
    authenticatorExampleRadius:
      summary: Create a RADIUS authenticator
      description: Creates a RADIUS authenticator using the CHAP authentication protocol.
      value:
        type: RADIUSAuthenticator
        name: RADIUS Authenticator
        hostname: https://hostname.com
        port: "1812"
        sharedSecret: password
        authenticationProtocol: CHAP
    authenticatorExampleSamlIdentityProvider:
      summary: Create a SAML identity provider
      description: Creates a SAML identity provider.
      value:
        type: SAMLIdentityProvider
        name: SAML Identity Provider
        enabled: false
        signOnUrl: https://example-idp.com/SSORedirect/idp
        logoutUrl: https://example-idp.com/SSORedirect/logout
        entityId: example-idp.com
        signingCertificate: MIIBqzCCARQCCQD4qzTUMk2DojANBgkqhkiG9w0BAQsFADAaMRgwFgYDVQQDDA9leGFtcGxlLWlkcC5jb20wHhcNMjMwMzIyMTY0NTI5WhcNMjQwMzIxMTY0NTI5WjAaMRgwFgYDVQQDDA9leGFtcGxlLWlkcC5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMDan6hsWx7UGoTeuDTYiYQ7y2SLgRpxJo3L4RCilV40UZGfSWJgVTFh89YdU2l2Tlci1gRmgFpRA+GRdZv4+qdUhKIg7VmLQWD+qCXrIIgBSTMJbd89apdR7PO15Mc7s2TDsVAN8oaF9X9KcqmaBBVdUBALxsOOyx0lyHiAGdc9AgMBAAEwDQYJKoZIhvcNAQELBQADgYEAC/JnvFYxGw8XULFDnd4+CxvnnKmWcpjZqXAyWlgcD8454BSTgEucl+OV/5Fz8iXAatD99BfRYmeBVKQQHebqsRFoZ3iC6wG80j5ulTFVNPl/mMDHwYjCYReJeICZMsYVJUWmh9DGPsLVpfqA9x2xeAK7c6tQhxf5ZXrGPFGgagQ=
    authenticatorExampleTacacsPlus:
      summary: Create a TACACS+ authenticator
      description: Creates a TACACS+ authenticator using the PAP authentication protocol.
      value:
        type: TACACSPlusAuthenticator
        name: TACACS+ Authenticator
        hostname: https://hostname.com
        port: 49
        sharedSecret: password
        authenticationProtocol: PAP
    authenticatorExampleX509:
      summary: Create an X509 authenticator
      description: Creates an X509 authenticator using the supplied certificate.
      value:
        type: X509Authenticator
        name: X509 Authenticator
        primaryServerUrl: https://hostname.com
        ldapUserMatchOption: STRICT_DN_MATCH
        caCertificates:
          - MIIBqzCCARQCCQD4qzTUMk2DojANBgkqhkiG9w0BAQsFADAaMRgwFgYDVQQDDA9leGFtcGxlLWlkcC5jb20wHhcNMjMwMzIyMTY0NTI5WhcNMjQwMzIxMTY0NTI5WjAaMRgwFgYDVQQDDA9leGFtcGxlLWlkcC5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMDan6hsWx7UGoTeuDTYiYQ7y2SLgRpxJo3L4RCilV40UZGfSWJgVTFh89YdU2l2Tlci1gRmgFpRA+GRdZv4+qdUhKIg7VmLQWD+qCXrIIgBSTMJbd89apdR7PO15Mc7s2TDsVAN8oaF9X9KcqmaBBVdUBALxsOOyx0lyHiAGdc9AgMBAAEwDQYJKoZIhvcNAQELBQADgYEAC/JnvFYxGw8XULFDnd4+CxvnnKmWcpjZqXAyWlgcD8454BSTgEucl+OV/5Fz8iXAatD99BfRYmeBVKQQHebqsRFoZ3iC6wG80j5ulTFVNPl/mMDHwYjCYReJeICZMsYVJUWmh9DGPsLVpfqA9x2xeAK7c6tQhxf5ZXrGPFGgagQ=
    blockExampleIpv4Cidr:
      summary: IPv4Block with CIDR
      description: Creates a new IPv4 block using CIDR notation.
      value:
        type: IPv4Block
        range: 192.168.0.0/16
    blockExampleIpv4StartAddressAndNetmask:
      summary: IPv4Block with a start address and netmask
      description: Creates a new IPv4 block using a starting network IP address and the netmask of the block.
      value:
        type: IPv4Block
        range: 192.168.0.0/255.255.0.0
    blockExampleIpv4StartAndEndAddress:
      summary: IPv4Block with a start and end address
      description: Creates a new IPv4 block using a starting network IP address and ending network IP address of the block.
      value:
        type: IPv4Block
        range: 192.168.0.0-192.168.255.255
    blockExampleIpv4NextAvailable:
      summary: IPv4Block without a specified start address
      description: Creates a new IPv4 block using only the CIDR notation of the block. The block is created using the first available IPv4 block with the listed CIDR notation. You can only use this feature when you're creating a new IPv4 block within an existing IPv4 block.
      value:
        type: IPv4Block
        range: /16
    clientClassExampleHardware:
      summary: Create a hardware DHCPv4 client class
      description: Creates a DHCPv4 client class using the hardware option.
      value:
        name: class
        option: hardware
        matchOffset: 1
        matchLength: 6
    clientClassExampleClientIdentifier:
      summary: Create a client identifier DHCPv4 client class
      description: Creates a DHCPv4 client class using the dhcp-client-identifier option.
      value:
        name: class
        option: dhcp-client-identifier
        matchOffset: 1
        matchLength: 256
    clientClassExampleVendorClassIdentifier:
      summary: Create a vendor class identifier DHCPv4 client class
      description: Creates a DHCPv4 client class using the vendor-class-identifier option.
      value:
        name: class
        option: vendor-class-identifier
        matchOffset: 1
        matchLength: 255
    clientClassExampleRemoteId:
      summary: Create a remote ID DHCPv4 client class
      description: Creates a DHCPv4 client class using the agent.remote-id option.
      value:
        name: class
        option: agent.remote-id
        matchOffset: 1
        matchLength: 255
    clientClassExampleCustomMatch:
      summary: Create a custom match expression DHCPv4 client class
      description: Creates a DHCPv4 client class using a substring of the dhcp-client-identifier option.
      value:
        name: class
        matchExpression: substring (option dhcp-client-identifier, 0, 2)
    clientClassExampleCustomMatchIf:
      summary: Create a custom match expression DHCPv4 client class
      description: Creates a DHCPv4 client class using "if known" as the match expression.
      value:
        name: class
        matchExpression: if known
    configurationExampleRequiredFields:
      summary: Configuration with required fields
      description: Creates a configuration with only the name defined.
      value:
        name: example-config
    configurationExampleOptionalFields:
      summary: Configuration with optional fields
      description: Creates a configuration that includes all configurable options.
      value:
        name: example-config
        configurationGroup: example-group
        description: example description
        serverMonitoringEnabled: false
        snmp:
          version: v3
          port: 161
          usernames:
            - example-username
          securityLevel: AUTH_PRIV
          authenticationProtocol: SHA
          authenticationPassphrase: example-passphrase
          privacyProtocol: AES128
          privacyPassphrase: example-passphrase
        dnsOptionInheritanceEnabled: true
        dnsFeedEnabled: false
        dhcpConfigurationValidationEnabled: false
        dnsConfigurationValidationEnabled: false
        dnsZoneValidationEnabled: false
        checkIntegrityValidation: NONE
        checkNamesValidation: IGNORE
        checkMxValidation: IGNORE
        checkMxCnameValidation: IGNORE
        checkNsValidation: IGNORE
        checkSrvCnameValidation: IGNORE
        checkWildcardValidation: IGNORE
        userDefinedFields:
          udfName: udf value
    databaseExampleBreakReplicationCluster:
      summary: Break an Address Manager database replication cluster
      description: Break one or more Address Manager servers configured in replication and return them to a stand-alone state
      value:
        state: BREAK
    databaseExampleCreateReplicationCluster:
      summary: Create an Address Manager database replication cluster
      description: Create an Address Manager database replication cluster with 1 or 2 server peers. A trust relationship must have been established between the local and peer server before it can be configured in a replication cluster.
      value:
        type: AddressManagerDatabase
        id: 1
        state: STANDALONE
        replicationEnabled: true
        compressionEnabled: true
        latencyWarningThreshold: P1D
        servers:
          - type: AddressManagerServer
            address: 10.0.0.102
          - type: AddressManagerServer
            address: 10.0.0.103
    defaultZoneExampleAddBlockDefaultZone:
      summary: Add a default zone to a block
      description: Adds a default zone to an IPv4 or IPv6 block.
      value:
        type: Zone
        id: 12345
    defaultZoneExampleAddNetworkDefaultZone:
      summary: Add a default zone to a network
      description: Adds a default zone to an IPv4 or IPv6 network.
      value:
        type: Zone
        id: 12345
    deploymentOptionDefinitionExampleAddCustomOptionDefinition:
      summary: Create a custom DHCPv4 client option definition
      description: Creates a definition for a custom DHCPv4 client option whose value is a list of IPv4 addresses.
      value:
        type: DHCPv4CustomClientOptionDefinition
        name: custom-op-1
        code: 234
        displayName: Custom OP 1
        description: 'Custom option #1'
        valueFormat:
          - <ipv4_address>
    deploymentOptionDefinitionExampleAddVendorOptionDefinition:
      summary: Create a DHCP vendor option definition
      description: Creates a definition for a DHCP vendor option whose value is a single integer.
      value:
        type: DHCPVendorOptionDefinition
        name: vendor-op-1
        code: 123
        displayName: Vendor OP 1
        description: 'Vendor option #1'
        valueFormat: <integer_8>
    deploymentOptionExampleDhcpv4ClientOptionUsingName:
      summary: Add a DHCPv4 client option using an option name
      description: Adds a DHCPv4 client deployment option using the option's name.
      value:
        type: DHCPv4ClientOption
        name: ip-forwarding
        value: true
    deploymentOptionExampleDhcpv4ClientOptionUsingCode:
      summary: Add a DHCPv4 client option using an option code
      description: Adds a DHCPv4 client deployment option using the option's code.
      value:
        type: DHCPv4ClientOption
        code: 6
        value:
          - 10.0.0.5
          - 11.0.0.4
    deploymentOptionExampleDhcpv4ServiceOption:
      summary: Add a DHCPv4 service option
      description: Adds a DHCPv4 service deployment option.
      value:
        type: DHCPv4ServiceOption
        name: ddns-ttl
        value: 86400
    deploymentOptionExampleDhcpv6ClientOptionUsingName:
      summary: Add a DHCPv6 client option using an option name
      description: Adds a DHCPv6 client deployment option using the option's name.
      value:
        type: DHCPv6ClientOption
        name: domain-search-list
        value:
          - example.com
          - demo.com
    deploymentOptionExampleDhcpv6ClientOptionUsingCode:
      summary: Add a DHCPv6 client option using an option code
      description: Adds a DHCPv6 client deployment option using the option's code.
      value:
        type: DHCPv6ClientOption
        code: 12
        value: 2001:abcd::1234
    deploymentOptionExampleDhcpv6ServiceOption:
      summary: Add a DHCPv6 service option
      description: Adds a DHCPv6 service deployment option.
      value:
        type: DHCPv6ServiceOption
        name: client-updates
        value: true
    deploymentOptionExampleDhcpVendorOption:
      summary: Add a DHCP vendor option
      description: Adds a DHCP vendor deployment option.
      value:
        type: DHCPVendorOption
        definition:
          id: 1234
          type: DHCPVendorOptionDefinition
        value:
          - 10.0.0.3
          - 11.0.0.8
    deploymentOptionExampleDnsOption:
      summary: Add a DNS option
      description: Adds a DNS deployment option.
      value:
        type: DNSOption
        name: allow-query
        value:
          - 10.0.0/24
          - internalHosts
          - key tsig0
    deploymentOptionExampleStartOfAuthority:
      summary: Add a start of authority record
      description: Adds a start of authority (SOA) record.
      value:
        type: StartOfAuthority
        value:
          - 3600
          - primary.com
          - admin@acme.com
          - auto
          - 1200
          - 180
          - 1209600
          - 3600
    deploymentExampleSelectiveDeployment:
      summary: Start a selective deployment
      description: Starts the deployment of a list of resource records or IP addresses to the server managing them.
      value:
        type: SelectiveDeployment
        resources:
          - id: 1234
            type: HostRecord
          - id: 2345
            type: AliasRecord
          - id: 3456
            type: HostRecord
    deploymentExampleQuickDeployment:
      summary: Start a quick deployment
      description: Starts deployment of all resource records or a zone or network updated by the user. The POST request is sent to the `/deployments` subcollection of the zone or network resource.
      value:
        type: QuickDeployment
    deploymentExampleFullDnsDeployment:
      summary: Start a full DNS deployment
      description: Starts deployment of the full DNS service configuration to a server. The POST request is sent to the `/deployments` subcollection of the server resource.
      value:
        type: FullDeployment
        service: DNS
    deploymentExampleDifferentialDnsDeployment:
      summary: Start a differential DNS deployment
      description: Starts the deployment of DNS service configuration changes made since the last deployment. The POST request is sent to the `/deployments` subcollection of the server resource.
      value:
        type: DifferentialDeployment
        service: DNS
    deploymentExampleFullDhcpv4Deployment:
      summary: Start a full DHCPv4 deployment
      description: Starts deployment of the full DHCPv4 service configuration to a server. The POST request is sent to the `/deployments` subcollection of the server resource.
      value:
        type: FullDeployment
        service: DHCPv4
    deploymentRoleExamplePrimaryDnsDeploymentRole:
      summary: Assign a primary DNS server role
      description: Assigns a deployment role for a primary DNS server.
      value:
        type: DNSDeploymentRole
        roleType: PRIMARY
        interfaces:
          - id: 1234
            type: NetworkInterface
    deploymentRoleExampleSecondaryDnsDeploymentRole:
      summary: Assign a secondary DNS server role
      description: Assigns a deployment role for a secondary DNS server.
      value:
        type: DNSDeploymentRole
        roleType: SECONDARY
        interfaces:
          - id: 1234
            type: NetworkInterface
    deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer:
      summary: Assign a secondary DNS server role with a zone transfer interface
      description: Assigns a deployment role for a secondary DNS server with a zone transfer interface of the primary DNS server.
      value:
        type: DNSDeploymentRole
        roleType: SECONDARY
        interfaces:
          - id: 1234
            type: PublishedInterface
            deploymentRoleInterfaceType: SERVICE
          - id: 2345
            type: NetworkInterface
            deploymentRoleInterfaceType: ZONE_TRANSFER
    deploymentRoleExampleDhcpDeploymentRole:
      summary: Assign a DHCP server role
      description: Assigns a deployment role for a DHCP server.
      value:
        type: DHCPDeploymentRole
        roleType: PRIMARY
        interfaces:
          - id: 1234
            type: NetworkInterface
    deploymentRoleExampleDhcpDeploymentRoleInFailover:
      summary: Assign a DHCP server role in failover configuration
      description: Assigns a deployment role for a pair of DHCP servers in a failover configuration.
      value:
        type: DHCPDeploymentRole
        roleType: PRIMARY
        interfaces:
          - id: 1234
            type: NetworkInterface
            deploymentRoleInterfaceType: PRIMARY
          - id: 2345
            type: PublishedInterface
            deploymentRoleInterfaceType: SECONDARY
    deploymentRoleExampleTftpDeploymentRole:
      summary: Assign a TFTP server role
      description: Assigns a deployment role for a TFTP server.
      value:
        type: TFTPDeploymentRole
        roleType: TFTP
        server:
          id: 1234
          type: Server
    deviceExampleWithoutTypeOrSubtype:
      summary: Create a device
      description: Creates a device without a type or subtype.
      value:
        name: device-name
    deviceExampleWithType:
      summary: Create a device using a device type
      description: Creates a device of the supplied device type.
      value:
        name: device-name
        deviceType:
          id: 1234
          type: DeviceType
    deviceExampleWithSubtype:
      summary: Create a device using a device type
      description: Creates a device of the supplied device subtype. The device type will be inferred based on the parent of the device subtype.
      value:
        name: device-name
        deviceSubtype:
          id: 1234
          type: DeviceSubtype
    deviceExampleWithAddress:
      summary: Create a device with assigned IP addresses
      description: Creates a device and assign IP addresses to the device. If an address does not exist, it will be created.
      value:
        name: device-name
        addresses:
          - id: 1234
            type: IPv4Address
          - address: 10.0.0.5
            type: IPv4Address
    deviceSubtypeExampleRequiredFields:
      summary: Create a device subtype
      description: Creates a device subtype using the supplied name.
      value:
        name: subtype-name
    deviceTypeExampleRequiredFields:
      summary: Create a device type
      description: Creates a device type using the supplied name.
      value:
        name: type-name
    favoriteExampleAddFavorite:
      summary: Add a favorite resource
      description: Adds a resource to a user's list of favorites.
      value:
        type: IPv4Block
        id: 12345
    groupExampleAddNonAdminGroup:
      summary: Create a user group
      description: Creates a user group using the address manager authenticator and without administrator privileges.
      value:
        name: group-name
        administratorPrivilege: false
    groupExampleAddUserToGroup:
      summary: Add a user to a group
      description: Adds a user to an existing group.
      value:
        type: User
        id: 12345
    importResourceExampleQueueImport:
      summary: Queue an uploaded migration file
      description: Updates the state of an uploaded migration file from PENDING to QUEUED.
      value:
        state: QUEUED
    importResourceExampleNetworkResourceImport:
      summary: Create an IPv4 network import
      description: Import a list of IPv4 networks to a block.
      value: |-
        type,name,range
        IPv4Network,network1,10.0.1.0/24
        IPv4Network,network2,10.0.2.0/24
    importResourceExampleAddressResourceImport:
      summary: Create an IPv4 address import
      description: Import a list of IPv4 addresses to a network with an assigned state of STATIC.
      value: |-
        type,address,macAddress.address,state
        IPv4Address,10.0.0.10,"AA-BB-CC-DD-EE-FF",STATIC
        IPv4Address,10.0.0.11,"11-22-33-44-55-66",STATIC
    importResourceExampleZoneResourceImport:
      summary: Create a view import
      description: Import a list of zones to a view.
      value: |-
        type,name,deploymentEnabled
        Zone,com,false
        Zone,example.com,true
        Zone,demo.org,true
    importResourceExampleResourceRecordResourceImport:
      summary: Create a zone import
      description: Import a list of host records to a zone.
      value: |-
        type,name,addresses[0].address,addresses[0].type
        HostRecord,example-host,10.0.0.2,IPv4Address
        HostRecord,example-host2,10.0.0.3,IPv4Address
    interfaceExamplePublishedInterface:
      summary: Add a published interface
      description: Adds a published network interface to a server. The `name` field must be set to the fully qualified domain name of the server. A published interface can be used to associate addresses that may be on the other side of a Network Address Translation (NAT) gateway or firewall.
      value:
        type: PublishedInterface
        name: bdds2.acme.com
        primaryAddress: 192.168.0.11
        secondaryAddress: FC00::11
    ipGroupExampleIpv4StartAndEndAddress:
      summary: Create an IPv4 group with a start and end address
      description: Creates an IPv4 group with a starting IP address of 192.168.0.20 and an ending IP address of 192.168.0.30.
      value:
        type: IPv4Group
        name: example-ip-group
        range: 192.168.0.20-192.168.0.30
    ipGroupExampleIpv4OffsetAndSize:
      summary: Create an IPv4 group with an offset and size
      description: Creates an IPv4 group with an offset of 20 IP addresses from the start of the parent network and contains 30 IP addresses.
      value:
        type: IPv4Group
        name: example-ip-group
        range: 20,30
    ipGroupExampleIpv4OffsetAndPercentage:
      summary: Create an IPv4 group with an offset and percentage
      description: Creates an IPv4 group with an offset of 20 IP addresses from the start of the parent network and is 15% of the size of the parent network.
      value:
        type: IPv4Group
        name: example-ip-group
        range: 20,15%
    ipGroupExampleIpv4NegativeOffsetAndSize:
      summary: Create an IPv4 group with a negative offset and size
      description: Creates an IPv4 group with an offset of 40 IP addresses from the end of the parent network and contains 30 IP addresses.
      value:
        type: IPv4Group
        name: example-ip-group
        range: -40,30
    keyDistributionCenterExampleRequiredFields:
      summary: Create a key distribution center
      description: Creates a key distribution center using an address as the host and the default port value of 88.
      value:
        name: KDC-1
        host: 192.168.0.10
    locationExampleLocation:
      summary: Create a location
      description: Creates a location corresponding to an office in Toronto, Ontario.
      value:
        name: BlueCat Networks Office
        description: The main office of BlueCat Networks.
        code: CA TOR BCN
    macAddressExampleMacAddress:
      summary: Create a MAC address
      description: Creates a MAC address and associates it with the supplied MAC pool.
      value:
        address: 12-34-56-AB-CD-EF
        macPool:
          type: MACPool
          id: 12345
    macAddressExampleDeniedMacAddress:
      summary: Create a denied MAC address
      description: Creates a MAC address and associates it with the supplied Deny MAC pool.
      value:
        address: 12-34-56-AB-CD-EF
        macPool:
          type: DenyMACPool
          id: 12345
    macAddressExampleAddToMacPool:
      summary: Add a MAC address to a MAC pool
      description: Adds an existing MAC address to a MAC pool.
      value:
        type: MACAddress
        id: 12345
    macPoolExampleRequiredFields:
      summary: Create a MAC pool
      description: Creates a MAC pool using the supplied name.
      value:
        type: MACPool
        name: example-pool
    mergeExampleIpv4Blocks:
      summary: Merge IPv4 blocks
      description: Merge sibling IPv4 blocks into an existing sibling or parent block.
      value:
        type: IPv4BlockMerge
        blocks:
          - id: 123456
            type: IPv4Block
          - id: 234567
            type: IPv4Block
        destination:
          id: 123456
          type: IPv4Block
    mergeExampleIpv4Networks:
      summary: Merge IPv4 networks
      description: Merge sibling IPv4 networks into an existing sibling network.
      value:
        type: IPv4NetworkMerge
        networks:
          - id: 123456
            type: IPv4Network
          - id: 234567
            type: IPv4Network
        destination:
          id: 123456
          type: IPv4Network
    mergeExampleIpv4DhcpRanges:
      summary: Merge IPv4 DHCP ranges
      description: Merge sibling IPv4 DHCP ranges into an existing sibling range.
      value:
        type: IPv4DHCPRangeMerge
        ranges:
          - id: 123456
            type: IPv4DHCPRange
          - id: 234567
            type: IPv4DHCPRange
        destination:
          id: 123456
          type: IPv4DHCPRange
    moveExampleIpv4Address:
      summary: Move an IPv4 address
      description: Moves an IPv4 address to the supplied address.
      value:
        destination:
          address: 10.20.0.10
        type: IPv4AddressMove
    moveExampleIpv6Address:
      summary: Move an IPv6 address
      description: Moves an IPv6 address to the supplied address.
      value:
        destination:
          address: fc00:ab:12::1234
        type: IPv6AddressMove
    moveExampleIpv4Block:
      summary: Move an IPv4 block
      description: Moves an IPv4 block to the supplied range.
      value:
        destination:
          range: 10.20.0.0/16
        type: IPv4BlockMove
    moveExampleIpv6Block:
      summary: Move an IPv6 block
      description: Moves an IPv6 block to the supplied range.
      value:
        destination:
          range: fc00:ab:12::/64
        type: IPv6BlockMove
    moveExampleIpv4Network:
      summary: Move an IPv4 network
      description: Moves an IPv4 network to the supplied range.
      value:
        destination:
          range: 10.20.0.0/24
        type: IPv4NetworkMove
    moveExampleIpv6Network:
      summary: Move an IPv6 network
      description: Moves an IPv6 network to the supplied range.
      value:
        destination:
          range: fc00:ab:12::/64
        type: IPv6NetworkMove
    moveExampleResourceRecord:
      summary: Move a resource record
      description: Moves an resource record to the supplied absolute name.
      value:
        destination:
          absoluteName: txt.destination.com
        type: ResourceRecordMove
    moveExampleDeploymentRoles:
      summary: Move deployment roles
      description: Moves DHCP and DNS deployment roles to the supplied server interface.
      value:
        destination:
          id: 1234
        roleTypes:
          - DHCPDeploymentRole
          - DNSDeploymentRole
        type: DeploymentRoleMove
    moveExampleDnsDeploymentRoles:
      summary: Move DNS deployment roles
      description: Moves DNS deployment roles to the supplied server interface.
      value:
        destination:
          id: 1234
        roleTypes:
          - DNSDeploymentRole
        type: DeploymentRoleMove
    moveExampleZone:
      summary: Move a zone
      description: Moves an zone to the supplied absolute name.
      value:
        destination:
          absoluteName: foo.destination.com
    namingPolicyExampleRequiredFields:
      summary: Create a naming policy
      description: Creates a naming policy using the supplied name.
      value:
        name: example-policy
    namingPolicyExampleApplyPolicyToView:
      summary: Apply a naming policy to a view
      description: Applies an existing naming policy to a view.
      value:
        type: NamingPolicy
        id: 12345
    namingPolicyExampleApplyPolicyToZone:
      summary: Apply a naming policy to a zone
      description: Applies an existing naming policy to a zone.
      value:
        type: NamingPolicy
        id: 12345
    namingPolicyRestrictionExampleIpv4Blocks:
      summary: Create a naming policy restriction
      description: Creates a naming policy restriction using "any" and "exact" match types.
      value:
        name: example-restriction
        restrictions:
          - matchType: ANY
            value: test
          - matchType: EXACT
            value: restricted
    namingPolicyValueExampleConnector:
      summary: Create a naming policy connector value
      description: Creates a naming policy connector value using "-" as the connector.
      value:
        type: NamingPolicyConnectorValue
        name: example-connector
        connector: '-'
    namingPolicyValueExampleIncremental:
      summary: Create a naming policy incremental value
      description: Creates a naming policy incremental value using a decimal counter starting at 1 and incrementing by 1.
      value:
        type: NamingPolicyIncrementalValue
        name: example-incremental
        incrementalRole: COUNTER
        incrementType: DECIMAL
        paddingType: NONE
    namingPolicyValueExampleInteger:
      summary: Create a naming policy integer value
      description: Creates a naming policy integer value with a minimum of 1 and a maximum of 25.
      value:
        type: NamingPolicyIntegerValue
        name: example-integer
        min: 1
        max: 25
    namingPolicyValueExampleRequired:
      summary: Create a naming policy required value
      description: Creates a naming policy required value using the two supplied possible values.
      value:
        type: NamingPolicyRequiredValue
        name: example-required
        elements:
          - name: main
            value: toronto
          - name: secondary
            value: vancouver
    namingPolicyValueExampleText:
      summary: Create a naming policy text value
      description: Creates a naming policy text value with a minimum length of 2 and a maximum length of 10.
      value:
        type: NamingPolicyTextValue
        name: example-text
        textType: LENGTH
        minLength: 2
        maxLength: 10
    networkExampleIpv4Cidr:
      summary: IPv4Block with CIDR
      description: Creates a new IPv4 network using CIDR notation.
      value:
        type: IPv4Network
        range: 192.168.0.0/24
    networkExampleIpv4StartAddressAndNetmask:
      summary: IPv4Network with a start address and netmask
      description: Creates a new IPv4 network using a starting IP address and the netmask of the network.
      value:
        type: IPv4Network
        range: 192.168.0.0/255.255.255.0
    networkExampleIpv4StartAndEndAddress:
      summary: IPv4Network with a start and end address
      description: Creates a new IPv4 network using a starting network IP address and ending network IP address of the block.
      value:
        type: IPv4Network
        range: 192.168.0.0-192.168.0.255
    networkExampleIpv4NextAvailable:
      summary: IPv4Network without a specified start address
      description: Creates a new IPv4 network using only the CIDR notation of the network. The network is created using the first available IPv4 network of the parent block with the listed CIDR notation.
      value:
        type: IPv4Network
        range: /24
    notificationGroupExampleNotificationTypeSnmpTrapService:
      summary: Create a new notification group of type SMTP Service
      description: Create a new notification group with notification type of SNMP Trap.
      value:
        name: example-notification-group
        notificationType: SMTP_SERVICE
    notificationGroupExampleNotificationTypeSmtpService:
      summary: Create a new notification group of type SNMP Trap Service
      description: Create a new notification group with notification type of SMTP Service.
      value:
        notificationType: SNMP_TRAP_SERVICE
    patchApplicationExampleApplyServerPatch:
      summary: Apply a patch file
      description: Apply a patch identified by filename.
      value:
        type: ServerPatchApplication
        patch:
          name: bdds64_9.5.1-005_HOTFIX-418_noarch_arm64.tar.gz
    policyItemExampleRequiredFields:
      summary: Create a policy item
      description: Creates a policy item for "example.com".
      value:
        name: example.com
    rangeExampleIpv4StartAndEndAddress:
      summary: IPv4DHCPRange with a start and end address
      description: Creates an IPv4 DHCP range with a starting IP address of 192.168.0.20 and an ending IP address of 192.168.0.30.
      value:
        type: IPv4DHCPRange
        range: 192.168.0.20-192.168.0.30
    rangeExampleIpv4OffsetAndSize:
      summary: IPv4DHCPRange with an offset and size
      description: Creates an IPv4 DHCP range with an offset of 20 IP addresses from the start of the parent network and contains 30 IP addresses.
      value:
        type: IPv4DHCPRange
        range: 20,30
    rangeExampleIpv4OffsetAndPercentage:
      summary: IPv4DHCPRange with an offset and percentage
      description: Creates an IPv4 DHCP range with an offset of 20 IP addresses from the start of the parent network and is 15% of the size of the parent network.
      value:
        type: IPv4DHCPRange
        range: 20,15%
    rangeExampleIpv4NegativeOffsetAndSize:
      summary: IPv4DHCPRange with a negative offset and size
      description: Creates an IPv4 DHCP range with an offset of 40 IP addresses from the end of the parent network and contains 30 IP addresses.
      value:
        type: IPv4DHCPRange
        range: -40,30
    rangeExampleIpv6StartAndEndAddress:
      summary: IPv6DHCPRange with a start and end address
      description: Creates an IPv6 DHCP range with a starting IP address of FC00::20 and an ending IP address of FC00::30.
      value:
        type: IPv6DHCPRange
        range: FC00::20-FC00::30
    rangeExampleIpv6OffsetAndSize:
      summary: IPv6DHCPRange with an offset and size
      description: Creates an IPv6 DHCP range with an offset of 20 IP addresses from the start of the parent network and contains 10 IP addresses.
      value:
        type: IPv6DHCPRange
        range: 20,10
    rangeExampleIpv6OffsetAndPercentage:
      summary: IPv6DHCPRange with an offset and percentage
      description: Creates an IPv6 DHCP range with an offset of 20 IP addresses from the start of the parent network and is 1% of the size of the parent network.
      value:
        type: IPv6DHCPRange
        range: 20,1%
    rangeExampleIpv6NegativeOffsetAndSize:
      summary: IPv6DHCPRange with a negative offset and size
      description: Creates an IPv6 DHCP range with an offset of 40 IP addresses from the end of the parent network and contains 30 IP addresses.
      value:
        type: IPv6DHCPRange
        range: -40,30
    rangeExampleIpv6NextAvailable:
      summary: IPv6DHCPRange without a specific start address
      description: Creates an IPv6 DHCP range starting from the first available IP address and contains 256 IP addresses, as defined by the /120 CIDR subnet notation.
      value:
        type: IPv6DHCPRange
        range: /120
    realmExampleRequiredFields:
      summary: Create a realm
      description: Creates a realm using the supplied name and domain.
      value:
        name: example.company.net
        domain: EXAMPLE.COMPANY.NET
    reconciliationPolicyExampleIpv4NoDiscovery:
      summary: Create an IPv4 reconciliation policy (no discovery)
      description: Creates an IPv4 reconciliation policy using no discovery.
      value:
        type: IPv4ReconciliationPolicy
        name: ipv4-no-discovery
        enabled: true
        discoveryMethod: NO_DISCOVERY
        networkBoundaries:
          - 192.168.0.0/16
        startDateTime: "2023-01-01T00:00:00Z"
        frequency: P1D
    reconciliationPolicyExampleIpv4Snmpv1:
      summary: Create an IPv4 reconciliation policy (snmpv1)
      description: Creates an IPv4 reconciliation policy using SNMPv1 discovery.
      value:
        type: IPv4ReconciliationPolicy
        name: ipv4-snmpv1
        enabled: true
        discoveryMethod: SNMP
        networkBoundaries:
          - 192.168.0.0/16
        seedRouterAddresses:
          - 192.168.0.1
        snmp:
          version: v1
          communities:
            - bcnCommunityV1
        dnsServers:
          - 192.168.0.11
        startDateTime: "2023-01-01T00:00:00Z"
        frequency: P1D
    reconciliationPolicyExampleIpv4Snmpv2c:
      summary: Create an IPv4 reconciliation policy (snmpv2c)
      description: Creates an IPv4 reconciliation policy using SNMPv2c discovery.
      value:
        type: IPv4ReconciliationPolicy
        enabled: true
        name: ipv4-snmpv2c
        discoveryMethod: SNMP
        networkBoundaries:
          - 192.168.0.0/16
        seedRouterAddresses:
          - 192.168.0.1
        snmp:
          version: v2c
          communities:
            - bcnCommunityV2C
        dnsServers:
          - 192.168.0.11
        startDateTime: "2023-01-01T00:00:00Z"
        frequency: P1D
    reconciliationPolicyExampleIpv4Snmpv3:
      summary: Create an IPv4 reconciliation policy (snmpv3)
      description: Creates an IPv4 reconciliation policy using SNMPv3 discovery.
      value:
        type: IPv4ReconciliationPolicy
        name: ipv4-snmpv3
        enabled: true
        discoveryMethod: SNMP
        networkBoundaries:
          - 192.168.0.0/16
        seedRouterAddresses:
          - 192.168.0.1
        snmp:
          version: v3
          securityLevel: AUTH_PRIV
          usernames:
            - user
          authenticationProtocol: SHA
          authenticationPassphrase: password
          privacyProtocol: AES128
          privacyPassphrase: password
        dnsServers:
          - 192.168.0.11
        startDateTime: "2023-01-01T00:00:00Z"
    reconciliationPolicyExampleIpv4PingSweep:
      summary: Create an IPv4 reconciliation policy (pingsweep)
      description: Creates an IPv4 reconciliation policy using pingsweep discovery.
      value:
        type: IPv4ReconciliationPolicy
        enabled: true
        name: ipv4-pingsweep
        discoveryMethod: PINGSWEEP
        networkBoundaries:
          - 192.168.0.0/16
        pingSweepNetworkGaps:
          - 192.168.1.0/24
        dnsServers:
          - 192.168.0.11
        startDateTime: "2023-01-01T00:00:00Z"
        frequency: P1D
    reconciliationPolicyExampleIpv4Snmpv3Pingsweep:
      summary: Create an IPv4 reconciliation policy (snmpv3 + pingsweep) with acceptance criteria
      description: Creates an IPv4 reconciliation policy using SNMPv3 and pingsweep discovery with automatic acceptance criteria.
      value:
        type: IPv4ReconciliationPolicy
        name: ipv4-snmpv3-pingsweep
        enabled: true
        discoveryMethod: SNMP_PINGSWEEP
        networkBoundaries:
          - 192.168.0.0/16
        pingSweepNetworkGaps:
          - 192.168.1.0/24
        seedRouterAddresses:
          - 192.168.0.1
        snmp:
          version: v3
          securityLevel: AUTH_PRIV
          usernames:
            - user
          authenticationProtocol: SHA
          authenticationPassphrase: password
          privacyProtocol: AES128
          privacyPassphrase: password
        dnsServers:
          - 192.168.0.11
        startDateTime: "2023-01-01T00:00:00Z"
        frequency: P1D
        reclaimAcceptanceAge: PT1H
        unknownAcceptanceAge: PT1H
        mismatchAcceptanceAge: PT1H
    reconciliationPolicyExampleIpv6NoDiscovery:
      summary: Create an IPv6 reconciliation policy (no discovery)
      description: Creates an IPv6 reconciliation policy using no discovery.
      value:
        type: IPv6ReconciliationPolicy
        name: ipv6-no-discovery
        enabled: true
        discoveryMethod: NO_DISCOVERY
        startDateTime: "2023-01-01T00:00:00Z"
        frequency: P1D
    reconciliationPolicyExampleIpv6Snmpv1:
      summary: Create an IPv6 reconciliation policy (snmpv1)
      description: Creates an IPv6 reconciliation policy using SNMPv1 discovery.
      value:
        type: IPv6ReconciliationPolicy
        name: ipv6-snmpv1
        enabled: true
        discoveryMethod: SNMP
        seedRouterAddresses:
          - FC00::1
        snmp:
          version: v1
          communities:
            - bcnCommunityV1
        dnsServers:
          - FC00::11
        startDateTime: "2023-01-01T00:00:00Z"
        frequency: P1D
    reconciliationPolicyExampleIpv6Snmpv2:
      summary: Create an IPv6 reconciliation policy (snmpv2c)
      description: Creates an IPv6 reconciliation policy using SNMPv2c discovery.
      value:
        type: IPv6ReconciliationPolicy
        name: ipv6-snmpv2c
        enabled: true
        discoveryMethod: SNMP
        seedRouterAddresses:
          - FC00::1
        snmp:
          version: v2c
          communities:
            - bcnCommunityV2C
        dnsServers:
          - FC00::11
        startDateTime: "2023-01-01T00:00:00Z"
        frequency: P1D
    reconciliationPolicyExampleIpv6Snmpv3:
      summary: Create an IPv6 reconciliation policy (snmpv3)
      description: Creates an IPv6 reconciliation policy using SNMPv3 discovery.
      value:
        type: IPv6ReconciliationPolicy
        name: ipv6-snmpv3
        enabled: true
        discoveryMethod: SNMP
        seedRouterAddresses:
          - FC00::1
        snmp:
          version: v3
          securityLevel: AUTH_PRIV
          usernames:
            - user
          authenticationProtocol: SHA
          authenticationPassphrase: password
          privacyProtocol: AES128
          privacyPassphrase: password
        dnsServers:
          - FC00::11
        startDateTime: "2023-01-01T00:00:00Z"
        frequency: P1D
    resourceRecordExampleLinkHostRecord:
      summary: Link address to a host record
      description: Links an address to an existing host record.
      value:
        type: HostRecord
        id: 12345
    resourceRecordExampleAlias:
      summary: Create an alias record
      description: Creates an alias record for the supplied host record.
      value:
        type: AliasRecord
        name: example-alias
        linkedRecord:
          type: HostRecord
          id: 123456
    resourceRecordExampleExternalHost:
      summary: Create an external host record
      description: Creates an external host record.
      value:
        type: ExternalHostRecord
        name: host.external.com
    resourceRecordExampleGeneric:
      summary: Create a generic record
      description: Creates a generic SSHFP record.
      value:
        type: GenericRecord
        name: example-generic
        recordType: SSHFP
        rdata: 2 1 123456789abcdef67890123456789abcdef67890
    resourceRecordExampleHinfo:
      summary: Create a HINFO record
      description: Creates a HINFO record for a linux server.
      value:
        type: HINFORecord
        name: example-hinfo
        os: Debian Linux 5.10
        cpu: INTEL
    resourceRecordExampleHost:
      summary: Create a host record
      description: Creates a host record for an IPv4 and an IPv6 address.
      value:
        type: HostRecord
        name: example-host
        addresses:
          - type: IPv4Address
            id: 12345
          - type: IPv6Address
            id: 23456
    resourceRecordExampleMx:
      summary: Create an MX record
      description: Creates an MX record for the supplied host record.
      value:
        type: MXRecord
        name: example-mx
        linkedRecord:
          type: HostRecord
          id: 123456
    resourceRecordExampleNaptr:
      summary: Create a NAPTR record
      description: Creates a NAPTR record.
      value:
        type: NAPTRRecord
        name: example-naptr
        service: SIP+D2U
        replacement: _sip._udp.example.com.
    resourceRecordExampleSrv:
      summary: Create an SRV record
      description: Creates an SRV record for the supplied host record.
      value:
        type: SRVRecord
        name: example-srv
        linkedRecord:
          type: HostRecord
          id: 123456
        port: 5432
    resourceRecordExampleTxt:
      summary: Create a TXT record
      description: Creates a TXT record using the supplied text.
      value:
        type: TXTRecord
        name: example-txt
        text: text value
    resourceRecordExampleUri:
      summary: Create a URI record
      description: Creates a URI record
      value:
        type: URIRecord
        name: example-uri
        priority: 5
        weight: 60
        target: www.example-target.com
    resourceRecordExampleHttps:
      summary: Create a HTTPS record
      description: Creates a HTTPS record for the supplied host record
      value:
        type: HTTPSRecord
        name: example-https
        linkedRecord:
          id: 123456
          type: HostRecord
        priority: 2
        serviceParameters:
          alpnIdentifiers:
            - h2
            - h3
          privateUseValues:
            key65280: example
          port: 5432
          ipv4AddressHints:
            - 1.1.1.1
            - 2.2.2.2
          defaultAlpnIdentifierEnabled: true
          encryptedClientHello: ezEsMn0=
          ipv6AddressHints:
            - 2001:db8:3333:4444:5555:6666:7777:8888
          mandatoryKeys:
            - alpnIdentifiers
    resourceRecordExampleSvcb:
      summary: Create a SVCB record
      description: Creates a SVCB record for the supplied host record
      value:
        type: SVCBRecord
        name: example-svcb
        linkedRecord:
          id: 123456
          type: HostRecord
        priority: 2
        serviceParameters:
          alpnIdentifiers:
            - h2
            - h3
          privateUseValues:
            key65280: example
          port: 5432
          ipv4AddressHints:
            - 1.1.1.1
            - 2.2.2.2
          defaultAlpnIdentifierEnabled: true
          encryptedClientHello: ezEsMn0=
          ipv6AddressHints:
            - 2001:db8:3333:4444:5555:6666:7777:8888
          mandatoryKeys:
            - alpnIdentifiers
    responsePolicyExampleRequiredFields:
      summary: Create a response policy
      description: Creates an allow list response policy.
      value:
        type: ResponsePolicy
        name: example-allow-policy
        policyType: ALLOWLIST
    restrictedRangeExampleAddRestrictedNetworkToView:
      summary: Add a network to a view's restricted ranges
      description: Adds an IPv4 network to a view's list of restricted ranges. Restricted ranges limit the block and network resources that can be assigned to resources within a view.
      value:
        type: IPv4Network
        id: 12345
    restrictedRangeExampleAddRestrictedBlockToZone:
      summary: Add a block to a zone's restricted ranges
      description: Adds an IPv4 block to a zone's list of restricted ranges. Restricted ranges limit the block and network resources that can be assigned to resources within a zone.
      value:
        type: IPv4Block
        id: 12345
    restrictedZoneExampleAddRestrictedZoneToBlock:
      summary: Add a zone to a block's restricted zones
      description: Adds a zone to a block's list of restricted zones. Restricted zones limit the zone resources that can be assigned to resources within a block.
      value:
        type: Zone
        id: 12345
    restrictedZoneExampleAddRestrictedZoneToNetwork:
      summary: Add a zone to a network's restricted zones
      description: Adds a zone to a network's list of restricted zones. Restricted zones limit the zone resources that can be assigned to resources within a network.
      value:
        type: Zone
        id: 12345
    scheduleExamplePatchDatabaseScheduleExample:
      summary: Perform a manual backup
      description: Executes a database backup profile immediately.
      value:
        state: QUEUED
    scheduleExampleFullDnsDeployment:
      summary: Create a full DNS deployment schedule
      description: Creates a schedule for hourly full DNS deployments.
      value:
        type: DeploymentSchedule
        name: example-deployment-schedule
        startDateTime: "2023-01-01T00:00:00Z"
        interval: PT1H
        enabled: true
        deploymentType: FullDeployment
        deploymentServices:
          - DNS
        servers:
          - id: 123456
            type: Server
    scheduleExampleOptionalFields:
      summary: Database backup profile with optional fields
      description: Creates a database backup profile that includes all configurable options.
      value:
        name: backupName
        localBackupsEnabled: true
        remoteBackupsEnabled: false
        startDateTime: "2023-01-01T00:00:00Z"
        interval: P7D
        maxFileCount: 20
        filePrefix: daily
        remoteHost: 123.123.123.1
        remoteDirectory: //backups
        remoteUser: User1
        remotePassword: password
        transferProtocol: FTP
    scheduleExampleRequiredFields:
      summary: Database backup profile with required fields only
      description: Creates a database backup profile using required fields only.
      value:
        name: backupName
        localBackupsEnabled: true
        remoteBackupsEnabled: false
    scheduleExampleLinkServerGroupToDeploymentSchedule:
      summary: Link a server group to a deployment schedule
      description: Adds the multi-primary server group to the list of existing server groups in the deployment schedule.
      value:
        id: 1234
        type: DeploymentSchedule
    scheduleExampleLinkServerToDeploymentSchedule:
      summary: Link a server to a deployment schedule
      description: Links a managed DNS/DHCP Server to a deployment schedule for automated deployments.
      value:
        id: 1234
    serverGroupExampleRequiredFields:
      summary: Create a server group
      description: Creates a server group using the supplied name.
      value:
        name: example-group
    serverGroupExampleMultiPrimary:
      summary: Create a multi-primary server group
      description: Creates a multi-primary server group using the supplied name. Multi-primary server groups allow you to deploy multi-primary DNS zones on all servers that are part of a multi-primary server group. To enable multi-primary DNS zones, you must configure a MULTI_PRIMARY or HIDDEN_MULTI_PRIMARY deployment role at the DNS zone level and assign the deployment role to the multi-primary server group.
      value:
        name: example-group
        multiPrimary: true
    serverGroupExampleLinkServerGroupToDeploymentSchedule:
      summary: Link a server group to a deployment schedule
      description: Adds the server group to the list of existing server groups in the deployment schedule.
      value:
        id: 1234
        type: ServerGroup
    serverExampleReplicationFailover:
      summary: Failover database replication to a new Address Manager server
      description: Triggers a replication failover to set the new Address Manager server as primary. This Address Manager server must be the current primary and the new Address Manager server must have contactable.
      value:
        state: PRIMARY
    serverExampleDisableServer:
      summary: Disable a BDDS server
      description: Disables a BlueCat DNS/DHCP server. Disabled servers can no longer be deployed to,  receive DDNS updates or host services
      value:
        state: DISABLED
    serverExampleFailoverHaServer:
      summary: Failover an xHA server
      description: 'Triggers a manual xHA failover. After a successful xHA failover, the roles of the servers in the xHA pair are reversed: the passive server becomes the active node, and the formerly active server becomes the passive node.'
      value:
        state: FAILOVER
    serverExampleResetControl:
      summary: Reset a BDDS server from Address Manager control
      description: Resets a managed BlueCat DNS/DHCP server from Address Manager control. Prior to resetting, the server must first be disabled
      value:
        state: RESET_CONTROL
    serverExampleCreateBddsServer:
      summary: Create a BDDS server
      description: Creates a connected BlueCat DNS/DHCP server resource. After resource creation, the server is brought under Address Manager control. The `name` field of each `NetworkInterface` resource must be set to a fully qualified domain name of the server.
      value:
        type: Server
        name: bdds1
        profile: DNS_DHCP_GEN4_5000
        password: Passw0rd
        connected: true
        interfaces:
          - type: NetworkInterface
            name: bdds1.acme.com
            managementAddress: 10.0.0.8
    serverExampleCreateHaServer:
      summary: Create an xHA server
      description: Creates a Crossover High Availability (xHA) server from two existing BlueCat DNS/DHCP servers. The `name` field of the `NetworkInterface` resource must be set to the fully qualified domain name of the server.
      value:
        type: HAServer
        name: ha-bdds
        profile: DNS_DHCP_GEN4_5000
        password: Passw0rd
        interfaces:
          - type: NetworkInterface
            name: ha-bdds.acme.com
            managementAddress: 10.0.0.10
            servicesIpv4Address: 10.0.0.10
        activeServer:
          id: 1234
          type: Server
          password: Passw0rd
        passiveServer:
          id: 2345
          type: Server
          password: Passw0rd
    serverExampleAddServerToReplication:
      summary: Add an Address Manager server to a replication cluster
      description: Adds an Address Manager server to a database replication cluster. If a replication cluster does not already exist, a cluster is created. Prior to adding a server to a cluster, a trust relationship must be established with the Address Manager server.
      value:
        type: TrustRelationship
        id: 12345
    serverExampleAddServerToSchedule:
      summary: Add an server to a deployment schedule
      description: Adds a server to a deployment schedule.
      value:
        type: Server
        id: 12345
    serverExampleAddServerToServerGroup:
      summary: Add an server to a server group
      description: Adds a server to a server group.
      value:
        type: Server
        id: 12345
    serverExampleAddServerToZoneGroup:
      summary: Add an server to a zone group
      description: Adds a server to a DHCP zone group.
      value:
        type: Server
        id: 12345
    servicePrincipalExampleUpdatePassword:
      summary: Update a Kerberos service principal password
      description: Updates a Kerberos service principal password.
      value:
        password: Passw0rd!
    servicePrincipalExampleRequiredFields:
      summary: Create a Kerberos service principal
      description: Creates a Kerberos service principal.
      value:
        name: DHCP/dhcp1.bcn.com
        keyVersionNumber: 1
        password: Passw0rd!
    sessionExampleLoggedOut:
      summary: End the current session
      description: Ends the current user's session.
      value:
        state: LOGGED_OUT
    sessionExampleTerminated:
      summary: Terminate a session
      description: Terminates a target user's session.
      value:
        state: TERMINATED
    sessionExampleRequiredFields:
      summary: Create a session
      description: Creates a session using the supplied username and password.
      value:
        username: username
        password: password
    sessionExampleReadOnly:
      summary: Create a read only session
      description: Creates a read only session using the supplied username and password.
      value:
        username: username
        password: password
        readOnly: true
    sharedResourceExampleAddSharedNetwork:
      summary: Tag a network with a shared network tag
      description: Tags an IPv4 network with a shared network tag.
      value:
        type: IPv4Network
        id: 12345
    signingKeyExampleRegenerateTsig:
      summary: Regenerate an existing TSIG key
      description: Regenerate an existing TSIG key given the id.
      value:
        state: REGENERATE
    signingKeyExampleTsig:
      summary: Create a TSIG key
      description: Creates a TSIG key using the supplied key data.
      value:
        type: TSIGKey
        name: example-key
        algorithm: SHA512
        length: 512
        state: GENERATED
    signingKeyExampleGeneratedTsig:
      summary: Create a generated TSIG key
      description: Creates a generated TSIG key of the supplied algorithm and length.
      value:
        type: TSIGKey
        name: example-key
        algorithm: SHA512
        length: 512
        privateKey: zRbm33hQSin82VcUNK1sSBGc5lq1av0b1/GtUflT+vwBjHtMx/KKs9i1biNd66n14hpWlxN5mmBeScOqKPu6qw==
    signingPolicyExampleRequiredFields:
      summary: Create a DNSSEC signing policy
      description: Creates a DNSSEC signing policy using Address Manager as the key provider.
      value:
        name: example-policy
        keyProvider: ADDRESS_MANAGER
        signatureDigestAlgorithm: SHA256
        signatureValidityPeriod: P10D
        signatureResigningPeriod: P2D
        zoneSigningKeyAlgorithm: RSASHA512
        zoneSigningKeyLength: 2048
        zoneSigningKeyValidityPeriod: P30D
        zoneSigningKeyOverlapPeriod: P7D
        zoneSigningKeyRolloverMethod: PRE_PUBLISH
        zoneSigningKeySigningPeriod: P3D
        keySigningKeyAlgorithm: RSASHA512
        keySigningKeyLength: 2048
        keySigningKeyValidityPeriod: P360D
        keySigningKeyOverlapPeriod: P14D
        keySigningKeyRolloverMethod: DOUBLE_SIGNING
    splitExampleIpv4Block:
      summary: Split a child IPv4 block
      description: Splits the IPv4 block using the split point address.
      value:
        type: IPv4BlockSplit
        block:
          id: 1234
          type: IPv4Block
        splitPointAddress: 192.168.128.0
    splitExampleIpv4Network:
      summary: Split a child IPv4 network
      description: Splits the IPv4 network into 4 networks.
      value:
        type: IPv4NetworkSplit
        network:
          id: 1234
          type: IPv4Network
        networkCount: 4
    subclassExampleRequiredFields:
      summary: Create a subclass
      description: Creates a subclass for a hardware client class.
      value:
        value: "0x123456ABCDEF"
    subjectExampleLinkUserWithNotificationGroup:
      summary: Link a user to a notification group
      description: Link a user to a notification group.
      value:
        id: 100895
        type: User
    subjectExampleLinkUserGroupWithNotificationGroup:
      summary: Link a user group to a notification group
      description: Link a user group to a notification group.
      value:
        id: 100896
        type: UserGroup
    tagGroupExampleRequiredFields:
      summary: Create a tag group
      description: Creates a tag group using the supplied name.
      value:
        name: example-group
    tagExampleTagResource:
      summary: Tag a resource
      description: Tags an IPv6 network resource by adding it to a tag's list of tagged resources.
      value:
        type: IPv6Network
        id: 12345
    tagExampleRequiredFields:
      summary: Create a tag
      description: Creates a tag using the supplied name.
      value:
        name: example-tag
    taggedResourceExampleTagResource:
      summary: Tag a resource
      description: Tags an IPv4 block resource by adding it to a tag's list of tagged resources.
      value:
        type: IPv4Block
        id: 12345
    taskExampleRequiredFields:
      summary: Task with required fields
      description: Creates a task for the specified user where the priority of the task is normal, the task has not yet been started, and the percentage of completion is 0.
      value:
        name: example-task
        priority: NORMAL
        state: NOT_STARTED
        percentComplete: 0
    taskExampleOptionalFields:
      summary: Task with optional fields
      description: Creates a task for the specified user where the priority of the task is normal, the task has not yet been started, the percentage of completion is 0, the start date is January 1st at 5:00, the due date is February 1st at 5:00, and includes a comment about the task.
      value:
        name: example-task
        priority: NORMAL
        state: NOT_STARTED
        percentComplete: 0
        startDateTime: "2023-01-01T05:00:00Z"
        dueDateTime: "2023-02-01T05:00:00Z"
        comment: Example comment
    templateApplicationExampleIpv4Template:
      summary: Apply an IPv4 template
      description: Applies an IPv4 template to one or more resources. If the POST request is sent to the template's `/templateApplications` subcollection, the template is applied to all resources that have the template assigned to them. If the POST request is sent to a resource's `/templateApplications` subcollection, the template is only applied to that resource. Templates are re-applied with each POST request.
      value:
        type: IPv4TemplateApplication
    templateApplicationExampleZoneTemplate:
      summary: Apply an zone template
      description: Applies an zone template to one or more resources. If the POST request is sent to the template's `/templateApplications` subcollection, the template is applied to all resources that have the template assigned to them. If the POST request is sent to a resource's `/templateApplications` subcollection, the template is only applied to that resource. Templates are re-applied with each POST request.
      value:
        type: ZoneTemplateApplication
    templateItemExampleIpv4DhcpRange:
      summary: Create a IPv4 DHCP range template item with an offset and size
      description: Creates a new IPv4 DHCP range template item defined by the offset and size. The DHCP range starts with an offset of 10 IP addresses and contains 20 IP addresses.
      value:
        type: IPv4DHCPRangeTemplateItem
        rangeDefinitionFormat: OFFSET_SIZE_FROM_START
        startOffset: 10
        size: 20
    templateItemExampleIpv4Group:
      summary: Create a IPv4 group template item with an offset from the end and size
      description: Creates a new IPv4 group template item defined by the offset from the end and size. The group starts with an offset of 20 IP addresses from the end of the parent range and contains 10 IP addresses.
      value:
        type: IPv4GroupTemplateItem
        name: example-item
        rangeDefinitionFormat: OFFSET_SIZE_FROM_END
        startOffset: 20
        size: 10
    templateItemExampleIpv4ReservedRange:
      summary: Create a IPv4 reserved range template item with an offset and size
      description: Creates a new IPv4 reserved range template item defined by the offset and size. The reserved range starts with an offset of 10 IP addresses and contains20 IP addresses.
      value:
        type: IPv4ReservedRangeTemplateItem
        rangeDefinitionFormat: OFFSET_SIZE_FROM_START
        startOffset: 10
        size: 20
    templateExampleIpv4Template:
      summary: Create an IPv4 template
      description: Creates an IPv4 template. Once created, items can be added to the template by sending POST requests to the template's [/templateItems](#/IPv4%20and%20IPv6%20Resources/postTemplateTemplateItem) subcollection.
      value:
        type: IPv4Template
        name: template1
    templateExampleIpv4TemplateWithTemplateItems:
      summary: Create an IPv4 template with template items
      description: Creates an IPv4 template with template items defined within the body
      value:
        type: IPv4Template
        name: template1
        templateItems:
          - type: IPv4DHCPRangeTemplateItem
            rangeDefinitionFormat: OFFSET_SIZE_FROM_START
            startOffset: 10
            size: 20
    templateExampleZoneTemplate:
      summary: Create a zone template
      description: Creates a zone template. Once created, resource records and deployment options can be added to the zone template by sending a POST request to its [/deploymentOptions](#/Deployment%20Option%20Resources/getDeploymentOptions) subcollection.
      value:
        type: ZoneTemplate
        name: template1
    tftpGroupExampleRequiredFields:
      summary: Create a TFTP group
      description: Creates a TFTP group using the supplied name.
      value:
        name: example-group
    transactionExampleUndo:
      summary: Undo a transaction
      description: Undoes the specified transaction.
      value:
        transactionType: UNDO
        transactionId: 1234
    trustRelationshipExampleRefreshTrustRelationship:
      summary: Update an existing trust relationship
      description: Update an existing trust relationship between the current Address Manager and another Address Manager to refresh keys.
      value:
        state: REFRESH_KEYS
    trustRelationshipExampleCreateTrustRelationship:
      summary: Create a trust relationship
      description: Creates a trust relationship between the current Address Manager and another Address Manager
      value:
        type: TrustRelationship
        address: 192.168.1.1
        username: apiUser
        password: apiPassword
    userDefinedFieldDefinitionExampleText:
      summary: Create a text user defined field definition
      description: Creates a required text user defined field definition for configuration resources with a set of predefined values.
      value:
        name: textField
        displayName: Text Field
        resourceType: Configuration
        dataType: TEXT
        required: true
        predefinedValues:
          - Option A
          - Option B
    userDefinedLinkDefinitionExampleUndo:
      summary: Create a user defined link definition
      description: Creates a user defined link definition between IPv4 addresses and IPv4 blocks.
      value:
        name: ADDR_BLOCK
        displayName: Address to Block
        sourceTypes:
          - IPv4Address
        destinationTypes:
          - IPv4Block
    userDefinedLinkExampleLinkResource:
      summary: Link resources
      description: Create a link between two resources using a user-defined link definition.
      value:
        id: 1234
        linkDefinition:
          id: 2345
          type: UserDefinedLinkDefinition
    userDefinedLinkExampleLinkResourceWithDescription:
      summary: Link resources with description
      description: Create a link between two resources using a user-defined link definition and include a link description.
      value:
        id: 1234
        linkDescription: link description
        linkDefinition:
          id: 2345
          type: UserDefinedLinkDefinition
    userExampleChangePassword:
      summary: Change a user password
      description: Updates a user's password.
      value:
        password: Passw0rd!
    userExampleAddUserToGroup:
      summary: Add user to a group
      description: Adds an existing user to a group.
      value:
        type: User
        id: 12345
    userExampleAddNonAdminUser:
      summary: Create a user
      description: Creates a user with GUI and API access, and without administrative privileges.
      value:
        name: user
        password: Passw0rd!
        email: user@company.com
        securityPrivilege: VIEW_MY_ACCESS_RIGHTS
        accessType: GUI_AND_API
        passwordResetRequired: true
    vendorProfileExampleRequiredFields:
      summary: Create a vendor profile
      description: Creates a vendor profile for Cisco IP phones.
      value:
        name: Cisco IP phones
        identifier: Cisco Systems, Inc. IP Phone CP-7940G
        description: Vendor profile for Cisco IP phones
    viewExampleRequiredFields:
      summary: Create a view
      description: Creates a view using the supplied name.
      value:
        name: example-view
    workflowRequestExampleApproveWorkflowRequest:
      summary: Approve a workflow request
      description: Approves a workflow request.
      value:
        state: APPROVED
    workflowRequestExampleDenyWorkflowRequest:
      summary: Deny a workflow request
      description: Deny a workflow request.
      value:
        state: DENIED
    zoneDeclarationExampleForwardZoneDeclarationWithManagedZone:
      summary: Create a reverse zone declaration with a managed zone
      description: Adds a reverse zone declaration for a managed zone to a DHCP zone group.
      value:
        type: DHCPForwardZone
        primaryDnsServerAddress: 10.10.10.10
        zone:
          id: 103307
          type: Zone
    zoneDeclarationExampleForwardZoneDeclarationWithUnmanagedZone:
      summary: Create a forward zone declaration with an unmanaged zone
      description: Adds a forward zone declaration for an unmanaged zone to a DHCP zone group.
      value:
        type: DHCPForwardZone
        primaryDnsServerAddress: 10.10.10.10
        zone:
          absoluteName: example.com
          type: Zone
    zoneDeclarationExampleReverseZoneDeclarationWithManagedNetwork:
      summary: Create a reverse zone declaration with a managed network
      description: Adds a reverse zone declaration for a managed network to a DHCP zone group.
      value:
        type: DHCPReverseZone
        primaryDnsServerAddress: 10.10.10.10
        prefix:
          id: 103307
          type: IPv4Network
    zoneDeclarationExampleReverseZoneDeclarationWithUnmanagedNetwork:
      summary: Create a reverse zone declaration with an unmanaged network
      description: Adds a reverse zone declaration for an unmanaged network to a DHCP zone group.
      value:
        type: DHCPReverseZone
        primaryDnsServerAddress: 10.10.10.10
        prefix:
          range: 10.0.0.0/24
          type: IPv4Network
    zoneGroupExampleAddZoneGroup:
      summary: Create a zone group
      description: Creates a DHCP zone group in a configuration.
      value:
        name: zoneGroup1
    zoneExampleAddZoneToView:
      summary: Create a top-level domain zone
      description: Creates a top-level domain zone in a view.
      value:
        type: Zone
        name: corp
    zoneExampleAddZoneToPendingZone:
      summary: Create a subzone under pending zone
      description: Creates a subzone under a parent zone pending workflow request approval.
      value:
        type: Zone
        name: company
    zoneExampleAddZoneToZone:
      summary: Create a subzone
      description: Creates a subzone under a parent zone.
      value:
        type: Zone
        name: company
  headers:
    Location:
      description: The location of the resource
      required: true
      schema:
        type: string
  securitySchemes:
    bearerToken:
      type: http
      description: Authenticate by providing a valid bearer token
      scheme: bearer
    basicAuthentication:
      type: http
      description: Authenticate using your username and a valid API token as the password
      scheme: basic
